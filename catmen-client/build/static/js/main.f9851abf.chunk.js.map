{"version":3,"sources":["images/SVG/illustration-wizard-go-back.svg","images/SVG/tooltip-reference-image.svg","images/SVG/done-pie-chart.svg","fonts/sofia-bold.woff","images/SVG/fader-right-to-left.svg","images/SVG/fader-left-right.svg","images/SVG/add-variant.svg","images/SVG/create-variant-group.svg","images/SVG/maximize-drawer.svg","images/SVG/close-drawer.svg","images/SVG/restore-drawer.svg","images/SVG/close-modal-and-cancel.svg","images/SVG/drag-files.svg","images/SVG/back-to-spreadsheet.svg","images/SVG/sitch-to-edit-mode.svg","images/SVG/switch-to-read-only.svg","images/SVG/illustration-insert.svg","images/SVG/tooltip-part-number.svg","images/SVG/tooltip-product-groups.svg","images/SVG/illustration-classes.svg","images/SVG/illustration-clear-selection.svg","images/SVG/illustration-delete-items.svg","images/SVG/illustration-delete-rows.svg","images/SVG/illustration-edit.svg","images/SVG/illustration-insert-from-staging.svg","images/SVG/illustration-continue-next-step.svg","images/SVG/illustration-product-name.svg","images/SVG/illustration-click-drag-cells.svg","images/SVG/illustration-card-view.svg","images/SVG/illustration-media-grid.svg","images/SVG/illustration-attribute-mapping.svg","images/SVG/illustration-create-attributes.svg","images/SVG/illustration-catalog.svg","images/SVG/illustration-attribute-groups.svg","images/SVG/upload-illustration.svg","images/SVG/illustration-start.svg","images/SVG/illustration-media-library.svg","images/SVG/illustration-bulk-edit.svg","images/SVG/illustration-edit-with-drawer.svg","images/SVG/illustration-footer-menu.svg","fonts/proximanova-reg.woff","fonts/sofia-reg.woff","view-components/sticky-panel/sticky-panel.tsx","view-components/heru-tool-tip/tool-tip.tsx","view-components/button/app-button.tsx","svg/icons/icons.tsx","view-components/heru-tool-tip/tool-tip-content.tsx","views/tool-tip-content/content-tool-tips.tsx","view-components/modal/modal.tsx","view-components/divider-line/divider-line.tsx","view-components/text-input/text-input.tsx","svg/illustrations/illustrations.tsx","views/wizards/upload-wizard/upload-wizard.tsx","views/wizards/tutorial-wizard/tutorial-wizard.tsx","views/_common/main-header-area/main-header-area.tsx","view-components/list-menu/intra-app-navigation.tsx","view-components/info-panel/info-panel.tsx","views/_catman-configuration/common-app-configuration.tsx","views/landing-page/landing-page-view.tsx","view-components/text-input/standard-text-input.tsx","views/media-library/media-details-view.tsx","view-components/tiles/tile-component.tsx","view-components/data-grid/data-grid.tsx","view-components/data-grid/data-grid-with-edit-drawer.tsx","_sample-data/attributes-data-and-columns.tsx","view-components/title-area/title-area.tsx","views/app-configuration-catman-views/manage-attributes/manage-attributes-view.tsx","views/app-configuration-catman-views/manage-attribute-groups/manage-attribute-groups-view.tsx","views/app-configuration-catman-views/manage-attribute-mappings/manage-attribute-mapping-view.tsx","_sample-data/classes-library.tsx","views/app-configuration-catman-views/manage-classes/manage-classes-view.tsx","views/_common/nav-settings.tsx","views/catalog-views/catalog-overview/catalog-overview-view.tsx","_sample-data/products-data.tsx","views/catalog-views/catalog-details/single-product-view.tsx","view-components/wizard/wizard.tsx","views/wizards/create-product-group/add-variants-wizard.tsx","views/wizards/create-product-group/create-product-group-wizard.tsx","views/catalog-views/catalog-details/catalog-details-view.tsx","views/catalog-views/catalog-dashboard/catalog-dashboard-view.tsx","views/catalog-views/main-catalog/main-catalog.tsx","view-components/cards-area/card-area.tsx","view-components/card/card.tsx","view-components/toggle-menu/toggle-component.tsx","views/media-library/media-library.tsx","App.tsx","serviceWorker.ts","_sample-data/media-library.tsx","_sample-data/attribute-groups-library.tsx","data-components/data-manager/data-manager.tsx","services/product-data-service.tsx","services/validations-service/validation.tsx","index.tsx"],"names":["module","exports","StickyThing","props","state","isMaximized","isOpen","stickyOpen","doAnimation","this","setState","toolBar","className","classes","checkAnimationToggle","classIfTrue","enterFromThisSide","lastResortClasses","baseSticky","style","height","heightIncludeUnits","width","widthIncludeUnits","backgroundColor","bgColor","children","React","WindowLevelCapture","mousePosition","x","y","evt","clientX","clientY","window","innerWidth","innerHeight","addEventListener","getMousePosition","portals","document","getElementsByClassName","i","length","parent","parentNode","removeChild","ToolTip","initialized","toolTipTimeOutCounter","toolTipContainerRef","tooltipWidth","tooltipHeight","tooltipTop","tooltipLeft","intervalID","isHovering","timeoutInMS","win","mousePos","hoverCheck","undefined","btnReference","current","rect","getBoundingClientRect","checkMouseIsOver","clearHover","yPos","xPos","top","left","windowSize","xOffset","yOffset","tooltipInner","tooltipType","tooltipStandardContent","headerText","copy","paddingLeft","toolTipCustomElement","id","handleFadeInOut","ref","zIndex","border","position","clearInterval","clearPortals","setInterval","updateMousePos","right","tooltip","getToolTip","ReactDOM","createPortal","root","getElementById","AppButton","hoverActions","btnRef","linkRef","toolTipRef","toolTipTimeOut","isHovered","yesNoBoolean","toolTipTimeOutInMS","startHover","doHoverClear","hoverLeaveActions","tooltipXOffset","tooltipYOffset","btnStyles","handleToolTip","onClick","OnClick","onMouseOver","doHoverActions","onMouseOut","doHoverOutActions","iconLeft","buttonLabel","iconCenter","iconRight","buttonType","String","baseButton","navPath","exact","to","draggable","buttonHelp","getButton","CatmanIcon","iconName","viewBox","cx","cy","r","points","d","overflow","x1","y1","x2","y2","version","transform","backgroundImage","fadeRightToLeft","fadeLeftToRight","getIcon","ToolTipContent","mainClasses","header","subHeader","icon","toolTipContent","showSelectRow","showSingleProduct","showCloseDrawer","showMaximizeDrawer","gridIntroTutorial","gridDragTutorial","bulkEditTutorial","src","deleteRowIllustration","deleteItemIllustration","editItemIllustration","addVariantIllustrationIllustration","createVariantGroupIllustrationIllustration","closeDrawerIllustration","closeModalIllustration","restoreDrawerIllustration","maximizeDrawerIllustration","dragFilesIllustration","backToSpreadsheetIllustration","singleProductSwitchToEditModeIllustration","singleProductSwitchToReadModeIllustration","insertColumnIllustration","mediaCardsIllustration","mediaGridIllustration","clearSelectionIllustration","continueWizardIllustration","goBackWizardIllustration","insertFromStagingIllustration","clickDragGridCells","imagePath","tipName","referenceImageIllustration","partNumberIllustration","productGroupsIllustration","productNamingIllustration","classesIllustrationIllustration","ModalView","modalTitle","getHeader","closeModalFunc","closeModal","modal","getModal","DividerLine","dividerType","labelText","getLine","TextInput","value","currentValue","onBlurActions","e","keyVal","target","console","log","onChangeAction","row","cell","columnName","onFocusAction","label","onBlur","onFocus","onFocusActions","onChange","onChangeActions","type","placeholder","Illustration","illustrationName","specialClasses","widthWithUnits","heightWithUnits","gradientUnits","offset","stopColor","stopOpacity","homeIllustration","mediaIllustration","AttributeMappingIllustration","AttributesIllustration","AttributeGroupsIllustration","CatalogIllustration","uploadIllustration","getIllustration","UploadWizard","wizardPanel","dragUploadFiles","addAction","addBlankStubs","element","TutorialWizard","groupNameValue","groupNameRef","panelName","tutEditWithDrawer","tutBulkEdit","tutFooter","MainHeaderArea","menuIsOpen","modalOpen","currentModal","tutorialModal","animateIn","navigationElement","handleMenu","inverse","mainNav","mainButtonLabel","manageModals","addProducts","closeTutorialModal","addItemAction","modalName","navArea","ribbonElement","navMenu","getModals","Navigation","infoPanelIndex","isHover","groupedItems","push","navElements","h","presentationGroup","menuHelpStyle","index","infoPanel","itemGroups","sortNavItems","constructedMenuItems","counter","subMenuItems","j","count","newButton","hoverInfoPanel","key","hoverOutPanel","subMenuGroup","infoPanelFinal","createElements","InfoPanel","image","iconSize","mainNavConfig","LandingPageView","sectionTitle","Component","StandardTextInput","reportCurrentValue","controlType","getInputVal","getElements","SingleMediaDetailsView","editMode","assignedProducts","gridColumn","gridRow","singleProduct","mediaData","mediaPath","manageEditMode","singleProductSwitchToEditMode","shotType","valueCheck","backBtn","goBackToSpreadsheet","closeSingleMediaView","introArea","singleProductSwitchToReadMode","modeToolTip","editIcon","getDataArea","getProductPage","Tile","mouseDownActions","mouseUpActions","mouseOutActions","action","tileType","onMouseUp","mouseUpAction","onMouseDown","mouseDownAction","selectedClass","tileLabel","doClickActions","toolTip","doMouseOutActions","imageThumbnailPreview","getTile","DataGrid","selectionSet","selectedCells","numCols","numRows","startSelectionRow","startSelectionCell","dragInterval","dragCounter","cellRange","_checkedRows","shiftDown","controlDown","iconForCheckBox","checkedRows","updateSelectionState","columnHeadTooltip","tooltiptype","workingDataSet","data","hoveredRow","mouseIsDown","mouseX","mouseY","initialMouseX","initialMouseY","startCell","endCell","startRow","endRow","getNumColumns","getNumRows","clearSelection","selected","columnsData","splice","selectionCallback","selectedItems","lastRow","newItem","cells","productFields","notifySelections","manageSelection","manageKeyBoardEffect","manageAppCues","found","selectedCell","manageCheckbox","hoverRowAction","selectRow","control","clickCellsActions","mouseOutRowAction","manageParentViews","checkSelected","hasDetailsActionButton","getProductUniqueID","columnsHeads","columnActiveCheck","focusedItem","editDrawerOpen","cellClass","columnHead","columnLabel","insertColumn","selectedIndicator","gridRowStart","gridRowEnd","dragArea","coordinates","bottom","calcStyles","clickDragGrid","gridColumnStart","gridColumnEnd","keyAction","removeEventListener","columnHeaders","getColumnHeaders","gridStyle","gridStyles","display","gridTemplateColumns","onMouseMove","mouseMoveActions","getGridItems","getDragArea","DataGridWithEditDrawer","selectedMediaIndex","dataGridRef","createRef","editDrawerRef","drawerFirstOpen","columnDefs","drawerInputsLength","manageMediaDetailsPage","mediaIndex","detailsOpen","updateValues","colName","updateSet","newData","targetDataSet","dataManager","setData","gridData","workingData","getProductData","inputFocusAction","focusedInput","manageSelectionSet","checkBoxSelections","message","footerOpen","footerMode","selectionActions","editDrawerMaximized","dataManagerMain","getMediaObjectData","shiftIndex","inputs","focus","select","productDataItem","checkValue","sameColumn","k","input","getColumnLabel","shiftFocus","drawer","maximizeEditDrawer","maximizeDrawer","restoreDrawer","restoreAndMaximizeTooltip","restoreAndMaximizeBtnIcon","closeEditDrawer","closeDrawer","openEditDrawer","notifySelectionSetUpdate","conditionClasses","gridHasDetailsButton","addType","switchToEditModeFromCheckBoxMode","getEditDrawer","getGridArea","getMediaDetailsView","dataAttributeColumns","validationAction","columnMenu","columnType","dataAttributesLibrary","validationValue","attrType","class","TitleArea","titleType","mainTitle","subTitle","getTitle","ManageAttributesView","getAttributesData","getDataGrid","AttributeGroupsView","getAttributeGroupsData","getAttributeGroupsColumns","ManageAttributeMappingView","classesLibraryColumns","classesLibrary","ManageClassesView","getClassesData","navSettings","CatalogOverviewView","ProductsData","productData","catmanData","CatalogSingleProduct","singleProductData","uniqueID","product","name","tempChart","closeSingleProduct","Wizard","currentStep","stepTitle","stepSubTitle","sentenceInputs","wizardButtons","getWizard","AddVariantsWizard","stagingAreaProducts","numberOfVariants","getInputValue","parseInt","selectedCheckBoxes","newItems","JSON","parse","stringify","manageModal","addVariantsStaging","startButtons","wizardNavigation","continueWizard","startSentences","stagingButtons","goBackWizard","footerDelete","acceptVariants","insertFromStagingArea","stagingSentences","getProductColumns","elements","CreateProductGroupWizard","currentCheckIndex","footerCancel","createVariantGroup","CatalogDetailsView","editDrawer","columns","inputsControls","closeSingleProductEdit","history","back","openFooter","checkedCount","getCheckedRows","productViewOpen","modalState","query","footer","buttons","switchToEditMode","footerEditSelection","footerAddVariant","footerActions","footerCreateVariant","addToProductGroup","groups","getGroups","getCheckBoxesSelection","getFooterMenu","getProductViewDrawer","CatalogDashboardView","CatalogLanding","match","useRouteMatch","path","ProductViews","bla","useParams","URLSearchParams","useLocation","search","get","CardArea","containerClasses","cards","getCardArea","Card","getDetailsFunctions","cardTitle","thumbImageUrl","assignedToTheseProducts","mediaResolution","cardType","actionToolTip","toString","manageDetails","cardsCollections","getCard","mediaName","productAssociations","resolution","getMediaCards","ToggleMenu","menuType","currentActive","function","actions","checkActive","createButtonBar","MediaLibraryView","mediaDetailsOpen","viewMode","desiredState","mediaRelatedTooltips","getMediaDataForGrid","getMediaColumnsForGrid","stateName","buttonBarConfig","toggleItemType","manageViewModes","mediaGridView","mediaCardView","getToggleBar","getContentArea","App","component","Boolean","location","hostname","mediaLibraryData","mediaLibraryDataMediaObjects","description","mediaAssociations","classesAssociated","attributeGroupsLibraryColumns","attributeGroupsLibrary","DataManager","customGridData","updatePackage","setMediaData","setProductData","setAttributesData","setAttributeGroupsData","setCustomData","testMenu","columnHeaderToolTips","mediaObjects","mediaGridObjects","findColVal","mediaObject","stub","groupsAll","finalGroups","ProductDataService","getProducts","getColumns","products","ValidationService","dataSet","validationRules","setTimeout","doValidations","dataGridItem","validationChecks","windowEvent","dataValidations","initializeValidations","initialize","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"mHAAAA,EAAOC,QAAU,IAA0B,yD,mBCA3CD,EAAOC,QAAU,IAA0B,qD,gBCA3CD,EAAOC,QAAU,IAA0B,4C,kBCA3CD,EAAOC,QAAU,IAA0B,yC,iBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,0D,gBCA3CD,EAAOC,QAAU,IAA0B,uD,gBCA3CD,EAAOC,QAAU,IAA0B,sD,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,8D,gBCA3CD,EAAOC,QAAU,IAA0B,6D,gBCA3CD,EAAOC,QAAU,IAA0B,uD,gBCA3CD,EAAOC,QAAU,IAA0B,2D,gBCA3CD,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,qD,gBCA3CD,EAAOC,QAAU,IAA0B,4D,gBCA3CD,EAAOC,QAAU,IAA0B,4D,gBCA3CD,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,2D,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,wD,gBCA3CD,EAAOC,QAAU,IAA0B,oD,gBCA3CD,EAAOC,QAAU,IAA0B,2D,gBCA3CD,EAAOC,QAAU,IAA0B,sD,+FCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,oPC6G5BC,G,MAvFf,kDACI,WA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","file":"static/js/main.f9851abf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/illustration-wizard-go-back.87d3abbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/tooltip-reference-image.71c2fd16.svg\";","module.exports = __webpack_public_path__ + \"static/media/done-pie-chart.11e3fdf2.svg\";","module.exports = __webpack_public_path__ + \"static/media/sofia-bold.bfd7b46c.woff\";","module.exports = __webpack_public_path__ + \"static/media/fader-right-to-left.81a1ed6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/fader-left-right.5856aae9.svg\";","module.exports = __webpack_public_path__ + \"static/media/add-variant.c75e74a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/create-variant-group.30f6ed16.svg\";","module.exports = __webpack_public_path__ + \"static/media/maximize-drawer.a8479218.svg\";","module.exports = __webpack_public_path__ + \"static/media/close-drawer.a53c5c4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/restore-drawer.e3a112d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/close-modal-and-cancel.8cf636e6.svg\";","module.exports = __webpack_public_path__ + \"static/media/drag-files.ce9672aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/back-to-spreadsheet.43c0633f.svg\";","module.exports = __webpack_public_path__ + \"static/media/sitch-to-edit-mode.dcd88339.svg\";","module.exports = __webpack_public_path__ + \"static/media/switch-to-read-only.6840e4e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-insert.4c8794ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/tooltip-part-number.08332447.svg\";","module.exports = __webpack_public_path__ + \"static/media/tooltip-product-groups.76f0e74d.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-classes.c2379601.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-clear-selection.7fba6fa2.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-delete-items.a64a51d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-delete-rows.98c091c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-edit.233c34fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-insert-from-staging.b6421e77.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-continue-next-step.14119e43.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-product-name.78378074.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-click-drag-cells.c1a3fcf9.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-card-view.d3d11a21.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-media-grid.86e8508b.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-attribute-mapping.64f3a2d7.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-create-attributes.7c22e985.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-catalog.30eff23c.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-attribute-groups.ff44b277.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload-illustration.3b475aa7.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-start.9b6cb93b.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-media-library.453eef2f.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-bulk-edit.c39507d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-edit-with-drawer.caff5afc.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-footer-menu.30b0bc70.svg\";","module.exports = __webpack_public_path__ + \"static/media/proximanova-reg.d6e2bf3f.woff\";","module.exports = __webpack_public_path__ + \"static/media/sofia-reg.a21a7124.woff\";","import * as React from \"react\";\nimport {ReactElement} from \"react\";\nexport type stickyPosition = \"top\" | \"bottom\" | \"left\" | \"right\";\n\ninterface iStickyPROPS{\n    enterFromThisSide : stickyPosition;\n    lastResortClasses : string;\n    animateIn : boolean;\n    toolBar? : ReactElement | \"none\";\n    heightIncludeUnits : string;\n    widthIncludeUnits : string;\n    stickyOpen : boolean\n    bgColor : string;\n    doAnimation : boolean;\n}\n\ninterface iStickySTATE{\n    isOpen : boolean;\n    isMaximized : boolean;\n    doAnimation : boolean;\n}\n\nexport class StickyThing extends React.Component<iStickyPROPS, iStickySTATE>{\n    constructor(props : iStickyPROPS) {\n        super(props);\n        this.state = {\n            isMaximized : false,\n            isOpen : this.props.stickyOpen,\n            doAnimation : this.props.doAnimation\n        }\n    }\n\n    openSticky(){\n        this.setState({\n            isOpen : true\n        })\n    }\n\n    closeSticky(){\n        this.setState({\n            isOpen : false\n        })\n    };\n\n    toggleAnimations(){\n        this.setState({\n            doAnimation : !this.state.doAnimation\n        })\n    }\n\n    toolBar(){\n        let toolBar : ReactElement = (<></>);\n        if(this.props.toolBar != null && this.props.toolBar != \"none\" ){\n            toolBar = (<div className={'tool-bar'}>{this.props.toolBar}</div>  );\n        }\n        return toolBar;\n    }\n\n    classes(){\n        let classes : string = \"\";\n        let checkAnimationToggle = (classIfTrue : string)=>{\n            if(this.state.doAnimation === true){\n                return classIfTrue;\n            }\n            return \"\";\n        };\n        switch (this.props.enterFromThisSide) {\n            case \"top\":\n                classes += \"from-top\";\n                classes += checkAnimationToggle(\" anim-top\");\n                break;\n            case \"bottom\":\n                classes += \"from-bottom\";\n                classes += checkAnimationToggle(\" anim-bottom\");\n                break;\n            case \"left\":\n                classes += \"from-left\";\n                classes += checkAnimationToggle(\" anim-left\");\n                break;\n            case \"right\":\n                classes += \"from-right\";\n                classes += checkAnimationToggle(\" anim-right\");\n                break;\n        }\n\n        classes += (` ${this.props.lastResortClasses}`);\n        return classes;\n    }\n\n    render(){\n        let baseSticky : ReactElement = (<></>);\n        if(this.state.isOpen === true){\n            let style = {\n                height : this.props.heightIncludeUnits,\n                width : this.props.widthIncludeUnits,\n                backgroundColor : this.props.bgColor\n            };\n\n            baseSticky = (\n                <div style={style}  className={`wf-sticky-drawer ${this.classes()}`}>\n                    {this.toolBar()}\n                    {this.props.children}\n                </div>\n            );\n        }\n        return(baseSticky)\n    }\n}\n\nexport default StickyThing;","import * as React from \"react\";\nimport {win} from \"../../index\";\nimport { ReactElement, RefObject} from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\ninterface iMousePos{\n    x:number;\n    y:number;\n}\n\ninterface iWindow{\n\n}\n\nexport type windowSize = {\n    height : number;\n    width : number;\n}\nexport class WindowLevelCapture implements iWindow{\n    private mousePosition : iMousePos;\n    constructor() {\n        this.mousePosition = {x:-1000,y:-1000};\n    }\n\n    get mousePos(){\n        return this.mousePosition;\n    }\n\n    getMousePosition(evt:MouseEvent){\n        this.mousePosition = { x : evt.clientX, y : evt.clientY};\n    }\n\n    windowSize(){\n        let measurment : windowSize = {width: window.innerWidth, height: window.innerHeight}\n        return measurment;\n    }\n\n    windowEvent(){\n        window.addEventListener('mousemove',\n            (evt)=>this.getMousePosition(evt) )\n    }\n\n    clearPortals(){\n        let portals : HTMLCollectionOf<Element> = document.getElementsByClassName(\"tool-tip\");\n\n\n        if(portals != null){\n            for(let i=0; i < portals.length; i++ ){\n                let parent = portals[i].parentNode;\n                if(parent != null){\n                    parent.removeChild(portals[i])\n                }\n            }\n        }\n\n        portals = document.getElementsByClassName(\"tool-tip\");\n\n    }\n}\n\nexport type toolTipType = \"standard\" | \"custom\" | \"none\";\n\ninterface iPROPS{\n    tooltipType? : toolTipType;\n    tooltipStandardContent? : {\n        headerText : string,\n        copy : string\n    }\n    toolTipCustomElement? : ReactElement | string;\n    btnReference? : RefObject<HTMLButtonElement>;\n    linkReference? : RefObject<HTMLAnchorElement>;\n    timeoutInMS : number;\n    yOffset? : number;\n    xOffset? : number;\n}\n\ninterface iSTATE {\n    mousePosition : {\n        x : number,\n        y : number\n    };\n    isHovering : boolean;\n}\n\nexport class ToolTip extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n        this.state ={\n            mousePosition : {x:-window.innerWidth, y:-window.innerHeight},\n            isHovering : false\n        };\n        this.toolTipContainerRef = React.createRef<HTMLDivElement>();\n        this.mousePosition = { x:-1000, y:-1000};\n        this.initialized = false;\n        this.toolTipTimeOutCounter = this.props.timeoutInMS\n    }\n\n    //TODO give mouse position a data type\n    mousePosition : any;\n    initialized : boolean;\n    toolTipTimeOutCounter : number;\n    toolTipContainerRef : React.RefObject<HTMLDivElement>;\n    tooltipWidth : number = 0;\n    tooltipHeight : number = 0;\n    tooltipTop : number = 0;\n    tooltipLeft : number = 0;\n\n    private intervalID : any = 0;\n\n    updateMousePos(){\n        //Only update if the mouse is moving, check if position values have changed\n\n        if(this.mousePosition.x !== win.mousePos.x && this.mousePosition.y !== win.mousePos.y){\n            this.setState(\n                {\n                    mousePosition: {\n                        x: win.mousePos.x,\n                        y: win.mousePos.y\n                    }\n                });\n\n          // console.log(\"state changed\", \"x:\", this.state.mousePosition.x, \"y: \", this.state.mousePosition.y);\n        }\n\n        let checkMouseIsOver = ()=>{\n            let hoverCheck : boolean = true;\n            if(this.props.btnReference?.current !== undefined){\n                let rect = this.props.btnReference?.current?.getBoundingClientRect();\n                // if mouse is too far the the left, the mouse x is less that the button x\n                if(rect !== undefined){\n                    if(this.state.mousePosition.x < rect.x  ){\n                        hoverCheck = false;\n                    }\n\n                    // if mouse is too far to the right\n                    if(this.state.mousePosition.x > (rect.x + rect?.width) ){\n                        hoverCheck = false\n                    }\n\n                    // if mouse is too far the the left, the mouse x is less that the button x\n                    if(this.state.mousePosition.y < rect.y ){\n                        hoverCheck = false;\n                    }\n\n                    // if mouse is too far to the right\n                    if(this.state.mousePosition.y > (rect.y + rect?.height) ){\n                        hoverCheck = false\n                    }\n                }\n\n            }\n            return hoverCheck;\n        };\n\n        if(checkMouseIsOver() === false){\n            this.clearHover();\n        }else{\n            let yPos = win.mousePos.y;\n            let xPos = win.mousePos.x;\n            if(this.toolTipContainerRef.current != null && this.toolTipContainerRef.current != undefined  ){\n                this.tooltipWidth = this.toolTipContainerRef.current.getElementsByClassName(\"tt-element-main\")[0].getBoundingClientRect().width;\n                this.tooltipHeight = this.toolTipContainerRef.current.getElementsByClassName(\"tt-element-main\")[0].getBoundingClientRect().height;\n                this.tooltipTop = this.toolTipContainerRef.current.getBoundingClientRect().top;\n                this.tooltipLeft = this.toolTipContainerRef.current.getBoundingClientRect().left;\n\n            }\n\n\n            //null check\n            if(this.toolTipContainerRef.current != null && this.toolTipContainerRef.current !== undefined){\n                //if it's too far to the right\n                //console.log(\"tooltip left:\", win.mousePos.x);\n                if( win.mousePos.x + this.tooltipWidth > win.windowSize().width - this.tooltipWidth){\n                    xPos = xPos - (this.tooltipWidth + 30);\n                    if(this.props.xOffset != null){\n                        yPos -= this.props.xOffset;\n                    }\n                }\n                //if it's too close to bottom\n                if(win.mousePos.y > win.windowSize().height - this.tooltipHeight){\n                    yPos = yPos - this.tooltipHeight;\n                    if(this.props.yOffset != null){\n                        yPos = yPos - this.props.yOffset;\n                    }\n                }\n                this.setState({mousePosition:{x:xPos, y:yPos}});\n            }\n\n            this.setState({isHovering : true})\n        }\n\n        if(this.toolTipTimeOutCounter <= 0){\n            this.clearHover();\n        }\n    }\n\n    getToolTip(){\n            let tooltipInner : ReactElement = (<></>);\n\n            switch(this.props.tooltipType){\n                case \"standard\":\n                    tooltipInner = (<>\n                        <div className=\"app-tool-tip \">\n                            <h3>{this.props.tooltipStandardContent?.headerText}</h3>\n                            <p>{this.props.tooltipStandardContent?.copy}</p>\n                        </div>\n                    </>);\n                    break;\n\n                case \"custom\":\n                    tooltipInner = (<>\n                        <div\n                            className=\"app-tool-tip\"\n                            style={\n                                {\n                                    top: this.state.mousePosition.y,\n                                    left: this.state.mousePosition.x,\n                                    paddingLeft:\"1rem\",\n                                }\n                            }\n                        >\n                            {this.props.toolTipCustomElement}\n                        </div>\n                    </>);\n                    break;\n                case \"none\":\n                    tooltipInner = (\n                        <></>\n                    )\n            }\n\n            return (\n                <span id=\"tooltipPortal\" className={`${this.handleFadeInOut()} tool-tip`}>\n                    <div ref={this.toolTipContainerRef} style={{  zIndex: 10000, border: \"none\", width:\"1px\", height:\"1px\", position: \"fixed\"}} >\n                        {tooltipInner}\n                    </div>\n                </span>\n            )\n\n    }\n\n    componentWillUnmount(): void {\n        this.clearHover();\n        this.clearInterval();\n    }\n\n    clearPortals(){\n        win.clearPortals();\n    }\n\n    clearInterval(){\n        clearInterval(this.intervalID);\n    }\n\n    startHover(){\n        this.toolTipTimeOutCounter = this.props.timeoutInMS;\n        if(this.props.tooltipType !== \"none\"){\n            this.intervalID = setInterval(\n                ()=>{\n                    if(this.initialized === false){\n                        this.initialized = true;\n                        this.setState({isHovering:true});\n\n                    }\n                    this.toolTipTimeOutCounter -= 50;\n                    if(this.toolTipTimeOutCounter <= 0){\n                        this.clearHover();\n                    }\n                    this.updateMousePos();\n                }, 50);\n        }\n    }\n\n    clearHover(){\n        clearInterval(this.intervalID);\n        this.initialized = false;\n        this.setState({isHovering:false} );\n        //TODO revisit this optimization so we don't get too many tool tip containers\n        // this.clearPortals();\n    }\n\n    componentDidMount(): void {\n        //this.startHover();\n    }\n\n    handleFadeInOut(){\n        if(this.toolTipTimeOutCounter <= 800 && this.toolTipTimeOutCounter > 700 ){\n            return \"fade-1\"\n        }else\n        if(this.toolTipTimeOutCounter <= 700 && this.toolTipTimeOutCounter > 600 ){\n            return \"fade-11\"\n        }else\n        if(this.toolTipTimeOutCounter <= 600 && this.toolTipTimeOutCounter > 500){\n            return \"fade-2\"\n        }else\n        if(this.toolTipTimeOutCounter <= 500 && this.toolTipTimeOutCounter > 400){\n            return \"fade-21\"\n        }else\n        if(this.toolTipTimeOutCounter <= 400 && this.toolTipTimeOutCounter > 300){\n            return \"fade-3\"\n        }else\n        if(this.toolTipTimeOutCounter <= 300 && this.toolTipTimeOutCounter > 200){\n            return \"fade-31\"\n        }else\n        if(this.toolTipTimeOutCounter <= 200 && this.toolTipTimeOutCounter > 100  ){\n            return \"fade-4\"\n        }else\n        if(this.toolTipTimeOutCounter <= 100 && this.toolTipTimeOutCounter > 20  ){\n            return \"fade-41\"\n        }else\n        if(this.toolTipTimeOutCounter < 20 && this.toolTipTimeOutCounter > 0  ){\n            return \"fade-5\"\n        }\n\n        //HANDLE FADE IN\n\n        if(this.toolTipTimeOutCounter <= this.props.timeoutInMS && this.toolTipTimeOutCounter > this.props.timeoutInMS-100 ){\n            return \"fade-5\"\n        }else if(this.toolTipTimeOutCounter <= this.props.timeoutInMS-100 && this.toolTipTimeOutCounter > this.props.timeoutInMS-150 ){\n            return \"fade-41\"\n        }else if(this.toolTipTimeOutCounter <= this.props.timeoutInMS-150 && this.toolTipTimeOutCounter > this.props.timeoutInMS-200){\n            return \"fade-4\"\n        }else if(this.toolTipTimeOutCounter <= this.props.timeoutInMS-200 && this.toolTipTimeOutCounter > this.props.timeoutInMS-250){\n            return \"fade-31\"\n        }else if(this.toolTipTimeOutCounter <= this.props.timeoutInMS-250 && this.toolTipTimeOutCounter > this.props.timeoutInMS-300){\n            return \"fade-3\"\n        }else if(this.toolTipTimeOutCounter <= this.props.timeoutInMS-300 && this.toolTipTimeOutCounter > this.props.timeoutInMS-350){\n            return \"fade-21\"\n        }else if(this.toolTipTimeOutCounter <= this.props.timeoutInMS-350 && this.toolTipTimeOutCounter > this.props.timeoutInMS-400  ){\n            return \"fade-2\"\n        }else if(this.toolTipTimeOutCounter <= this.props.timeoutInMS-400 && this.toolTipTimeOutCounter > this.props.timeoutInMS-450  ){\n            return \"fade-11\"\n        }else if(this.toolTipTimeOutCounter <= this.props.timeoutInMS-450 && this.toolTipTimeOutCounter > this.props.timeoutInMS-500  ){\n            return \"fade-0\"\n        }\n    }\n\n    debugPosition(){\n        return(\n            <p style={{position:\"fixed\", top:0, right:0}}>{`x: ${this.state.mousePosition.x} y: ${this.state.mousePosition.y} `}</p>\n        )\n    }\n\n\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n\n        let tooltip : ReactElement = (<></>);\n        if(this.state.isHovering === true && this.toolTipTimeOutCounter > 0){\n            tooltip = this.getToolTip();\n        }\n\n        const root = ()=>{\n             let root : any | HTMLElement = document.getElementById(\"root\");\n             if(root != null){\n                 return root;\n             }\n        };\n\n        return ReactDOM.createPortal(tooltip, root());\n    }\n\n}","import * as React from \"react\";\nimport {Link, NavLink} from \"react-router-dom\";\nimport {ToolTip} from \"../heru-tool-tip/tool-tip\";\nimport {ReactElement, Ref, RefObject} from \"react\";\n\n\ntype AppButtonType = \"from-left\"\n    | \"main-action\"\n    | \"secondary-action\"\n    | \"menu-link\"\n    |\"nav-link\"\n    | \"drag-area\"\n    | \"drag-area-large\"\n    |\"transparent-bg\"\n    |\"button-custom\"\n    |\"boolean-button\";\n\ninterface iPROPS{\n    buttonType: AppButtonType;\n    buttonLabel? : string;\n    buttonHelp? : string | ReactElement;\n    iconCenter? : ReactElement;\n    iconRight? : ReactElement;\n    iconLeft? : ReactElement;\n    navPath? : any;\n    index? : number;\n    param? : string;\n    hoverActions? : any[];\n    hoverLeaveActions? : any[];\n    OnClick? : any;\n    tooltipType : \"basic\" | \"custom\" | \"none\";\n    tooltip? : ReactElement | string;\n    toolTipTimeOutInMS? : number;\n    tooltipYOffset? : number;\n    tooltipXOffset? : number;\n    classes? : string;\n    state? : string;\n}\n\ninterface iSTATE{\n    isHovered : boolean;\n    yesNoBoolean? : boolean\n}\n\nexport class AppButton extends React.Component<iPROPS, iSTATE>{\nconstructor(props:iPROPS) {\n    super(props);\n    this.state = {\n        isHovered : false,\n        yesNoBoolean : false\n    };\n    this.hoverActions = this.props.hoverActions;\n    if(this.props.toolTipTimeOutInMS != null){\n        this.toolTipTimeOut = this.props.toolTipTimeOutInMS\n    }else{\n        //if timeout isn't set, this is default\n        this.toolTipTimeOut = 5000\n    }\n}\n    hoverActions :any[] | undefined = [];\n    btnRef:RefObject<HTMLButtonElement> = React.createRef<HTMLButtonElement>();\n    linkRef : RefObject<HTMLAnchorElement> = React.createRef<HTMLAnchorElement>();\n    toolTipRef = React.createRef<ToolTip>();\n    //In Milliseconds\n    toolTipTimeOut : number;\n\n    doHoverActions(){\n      if(this.hoverActions !== undefined){\n          for(let i=0; i < this.hoverActions.length; i++){\n              if(this.hoverActions[i] !== undefined){\n                  this.hoverActions[i]();\n              }\n          }\n      }\n      this.setState({isHovered : true});\n\n      //GO TO TOOL TIP:\n      //when hovering on the button, we'll start the hovering actions in the tool tip\n      if(this.toolTipRef.current != null && this.props.tooltipType !== \"none\"){\n\n          this.toolTipRef.current.startHover();\n      }\n    };\n\n    doHoverOutActions(){\n        this.doHoverClear();\n        if(this.props.hoverLeaveActions != undefined && this.props.hoverLeaveActions != null){\n            for(let i=0; i < this.props.hoverLeaveActions.length; i++){\n                this.props.hoverLeaveActions[i]()\n            }\n        }\n    }\n\n    doHoverClear(){\n        //do any hover actions that were passed along\n        if(this.props.hoverLeaveActions !== null && this.props.hoverLeaveActions !== undefined ){\n            for(let i=0; i < this.props.hoverLeaveActions.length; i++){\n                this.props.hoverLeaveActions[i]();\n            }\n        }\n        if(this.toolTipRef.current != null){\n            this.toolTipRef.current.clearHover();\n        }\n    }\n\n    //this will generate the tooltip, ref this wherever you need one\n\n    handleToolTip(){\n        if(this.state.isHovered === false){\n            return <ToolTip ref={this.toolTipRef} timeoutInMS={this.toolTipTimeOut}/>;\n        }else{\n            return (\n                      <ToolTip\n                          ref={this.toolTipRef}\n                          btnReference={this.btnRef}\n                          tooltipType=\"custom\"\n                          toolTipCustomElement={this.props.tooltip}\n                          timeoutInMS={this.toolTipTimeOut}\n                          xOffset={this.props.tooltipXOffset}\n                          yOffset={this.props.tooltipYOffset}\n                      />\n            )\n        }\n    }\n\n    baseButton(btnStyles : string | undefined){\n\n        if(btnStyles === undefined){\n            btnStyles = \"\";\n        }\n        return(<>\n            {this.handleToolTip()}\n            <button\n                ref={this.btnRef}\n                onClick={()=>this.props.OnClick()}\n                onMouseOver={()=>this.doHoverActions()}\n                onMouseOut={()=>this.doHoverOutActions()}\n                className={`btn-default ${btnStyles} ${this.props.classes} `}\n            >\n                <div className=\"btn-descriptors\">\n                    <div className=\"cm-icon\">\n                        {this.props.iconLeft}\n                    </div>\n                    <div className=\"label\">\n                        <p>\n                            {this.props.buttonLabel}\n                        </p>\n                        {this.props.iconCenter}\n                    </div>\n\n                    <div className=\"cm-icon\">\n                        {this.props.iconRight}\n                    </div>\n                </div>\n            </button>\n        </>)\n    }\n\n    getButton(){\n        switch (this.props.buttonType) {\n            case \"main-action\":\n                return(\n                    <>\n                        {this.handleToolTip()}\n                        <button\n                            ref={this.btnRef}\n                            onClick={()=>this.props.OnClick()}\n                            onMouseOver={()=>this.doHoverActions()}\n                            onMouseOut={()=>this.doHoverOutActions()}\n                            className={`${this.props.classes} btn-main-action`}\n                        >\n                            <div className=\"button-decorator\">\n                                <div className=\"icon-left\">{this.props.iconLeft}</div>\n                                <div className=\"btn-label\">{this.props.buttonLabel}{this.props.iconCenter}</div>\n                                <div className=\"icon-right\">{this.props.iconRight}</div>\n                            </div>\n                        </button>\n                    </>\n                );\n\n            case \"boolean-button\":\n                return(\n                    <>\n                        {this.handleToolTip()}\n                        <button\n                            ref={this.btnRef}\n                            onClick={()=>this.props.OnClick()}\n                            onMouseOver={()=>this.doHoverActions()}\n                            onMouseOut={()=>this.doHoverOutActions()}\n                            className={`boolean-button ${this.props.classes}`}\n                        >\n                            {this.props.buttonLabel}\n                            <div className={`boolean-nub ${String(this.state.yesNoBoolean)}`}>\n                            </div>\n                        </button>\n                    </>\n                );\n\n            case \"transparent-bg\":\n                return(\n                    <>\n                        {this.handleToolTip()}\n                        <button\n                            ref={this.btnRef}\n                            onClick={()=>this.props.OnClick()}\n                            onMouseOver={()=>this.doHoverActions()}\n                            onMouseOut={()=>this.doHoverOutActions()}\n                            className={`btn-transparent-bg ${this.props.classes}`}\n                        >\n                            <div className=\"hover-panel\"></div>\n                            <div className=\"button-decorator\">\n                                <div className=\"icon-left\">{this.props.iconLeft}</div>\n                                <div className=\"btn-label\">{this.props.buttonLabel}{this.props.iconCenter}</div>\n                                <div className=\"icon-right\">{this.props.iconRight}</div>\n                            </div>\n                        </button>\n                    </>\n                );\n\n            case \"from-left\":\n                return(\n                    this.baseButton('btn-global btn-from-left')\n                );\n\n            case \"nav-link\":\n                if(this.props.navPath !== undefined ){\n\n                    return(\n                        <>\n                            <NavLink\n                                  ref={this.linkRef}\n                                  onMouseOver={()=>this.doHoverActions()}\n                                  onMouseOut={()=>this.doHoverOutActions()}\n                                  exact\n                                  to={this.props.navPath}\n                                  className={`app-btn btn-main-action nav-link ${this.props.classes}`}\n                            >\n                                <div className=\"hover-panel\"></div>\n                                <div className=\"button-decorator\">\n                                    <div className=\"icon-left\">{this.props.iconLeft}</div>\n                                    <div className=\"btn-label\">{this.props.buttonLabel}{this.props.iconCenter}</div>\n                                    <div className=\"icon-right\">{this.props.iconRight}</div>\n                                </div>\n                            </NavLink>\n                            {this.handleToolTip()}\n                        </>\n                    );\n                }else {\n                    return(\n                        <>\n                            <button\n                                onMouseOver={()=>this.doHoverActions()}\n                                onMouseOut={()=>this.doHoverOutActions()}\n                                className={`btn-main-action ${this.props.classes}`}\n                            >\n                                {this.props.buttonLabel}\n                            </button>\n                            {this.handleToolTip()}\n                        </>\n                    );\n                }\n\n            case \"menu-link\":\n                if(this.props.navPath !== undefined ){\n                    return(\n                        <>\n                            {this.handleToolTip()}\n                            <Link ref={this.linkRef}\n                                  onMouseOver={()=>this.doHoverActions()}\n                                  onMouseOut={()=>this.doHoverClear()}\n                                  to={this.props.navPath}\n                                  className=\"btn-main-action\"\n                            >\n                                <div>\n                                    {this.props.iconLeft}\n                                    {this.props.buttonLabel}\n                                    {this.props.iconRight}\n                                </div>\n                            </Link>\n                        </>\n                    );\n                }else {\n                    return(\n                        <>\n                            {this.handleToolTip()}\n                            <button\n                                onMouseOver={()=>this.doHoverActions()}\n                                className=\"btn-main-action\"\n                            >\n                                {this.props.buttonLabel}\n                            </button>\n                        </>\n                    );\n                }\n\n            case \"button-custom\":\n                return(\n                    <>\n                        {this.baseButton(this.props.classes)}\n                    </>\n                );\n\n            case \"secondary-action\":\n                return(\n                    <>\n                        {this.baseButton(\"secondary-action\")}\n                    </>\n                );\n\n            case \"drag-area-large\":\n                return(\n                    <>\n                        {this.handleToolTip()}\n                        <button\n                            ref={this.btnRef}\n                            onClick={()=>this.props.OnClick()}\n                            onMouseOver={()=>this.doHoverActions()}\n                            onMouseOut={()=>this.doHoverOutActions()}\n                            className={`drag-area-large ${this.props.classes}`}\n                        >\n                            <div className={\"large-drag-area\"}>\n                                <div draggable={false} className={\"dashed-line\"}></div>\n                                <div className={\"illustration\"}>\n                                    {this.props.iconLeft}\n                                </div>\n                                <div className={\"copy\"}>\n                                    <p className={\"title\"}>\n                                        {this.props.buttonLabel}\n                                    </p>\n                                    <div className={\"help-area\"}>\n                                        {this.props.buttonHelp}\n                                    </div>\n                                </div>\n                                <div className={\"icon\"}>\n                                    {this.props.iconRight}\n                                </div>\n                            </div>\n\n                            {this.props.iconCenter}\n                        </button>\n                    </>\n                );\n\n            default:\n                return(\n                    <>\n                        <button\n                            onMouseOver={()=>this.doHoverActions()}\n                            className=\"btn-default\"\n                        >\n                            Default Button\n                        </button>\n                    </>\n                )\n        }\n    }\n    render() {\n\n        return (\n            <>\n                {this.getButton()}\n            </>\n        );\n    }\n}\n\nexport default AppButton;","import * as React from \"react\";\nimport fadeRightToLeft from \"../../images/SVG/fader-right-to-left.svg\"\nimport fadeLeftToRight from \"../../images/SVG/fader-left-right.svg\"\n\ninterface iPROPS {\n    iconName : string;\n    classes? : string;\n    width : string;\n    height : string;\n}\n\ninterface iSTATE {\n\n}\n\nexport class CatmanIcon extends React.Component<iPROPS, iSTATE>{\n    getIcon(){\n        switch(this.props.iconName){\n\n            case \"compass\":\n                return (\n                  <>\n                      <svg className={`icon-compass ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 36.9 36.9\" >\n                        <circle className=\"stroked-highlight filled\" cx=\"18.4\" cy=\"18.4\" r=\"17.9\"/>\n                        <polygon className=\"filled-highlight\" points=\"16.6,16 21,20.4 27.5,9.5 \"/>\n                        <path className=\"st3\" d=\"M20.6,20.9L8.9,28l7.2-11.7c0.2-0.3,0.4-0.5,0.7-0.7l11.1-6.6l-6.6,11.1C21.1,20.4,20.9,20.7,20.6,20.9z\"/>\n                      </svg>\n                  </>\n                );\n\n            case \"single-product\":\n                return(\n                    <>\n                        <svg className={`icon-single-product ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 39.8 39.8\" style={{overflow:\"visible\"}} >\n                            <polygon className=\"filled\" points=\"14.7,0.6 0.8,6.8 5.8,13.3 1,19.7 5.7,22.1 5.7,32.6 19.8,39.4 33.8,32.5 34,22 38.8,19.7 33.9,13.5 38.9,6.8 25.1,0.6 19.9,6.5 \"/>\n                            <polygon className=\"filled-dark st1\" points=\"19.8,20.1 5.8,13.3 19.9,6.5 33.8,13.2 \"/>\n                            <g className=\"stroked\">\n                                <polygon points=\"19.5,6.4 14.7,0.6 0.8,6.8 5.7,13 \"/>\n                                <polygon points=\"34.1,13 39,6.8 25.1,0.6 20.3,6.4 \"/>\n                                <polygon points=\"20.1,20.1 25,25.9 38.8,19.7 33.9,13.5 \"/>\n                                <polygon points=\"19.5,20.2 14.7,26 0.8,19.8 5.7,13.6 \"/>\n                                <polyline points=\"34,22 34,32.6 20.2,39.3 19.5,39.3 5.7,32.6 5.7,22.1 \"/>\n                            </g>\n                            <line className=\"stroked stroked-highlight st3\" x1=\"19.8\" y1=\"20.1\" x2=\"19.8\" y2=\"39.2\"/>\n                            <polygon className=\"filled-darker st4\" points=\"19.8,6.8 20,19.7 33.3,13.2 \"/>\n                        </svg>\n                    </>\n                );\n\n            case \"info-icon-part-number\":\n                return(\n                    <svg className={`${this.props.classes} info-icon-part-number`} version=\"1.1\" x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 35.9 35.9\" style={{overflow:\"visible\"}} >\n                        <path className=\"filled-bg\" d=\"M18,0C8,0,0,8,0,18s8,18,18,18c9.9,0,18-8,18-18S27.9,0,18,0z\"/>\n                        <path className=\"filled\" d=\"M29.5,27h-23c-1.3,0-2.3-1-2.3-2.3V11.1c0-1.3,1-2.3,2.3-2.3h23c1.3,0,2.3,1,2.3,2.3v13.6\tC31.8,26,30.7,27,29.5,27z\"/>\n                        <g className=\"filled-highlight\">\n                            <rect x=\"8\" y=\"10.8\" width=\"1.9\" height=\"12.3\"/>\n                            <rect x=\"6.6\" y=\"10.8\"  width=\"0.8\" height=\"14.1\"/>\n                            <rect x=\"10.6\" y=\"10.8\" width=\"0.4\" height=\"13.7\"/>\n                            <rect x=\"11.6\" y=\"10.8\" width=\"1.1\" height=\"13.7\"/>\n                            <polygon points=\"13.9,10.8 13.7,10.8 13.1,10.8 13.1,24.5 13.7,24.5 13.7,24.5 14.7,24.5 14.7,10.8 \"/>\n                            <rect x=\"15.4\" y=\"10.8\"  width=\"1.5\" height=\"12.3\"/>\n                            <rect x=\"22.3\" y=\"10.8\" width=\"1.5\" height=\"12.3\"/>\n                            <polygon points=\"19,10.8 18.8,10.8 18.6,10.8 17.4,10.8 17.4,24.5 18.8,24.5 18.8,24.5 19,24.5 \"/>\n                            <rect x=\"27.9\" y=\"10.8\" width=\"1\" height=\"14.1\"/>\n                            <polygon points=\"25,10.8 25,10.8 24.2,10.8 24.2,23.2 24.9,23.2 25,23.2 25.7,23.2 25.7,10.8 \"/>\n                            <polygon points=\"27.2,10.8 27,10.8 26.1,10.8 26.1,23.2 27,23.2 27.2,23.2 27.5,23.2 27.5,10.8 \"/>\n                            <polygon points=\"20.6,10.8 20.4,10.8 19.6,10.8 19.6,24.5 20.4,24.5 20.4,24.5 21.7,24.5 21.7,10.8 \"/>\n                        </g>\n                    </svg>\n\n                );\n\n            case \"info-icon-product-name\":\n                return(\n                    <svg className={`info-icon-product-name ${this.props.classes}`} version=\"1.1\" x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 35.9 35.9\"  >\n                        <path className=\"filled-bg\" d=\"M18,0C8,0,0,8,0,18s8,18,18,18c9.9,0,18-8,18-18S27.9,0,18,0z\"/>\n                        <path className=\"filled\" d=\"M16.3,9.4l0.1-2.5c0,0,0.6-1.2,2.2-1.1c1.2,0.1,1.7,1.2,1.7,1.2l0.3,2.3L16.3,9.4z\"/>\n                        <path className=\"filled-secondary stroked st2\" d=\"M16.2,9.1V7.7c0-1.2,1-2.2,2.2-2.2h0c1.2,0,2.2,1,2.2,2.2v1.5\"/>\n                        <path className=\"filled\" d=\"M8.2,27.3c-2.1,0-3.8-1.7-3.8-3.8V13.4c0-2.1,1.7-3.8,3.8-3.8h20.3c2.1,0,3.8,1.7,3.8,3.8v10.2 c0,2.1-1.7,3.8-3.8,3.8H8.2z\"/>\n                        <path className=\"filled-contrast\" d=\"M28.6,10.1c1.8,0,3.3,1.5,3.3,3.3v10.2c0,1.8-1.5,3.3-3.3,3.3H8.2c-1.8,0-3.3-1.5-3.3-3.3V13.4 c0-1.8,1.5-3.3,3.3-3.3H28.6 M28.6,9.1H8.2c-2.4,0-4.3,1.9-4.3,4.3v10.2c0,2.4,1.9,4.3,4.3,4.3h20.3c2.4,0,4.3-1.9,4.3-4.3V13.4 C32.9,11,30.9,9.1,28.6,9.1L28.6,9.1z\"/>\n                        <path className=\"stroked-secondary filled-bright \" d=\"M17.5,24.8H8.8c-1.1,0-2-0.9-2-2V14c0-1.1,0.9-2,2-2h8.8c1.1,0,2,0.9,2,2v8.9C19.5,24,18.6,24.8,17.5,24.8z\"/>\n                        <polygon className=\"brand-light\" points=\"9.2,21.6 9.2,15.5 13.4,13.6 17.1,15.7 17.3,21.3 13.3,23.4 \"/>\n                        <polygon className=\"brand-dark\" points=\"13.7,18.1 13.6,22.9 17.1,21.3 17.1,16.3 \"/>\n                        <polygon className=\"filled\" points=\"9.9,20.9 9.9,16.9 12.6,18.3 12.8,19.3 12.8,18.1 9.4,16.3 9.4,21.3 12.8,22.8 \"/>\n                            <g className=\"filled-saturated\">\n                                <path d=\"M27.6,13.1h-5.4c-0.4,0-0.7-0.3-0.7-0.7v0c0-0.4,0.3-0.7,0.7-0.7h5.4c0.4,0,0.7,0.3,0.7,0.7v0 C28.4,12.8,28,13.1,27.6,13.1z\"/>\n                                <path d=\"M25.6,15.8h-3.4c-0.4,0-0.7-0.3-0.7-0.7v0c0-0.4,0.3-0.7,0.7-0.7h3.4c0.4,0,0.7,0.3,0.7,0.7v0\tC26.4,15.5,26,15.8,25.6,15.8z\"/>\n                                <path d=\"M27.7,20.9h-5.4c-0.4,0-0.7-0.3-0.7-0.7l0,0c0-0.4,0.3-0.7,0.7-0.7h5.4c0.4,0,0.7,0.3,0.7,0.7v0 C28.4,20.6,28.1,20.9,27.7,20.9z\"/>\n                                <path d=\"M23.9,18.3h-1.7c-0.4,0-0.7-0.3-0.7-0.7v0c0-0.4,0.3-0.7,0.7-0.7h1.7c0.4,0,0.7,0.3,0.7,0.7v0\tC24.6,17.9,24.3,18.3,23.9,18.3z\"/>\n                                <path d=\"M27.6,18.3H26c-0.4,0-0.7-0.3-0.7-0.7v0c0-0.4,0.3-0.7,0.7-0.7h1.7c0.4,0,0.7,0.3,0.7,0.7v0 C28.4,17.9,28,18.3,27.6,18.3z\"/>\n                            </g>\n                            <g className=\"stroked-secondary no-fill \">\n                                <polyline points=\"9.1,15.7 13.1,17.8 13.4,17.8 17.4,15.8 \"/>\n                                <polygon points=\"9,15.8 9,18.3 9,21.5 13.1,23.5 13.4,23.5 17.4,21.5 17.5,21.4 17.5,15.9 17.4,15.6 13.4,13.6 13.1,13.6 9.1,15.6 \"/>\n                                <line x1=\"13.3\" y1=\"17.7\" x2=\"13.3\" y2=\"23.4\"/>\n                            </g>\n                        <polygon className=\"filled-dark\" points=\"16,14.4 11.1,16.9 11.1,17.5 10.5,17.1 10.5,16.5 15.3,14.1 \"/>\n                        <polygon className=\"filled-contrast\" points=\"15.3,14.1 10.5,16.5 10.5,17.1 10.6,17.2 10.6,16.6 15.5,14.2 \"/>\n                        <polygon className=\"filled-contrast\" points=\"16,14.4 11.1,16.8 11.1,17.4 11.2,17.5 11.2,16.9 16.1,14.5 \"/>\n                        <circle className=\"filled-contrast\" cx=\"18.4\" cy=\"7.2\" r=\"0.6\"/>\n</svg>\n\n                );\n\n            case \"info-icon-help\":\n                return(\n                    <svg className={`${this.props.classes} info-icon-help`} version=\"1.1\" x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 35.9 35.9\" >\n                        <path className=\"bg-fill\" d=\"M18,0C8,0,0,8,0,18s8,18,18,18c9.9,0,18-8,18-18S27.9,0,18,0z\"/>\n                    \t<path className=\"filled\" d=\"M15.2,20.5c-0.2-2.1,0.3-3.5,2.6-4.4l1-0.4c1-0.4,1.4-1.2,1.4-2c0-1.3-0.9-2.1-2.2-2.1c-1.2,0-2.3,0.9-2.4,2.4 h-3.4c0-3.8,2.5-5.8,5.7-5.8c3.3,0,5.7,2.1,5.7,5.4c0,2.7-1.6,4.4-3.7,5.2c-1,0.4-1.8,0.6-1.8,1.8l0,0.5h-2.9V20.5z M14.4,25.5 c0-1.3,1-2.2,2.3-2.2c1.3,0,2.3,0.9,2.3,2.2c0,1.3-1.1,2.2-2.3,2.2C15.4,27.7,14.4,26.8,14.4,25.5z\"/>\n                    </svg>\n                );\n\n            case \"info-icon-product-group\":\n                return(\n                    <svg className={`info-icon-product-group ${this.props.classes}`} version=\"1.1\" x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 35.9 35.9\" >\n                        <path className=\"filled-bg\" d=\"M18,0C8,0,0,8,0,18s8,18,18,18c9.9,0,18-8,18-18S27.9,0,18,0z\"/>\n                        <rect className=\"brand-1\" x=\"10.4\" y=\"9.2\" width=\"7\" height=\"7\"/>\n                        <rect className=\"brand-2\" x=\"19.4\" y=\"9.2\" width=\"7\" height=\"7\"/>\n                        <rect className=\"brand-3\" x=\"10.4\" y=\"18.3\" width=\"7\" height=\"7\"/>\n                        <rect className=\"brand-4\" x=\"19.4\" y=\"18.3\" width=\"7\" height=\"7\"/>\n                        <g className=\"filled-highlight\">\n                            <polygon points=\"12.2,6.2 8.6,6.2 7.5,6.2 7.5,7.4 7.5,11 8.6,11 8.6,7.4 12.2,7.4 \"/>\n                            <polygon points=\"24.6,6.2 28.2,6.2 29.4,6.2 29.4,7.4 29.4,11 28.2,11 28.2,7.4 24.6,7.4 \"/>\n                            <polygon points=\"12.2,28.4 8.6,28.4 7.5,28.4 7.5,27.2 7.5,23.6 8.6,23.6 8.6,27.2 12.2,27.2 \"/>\n                            <polygon points=\"24.6,28.4 28.2,28.4 29.4,28.4 29.4,27.2 29.4,23.6 28.2,23.6 28.2,27.2 24.6,27.2 \"/>\n                        </g>\n                    </svg>\n\n                );\n\n            case \"info-icon-image\":\n                return(\n                    <svg className={`${this.props.classes} info-icon-image`} version=\"1.1\" x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 35.9 35.9\" style={{overflow:\"visible\"}}>\n                        <path className=\"filled-bg\" d=\"M18,0C8,0,0,8,0,18s8,18,18,18c9.9,0,18-8,18-18S27.9,0,18,0z\"/>\n                        <path className=\"filled\" d=\"M26.5,26.1H10c-1.2,0-2.1-0.9-2.1-2.1V10.4c0-1.2,0.9-2.1,2.1-2.1h16.5c1.2,0,2.4,1.1,2.4,2.3L28.6,24\tC28.6,25.1,27.7,26.1,26.5,26.1z\"/>\n                        <polygon className=\"filled-highlight\" points=\"26,21.6 22.3,12.9 17.9,18.6 15,15.7 10.4,21.6 \"/>\n                        <circle className=\"filled-highlight\" cx=\"12\" cy=\"13.2\" r=\"1.5\"/>\n                    </svg>\n                );\n\n            case \"select-row\":\n                return(\n                    <svg className={`icon-select-row ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 38.5 31.6\" style={{overflow:\"visible\"}} >\n                        <path className=\"st0 filled\" d=\"M33.6,30.6H12.7c-2.4,0-4.3-1.9-4.3-4.3V4.7c0-2.4,1.9-4.3,4.3-4.3h20.9c2.4,0,4.3,1.9,4.3,4.3v21.7 C37.9,28.7,36,30.6,33.6,30.6z\"/>\n                        <rect className=\"st1 filled-highlight\" x=\"15.7\" y=\"14.2\" width=\"21.8\" height=\"5.8\"/>\n                        <g className=\"stroked-highlight no-fill st2\">\n                            <line x1=\"8.4\" y1=\"7.4\" x2=\"37.8\" y2=\"7.4\"/>\n                            <line x1=\"8.4\" y1=\"20.1\" x2=\"37.8\" y2=\"20.1\"/>\n                            <line x1=\"8.4\" y1=\"25.6\" x2=\"37.8\" y2=\"25.6\"/>\n                            <line x1=\"8.4\" y1=\"13.8\" x2=\"37.8\" y2=\"13.8\"/>\n                            <line x1=\"23.9\" y1=\"30.8\" x2=\"23.9\" y2=\"1.1\"/>\n                            <line x1=\"14.3\" y1=\"30.8\" x2=\"14.3\" y2=\"1.1\"/>\n                            <line x1=\"32.7\" y1=\"31.2\" x2=\"32.7\" y2=\"1.1\"/>\n                        </g>\n                        <path className=\"stroked st3\" d=\"M33.9,31.2H12.4c-2.3,0-4.1-1.8-4.1-4.1V4.6c0-2.3,1.8-4.1,4.1-4.1h21.5c2.3,0,4.1,1.8,4.1,4.1v22.5 C38,29.3,36.2,31.2,33.9,31.2z\"/>\n                        <path className=\"filled-secondary st4\" d=\"M16.8,20.3H1.9c-0.7,0-1.3-0.6-1.3-1.3V4.3C0.6,3.6,1.2,3,1.9,3h14.9C17.5,3,18,3.6,18,4.3V19\tC18,19.7,17.5,20.3,16.8,20.3z\"/>\n                        <polygon className=\"action-highlight st5\" points=\"13.6,6.8 7.1,13.3 5,11.3 2.9,13.4 7.1,17.6 9.2,15.4 15.7,8.9 \"/>\n                    </svg>\n            );\n\n            case \"cancel\":\n                return(\n\n                    <svg className={`icon-cancel ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 34 34\" style={{overflow:\"visible\"}}>\n                        <circle className=\"filled\" cx=\"17\" cy=\"17\" r=\"17\"/>\n                        <line className=\"stroked no-fill\" x1=\"8.3\" y1=\"17.2\" x2=\"27\" y2=\"17.2\"/>\n                        <polyline className=\"stroked no-fill\" points=\"13.1,21.2 7.7,17.2 13.1,13.2\"/>\n                    </svg>\n\n                );\n\n            case \"clear\":\n                return(\n                    <svg className={`icon-clear ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 34.4 34.4\" style={{overflow:\"visible\"}} >\n                        <circle className=\"filled\" cx=\"17.2\" cy=\"17.2\" r=\"17.2\"/>\n                        <g className=\"stroked\" >\n                            <path d=\"M10.4,24.1l-3-3C6,19.7,6,17.4,7.4,16L19.2,4.2c0.5-0.5,1.2-0.5,1.7,0l7,7c0.5,0.5,0.5,1.2,0,1.7L16.8,24.1 c-0.2,0.2-0.5,0.3-0.8,0.3h-4.7C10.9,24.5,10.6,24.4,10.4,24.1z\"/>\n                            <line x1=\"9.9\" y1=\"13.6\" x2=\"16.6\" y2=\"20.4\"/>\n                            <line x1=\"19.2\" y1=\"25\" x2=\"28.6\" y2=\"25\"/>\n                            <line x1=\"8.1\" y1=\"26.2\" x2=\"5.5\" y2=\"26.2\"/>\n                            <line x1=\"10.2\" y1=\"27.9\" x2=\"8.4\" y2=\"29.7\"/>\n                        </g>\n</svg>\n\n                )\n\n            case \"continue\":\n                return(\n                    <svg className={`icon-continue ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 34 34\" style={{overflow:\"visible\"}}>\n                        <svg x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 34.4 34.4\" style={{overflow:\"visible\"}} >\n                            <circle className=\"filled\" cx=\"17.2\" cy=\"17.2\" r=\"17.2\"/>\n\t\t                    <line className=\"stroked no-fill\" x1=\"26.8\" y1=\"17.6\" x2=\"7.2\" y2=\"17.6\"/>\n\t\t                    <polyline className=\"stroked no-fill\" points=\"21.7,21.9 27.4,17.6 21.7,13.4 \"/>\n\t                    </svg>\n                    </svg>\n                );\n\n            case \"icon-restore-tooltip\":\n                return(\n                   <svg x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 35.9 35.9\" style={{overflow:\"visible\"}} >\n                        <path className=\"filled-secondary st0\" d=\"M30.8,5.4v-3H27C24.3,0.9,21.3,0,18,0s-6.3,0.9-9,2.4H5.4v2.7C2.1,8.4,0,13,0,18c0,9.9,8,18,18,18 c9.9,0,18-8,18-18C35.9,13.1,34,8.6,30.8,5.4z\"/>\n                        <path className=\"filled st1\" d=\"M30,2.3H6.2C5.3,2.3,4.6,3,4.6,3.8l0,21.9c0.3-1,0.9-1.3,2.1-1.3l10.4,0L12,19.3l1.2-1.2l4,4V5.2h1.7v16.9l4-4\tl1.2,1.2l-5.2,5.2l10.6,0c1.2-0.1,1.9,0.3,2,1.3l0-21.9C31.6,3,30.9,2.3,30,2.3z\"/>\n                        <path className=\"stroked st2\" d=\"M31,30.9v-3.4c0-0.8-0.7-1.5-1.5-1.5H6.7c-0.8,0-1.5,0.7-1.5,1.5v3.7\"/>\n                    </svg>\n                );\n\n            case \"icon-maximize-tooltip\":\n                return (\n                    <svg className={`${this.props.classes} icon-maximize-tooltip`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 35.9 35.9\" style={{overflow:\"visible\"}} >\n                        <path className=\"filled \" d=\"M30.8,5.4v-3H27C24.3,0.9,21.3,0,18,0s-6.3,0.9-9,2.4H5.4v2.7C2.1,8.4,0,13,0,18c0,9.9,8,18,18,18\tc9.9,0,18-8,18-18C35.9,13.1,34,8.6,30.8,5.4z\"/>\n                        <polygon className=\"filled-highlight \" points=\"13.2,14.5 17.2,10.5 17.2,27.4 18.9,27.4 18.9,10.5 22.9,14.5 24,13.3 18,7.2 12,13.3 \"/>\n                        <path className=\"filled-secondary \" d=\"M18,35.9c5.2,0,9.8-2.2,13.1-5.7v-3.6c0-0.8-0.7-1.5-1.5-1.5H6.7c-0.8,0-1.5,0.7-1.5,1.5v3.9 C8.4,33.9,13,35.9,18,35.9z\"/>\n                    \t<g className=\"stroked-secondary\">\n                            <path d=\"M31,9.5V3.9c0-0.8-0.7-1.5-1.5-1.5H6.7C5.9,2.4,5.2,3,5.2,3.9v6\"/>\n                            <line x1=\"5.2\" y1=\"11.3\" x2=\"5.2\" y2=\"14.3\"/>\n                            <line x1=\"31\" y1=\"14.3\" x2=\"31\" y2=\"11.3\"/>\n                            <line x1=\"5.2\" y1=\"15.4\" x2=\"5.2\" y2=\"17.6\"/>\n                            <line x1=\"31\" y1=\"17.7\" x2=\"31\" y2=\"15.4\"/>\n                            <line x1=\"5.2\" y1=\"19.2\" x2=\"5.2\" y2=\"21\"/>\n                            <line x1=\"31\" y1=\"21.1\" x2=\"31\" y2=\"19.2\"/>\n                            <line x1=\"5.2\" y1=\"23.1\" x2=\"5.2\" y2=\"24.2\"/>\n                            <line x1=\"31\" y1=\"24.1\" x2=\"31\" y2=\"23.1\"/>\n                        </g>\n                    </svg>\n                );\n\n            case \"icon-maximize\":\n                return (\n                    <svg className={`icon-maximize ${this.props.classes}`} x=\"0px\" y=\"0px\" width={`${this.props.width}`} height={`${this.props.height}`} viewBox=\"0 0 22.2 22.2\" style={{overflow:\"visible\"}} >\n                        <path className=\"stroked\" d=\"M0.8,14.6V2.1c0-0.9,0.7-1.6,1.6-1.6h17.8c0.9,0,1.6,0.7,1.6,1.6v17.8c0,0.9-0.7,1.6-1.6,1.6H7.7\"/>\n                        <path className=\"filled\" d=\"M11.2,2.8v1.7H17L5.7,15.8c-0.2-0.1-0.5-0.2-0.8-0.2H1.8c-1,0-1.8,0.8-1.8,1.8v3.1c0,1,0.8,1.8,1.8,1.8h3.1 c1,0,1.8-0.8,1.8-1.8v-3.1c0-0.2,0-0.4-0.1-0.6L18,5.3v5.9h1.7V2.8H11.2z\"/>\n                    </svg>\n                );\n\n            case \"icon-close\":\n                return(\n                    <svg className={`icon-close ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 20.6 20.6\" style={{overflow:\"visible\"}}>\n                        <polygon className=\"filled\" points=\"20.6,2 18.6,0 10.3,8.3 2,0 0,2 8.3,10.3 0,18.6 2,20.6 10.3,12.3 18.6,20.6 20.6,18.6 12.3,10.3 \"/>\n                    </svg>\n                );\n\n            case \"icon-delete\":\n                return(\n                    <svg className={`icon-delete ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 34 34\" style={{overflow:\"visible\"}}>\n \t                    <circle className=\"filled\" cx=\"17\" cy=\"17\" r=\"17\"/>\n                        <rect className=\"filled-highlight\" x=\"6.8\" y=\"15.7\" transform=\"matrix(0.707 -0.7072 0.7072 0.707 -7.0562 17.2692)\" width=\"20.9\" height=\"2.8\"/>\n                    </svg>\n                );\n\n            case \"icon-close\":\n                return (\n                    <svg className={`icon-close ${this.props.classes}`} version=\"1.1\" x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 35.9 35.9\" style={{overflow:\"visible\"}} >\n                        <path className=\"filled\" d=\"M18,0C8,0,0,8,0,18s8,18,18,18c9.9,0,18-8,18-18S27.9,0,18,0z\"/>\n                        <polygon className=\"filled-highlight\" points=\"28.3,9.7 26.2,7.7 18,15.9 9.7,7.7 7.7,9.7 15.9,18 7.7,26.2 9.7,28.3 18,20 26.2,28.3 28.3,26.2\t20,18 \"/>\n                    </svg>\n                );\n\n            case \"icon-restore-btn\":\n                return (\n                    <svg className={`${this.props.classes} icon-restore-btn`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 21.9 24.2\" style={{overflow:\"visible\"}} >\n                        <path className=\"stroked\" d=\"M5.8,2.7H2.1c-0.9,0-1.6,0.7-1.6,1.6v17.8c0,0.9,0.7,1.6,1.6,1.6h17.8c0.9,0,1.6-0.7,1.6-1.6V4.3 c0-0.9-0.7-1.6-1.6-1.6h-3.4\"/>\n                        <path className=\"filled\" d=\"M15.7,14.7l-4.1,4.1V6.8h1.6c0.7,0,1.2-0.5,1.2-1.2V1.2c0-0.7-0.5-1.2-1.2-1.2H8.7C8.1,0,7.5,0.5,7.5,1.2v4.4 c0,0.7,0.5,1.2,1.2,1.2h1.7l0,12l-4.2-4.2L5,15.8l5.9,5.9l5.9-5.9L15.7,14.7z\"/>\n                    </svg>\n                );\n\n            case \"icon-restore\":\n                return(\n                    <svg className={`icon-restore ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 35.9 35.9\" style={{overflow:\"visible\"}}>\n                        <path className=\"filled\" d=\"M18,0C8,0,0,8,0,18s8,18,18,18c9.9,0,18-8,18-18S27.9,0,18,0z\"/>\n                        <polygon className=\"filled-highlight\" points=\"22.9,17.9 18.9,21.9 18.9,5 17.2,5 17.2,21.9 13.2,17.9 12,19.1 18,25.1 24,19.1 \"/>\n                        <path className=\"filled-secondary\" d=\"M18,35.9c5.2,0,9.8-2.2,13.1-5.7v-3.6c0-0.8-0.7-1.5-1.5-1.5H6.7c-0.8,0-1.5,0.7-1.5,1.5v3.9 C8.4,33.9,13,35.9,18,35.9z\"/>\n                    </svg>\n\n                );\n\n            case \"icon-read-mode\":\n                return(\n                    <svg className={`icon-read-mode ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 35 35\" style={{overflow:\"visible\"}} >\n                        <circle className=\"filled-highlight\" cx=\"17.5\" cy=\"17.5\" r=\"17\"/>\n                        <path className=\"filled st1\" d=\"M8.8,9.2c3.2-0.5,6.2,0.4,8.9,3c2.6-3.1,5.7-3.5,8.9-2.9l0,1l1.8,0.2l0.1,13.7c-3.6-0.4-7.2-0.2-10.8,1 c-3-1-6.7-1.4-10.7-1.3l0-13.4l1.8-0.2L8.8,9.2z\"/>\n                        <g className=\"stroked st2\">\n                            <path d=\"M8.8,9.2v13.2c0,0,2.9-0.1,5.2,0.5c1.9,0.5,3.3,1.9,3.7,2.4c0.1,0.1,0.1-0.1,0.1-0.1v-13c0,0-1.7-2.2-3.7-2.7 C11.4,8.8,8.8,9.2,8.8,9.2z\"/>\n                            <path d=\"M8.8,10.3c-1,0.1-1.8,0.2-1.8,0.2v13.2c0,0,2.2-0.4,5.3-0.1c2.8,0.3,5.4,1.8,5.4,1.8\"/>\n                            <path d=\"M26.7,9.2v13.2c0,0-2.9-0.1-5.2,0.5c-1.9,0.5-3.3,1.9-3.7,2.4c-0.1,0.1-0.1-0.1-0.1-0.1v-13 c0,0,1.7-2.2,3.7-2.7C24,8.8,26.7,9.2,26.7,9.2z\"/>\n                            <path d=\"M26.7,10.3c1,0.1,1.8,0.2,1.8,0.2v13.2c0,0-2.2-0.4-5.3-0.1c-2.8,0.3-5.4,1.8-5.4,1.8\"/>\n                        </g>\n                        <path className=\"filled-secondary st3\" d=\"M29.5,12h-0.9l0.1,11.9c-3.3-0.6-6.3-0.3-9,0.8c-0.5,0.2-0.9,0.4-1.3,0.6h-1.3c-0.4-0.2-0.8-0.4-1.3-0.6 c-2.7-1.1-5.8-1.3-9-0.8L6.8,12H6c-0.1,0-0.2,0.1-0.2,0.2v12.5c0,0.3,0.2,0.5,0.5,0.5h9.7l0,0.4c0,0.2,0.1,0.2,0.2,0.2H17v0h1.7v0 h0.6c0.1,0,0.2-0.1,0.2-0.2v-0.4h9.7c0.3,0,0.5-0.2,0.5-0.5V12.2C29.7,12.1,29.6,12,29.5,12z\"/>\n                    </svg>\n                );\n\n            case \"icon-read\":\n                return(\n                    <svg className={`${this.props.classes} icon-read-mode`} version=\"1.1\" x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 40.1 28.4\" style={{overflow:\"visible\"}} >\nYT-=H                        <path className=\"filled\" d=\"M5.1,0.7c5.3-0.8,10.3,0.6,14.9,5c4.4-5.2,9.5-5.8,14.9-4.8L35,2.5l3,0.3l0.1,22.8c-6-0.7-12-0.3-18,1.7 C15,25.6,9,25,2.2,25.1l0-22.3l3-0.3L5.1,0.7z\"/>\n                        <g className=\"stroked\">\n                            <path d=\"M5.1,0.7v22c0,0,4.9-0.1,8.6,0.9c3.1,0.8,5.5,3.2,6.1,3.9c0.1,0.1,0.2-0.2,0.2-0.2V5.7c0,0-2.9-3.7-6.3-4.6 C9.5,0,5.1,0.7,5.1,0.7z\"/>\n                            <path d=\"M5.1,2.5c-1.6,0.1-3,0.3-3,0.3v22c0,0,3.6-0.7,8.8-0.2c4.6,0.5,9.1,3,9.1,3\"/>\n                            <path d=\"M35,0.7v22c0,0-4.9-0.1-8.6,0.9c-3.1,0.8-5.5,3.2-6.1,3.9c-0.1,0.1-0.2-0.2-0.2-0.2V5.7c0,0,2.9-3.7,6.3-4.6 C30.6,0,35,0.7,35,0.7z\"/>\n                            <path d=\"M35,2.5c1.6,0.1,3,0.3,3,0.3v22c0,0-3.6-0.7-8.8-0.2c-4.6,0.5-9.1,3-9.1,3\"/>\n                        </g>\n                        <path className=\"filled-secondary\" d=\"M39.7,5.3h-1.4l0.1,19.9c-5.5-1-10.5-0.5-15.1,1.3c-0.8,0.3-1.5,0.6-2.2,1h-2.2c-0.6-0.3-1.4-0.7-2.2-1 c-4.6-1.8-9.6-2.2-15.1-1.3L1.8,5.3H0.4C0.2,5.3,0,5.5,0,5.7v20.8c0,0.4,0.3,0.8,0.8,0.8H17l0,0.7c0,0.3,0.1,0.4,0.4,0.4h1.4v0h2.9 v0h1c0.2,0,0.4-0.1,0.4-0.4v-0.7h16.3c0.4,0,0.8-0.3,0.8-0.8V5.7C40.1,5.5,39.9,5.3,39.7,5.3z\"/>\n                    </svg>\n                );\n\n            case \"icon-edit\":\n                return(\n                         <svg className={`icon-edit ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 35 35\" style={{overflow:\"visible\"}} >\n                            <circle className=\"filled-highlight\" cx=\"17.5\" cy=\"17.5\" r=\"17\"/>\n                            <g className=\"stroked no-fill\">\n                                <path d=\"M15.7,25.5l11.7-11.7c1-1,1-2.5,0-3.5L25.1,8c-1-1-2.5-1-3.5,0L10,19.7l-1.2,7L15.7,25.5z\"/>\n                                <line x1=\"20.5\" y1=\"9.5\" x2=\"25.9\" y2=\"15\"/>\n                                <line x1=\"10.4\" y1=\"19.6\" x2=\"15.8\" y2=\"25\"/>\n                            </g>\n                            <polygon className=\"filled\" points=\"11.3,26 9.4,24.1 9,26.4 \"/>\n                        </svg>\n\n                );\n\n            case \"icon-plus\":\n                return(\n                    <svg className={`${this.props.classes} icon-plus`} version=\"1.1\" x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 20.9 20.9\" style={{overflow:\"visible\"}}>\n                        <polygon className=\"filled\" points=\"20.9,11.9 20.9,9.1 11.9,9.1 11.9,0 9.1,0 9.1,9.1 0,9.1 0,11.9 9.1,11.9 9.1,20.9 11.9,20.9 11.9,11.9\"/>\n                    </svg>\n                );\n\n            case \"icon-add\":\n                return(\n                    <svg className={`${this.props.classes} icon-add`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 35 35\" style={{overflow:\"visible\"}} >\n                        <circle className=\"filled stroked \" cx=\"17.5\" cy=\"17.5\" r=\"17\"/>\n                        <polygon className=\"filled-highlight \" points=\"28.1,19.2 28.1,16.4 19,16.4 19,7.3 16.2,7.3 16.2,16.4 7.1,16.4 7.1,19.2 16.2,19.2 16.2,28.2 19,28.2 19,19.2 \"/>\n                    </svg>\n                );\n\n            case \"icon-add-invert\":\n                return (\n                    <svg className={`icon-add-invert ${this.props.classes}`}   x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 97.3 97.3\" style={{overflow:\"visible\"}}>\n                        <circle className=\"filled\" cx=\"48.6\" cy=\"48.6\" r=\"48.6\"/>\n                        <path className=\"filled-highlight\" d=\"M48.6,7.3C25.8,7.3,7.3,25.8,7.3,48.6c0,22.8,18.5,41.3,41.3,41.3s41.3-18.5,41.3-41.3 C89.9,25.8,71.4,7.3,48.6,7.3z M77.7,52H52v25.7h-6.7V52H19.6v-6.7h25.7V19.6H52v25.7h25.7V52z\"/>\n                    </svg>\n                );\n\n\n\n            case \"carat-down\":\n                return (\n                    <svg className={`carat-down ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 13.4 7.1\" style={{overflow:\"visible\"}} >\n                        <path className=\"filled\" d=\"M7.1,6.9l0.8-0.8l0,0l5.4-5.4c0.2-0.2,0.2-0.6,0-0.8H0.2c-0.2,0.2-0.2,0.6,0,0.8l5.4,5.4l0.8,0.8 C6.5,7.1,6.9,7.1,7.1,6.9z\"/>\n                    </svg>\n                );\n\n            case \"fader-right-to-left\":\n                return(\n                    <div style={{backgroundImage : `url(${fadeRightToLeft})`}} className={`${this.props.classes} image-box fader-right-to-left`}></div>\n                );\n\n            case \"fader-left-to-right\":\n                return(\n                    <div style={{backgroundImage : `url(${fadeLeftToRight})`}} className={`${this.props.classes} image-box fader-right-to-left`}></div>\n\n                );\n\n            case \"checkbox-unchecked\":\n                return(\n                    <svg className=\"unchecked\" x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 17.5 17.2\" style={{overflow:\"visible\"}} >\n                        <rect x=\"0\" y=\"0\" className=\"stroked\" width=\"17.5\" height=\"17.2\"/>\n                        <path className=\"filled\" d=\"M11.8,12.5H5.7c-0.4,0-0.8-0.4-0.8-0.8V5.6c0-0.4,0.4-0.8,0.8-0.8h6.1c0.4,0,0.8,0.4,0.8,0.8v6.1 C12.6,12.1,12.2,12.5,11.8,12.5z\"/>\n                    </svg>\n                );\n\n            case \"checkbox-checked\":\n                return(\n                    <svg className=\"checked\" x=\"0px\" y=\"0px\" width=\"100%\" height=\"100%\" viewBox=\"0 0 18.6 18.4\" style={{overflow:\"visible\"}} >\n                        <path className=\"filled\" d=\"M16.8,17.8H1.9c-0.7,0-1.3-0.6-1.3-1.3V1.9c0-0.7,0.6-1.3,1.3-1.3h14.9c0.7,0,1.3,0.6,1.3,1.3v14.7 C18,17.3,17.5,17.8,16.8,17.8z\"/>\n                        <polygon className=\"filled-highlight\" points=\"13.6,4.3 7.1,10.9 5,8.8 2.9,11 7.1,15.1 9.2,13 15.7,6.4 \"/>\n                    </svg>\n                );\n\n            case \"go-arrow\":\n                return (\n                    <svg className={`icon-go-arrow ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 21.7 10.8\" style={{overflow:\"visible\"}} >\n\t\t\t            <line className=\"stroked\" x1=\"19.7\" y1=\"5.4\" x2=\"1\" y2=\"5.4\"/>\n\t\t                <polyline className=\"stroked\" points=\"14.9,9.4 20.3,5.4 14.9,1.3 \t\t\t\"/>\n                    </svg>\n                );\n\n            case \"go-back-arrow\":\n                return (\n                    <svg className={`icon-go-arrow ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 21.7 10.8\" style={{overflow:\"visible\"}} >\n                        <line className=\"stroked\" x1=\"2.6\" y1=\"7.1\" x2=\"27.1\" y2=\"7.1\"/>\n                        <polyline className=\"stroked\" points=\"8.9,12.4 1.8,7.1 8.9,1.8 \"/>\n                    </svg>\n            );\n\n            case \"down-arrow\":\n                return(\n                    <>\n                        <svg className={`down-arrow-icon ${this.props.classes}`} x=\"0px\" y=\"0\" width={this.props.width} height={this.props.height} viewBox=\"0 0 13.4 7.1\" >\n                            <path className=\"filled\" d=\"M7.1,6.9l0.8-0.8l0,0l5.4-5.4c0.2-0.2,0.2-0.6,0-0.8H0.2c-0.2,0.2-0.2,0.6,0,0.8l5.4,5.4l0.8,0.8 C6.5,7.1,6.9,7.1,7.1,6.9z\"/>\n                        </svg>\n                    </>\n                );\n            case \"home\":\n                return(\n                    <>\n                        <svg className={`icon-home ${this.props.classes}`} version=\"1.1\" x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 23.5 18.5\"  >\n            \t            <path className=\"filled-highlight stroked\" d=\"M14.1,18v-5.4H9.4V18H4.3C4.1,18,4,17.8,4,17.6v-6.8l7.8-6.4l7.8,6.6v6.6c0,0.2-0.2,0.3-0.3,0.3H14.1z\"/>\n                            <path className=\"filled stroked\" d=\"M23.4,9.2l-3.4-2.8V0.5c0-0.3-0.2-0.5-0.5-0.5h-2.8c-0.3,0-0.5,0.2-0.5,0.5v2.7l-3.5-2.9 c-0.6-0.5-1.6-0.5-2.2,0L0.1,9.1C0,9.2,0,9.4,0.1,9.6L1.2,11c0.1,0.1,0.3,0.2,0.5,0l9.9-8.3c0.1-0.1,0.3-0.1,0.5,0l9.8,8.3 c0.1,0.1,0.3,0.1,0.4,0l1.2-1.3C23.6,9.5,23.6,9.3,23.4,9.2z\"/>\n                        </svg>\n                    </>\n                );\n\n            case \"media-nav-icon\":\n                return(\n                    <svg className={`media-nav-icon ${this.props.classes}`} version=\"1.1\"  x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 15.8 13.9\" style={{overflow:\"visible\"}} >\n                        <path className=\"stroked\" d=\"M3.7,11.9H3.3c-0.6,0-1.2-0.5-1.2-1.2V3.1c0-0.6,0.5-1.2,1.2-1.2h9.3c0.6,0,1.2,0.5,1.2,1.2v0.6\"/>\n                        <path className=\"filled-highlight\" d=\"M14.2,13.7H4.9c-0.6,0-1.2-0.5-1.2-1.2V4.9c0-0.6,0.5-1.2,1.2-1.2h9.3c0.6,0,1.4,0.6,1.4,1.3l-0.2,7.5\tC15.4,13.1,14.8,13.7,14.2,13.7z\"/>\n                        <polygon className=\"filled\" points=\"13.9,11.1 11.8,6.3 9.4,9.5 7.8,7.8 5.1,11.1 \"/>\n                        <circle className=\"filled\" cx=\"6.4\" cy=\"6.2\" r=\"1.1\"/>\n                        <path className=\"stroked st0\" d=\"M1.9,10.2H1.4c-0.6,0-1.2-0.5-1.2-1.2V1.4c0-0.6,0.5-1.2,1.2-1.2h9.3c0.6,0,1.2,0.5,1.2,1.2V2\"/>\n                    </svg>\n                );\n            case \"catalog\":\n                return(\n                    <>\n                        <svg className={`icon-catalog ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 22 18.8\" >\n\t                        <path className=\"stroked filled-highlight\" d=\"M3.2,18.3c-0.3,0-0.6-0.3-0.6-0.6V1.1c0-0.3,0.3-0.6,0.6-0.6h17.7c0.3,0,0.6,0.3,0.6,0.6v16.6\tc0,0.3-0.3,0.6-0.6,0.6H3.2z\"/>\n                            <rect className=\"filled\" x=\"7.1\" y=\"2.8\" width=\"6.1\" height=\"6.2\"/>\n                            <rect className=\"filled\" x=\"13.8\" y=\"2.8\" width=\"6.1\" height=\"6.2\"/>\n                        \t<path className=\"filled\" d=\"M19.1,10.8V15H15v-4.2H19.1 M20.1,9.8H14V16h6.1V9.8L20.1,9.8z\"/>\n\t                        <rect className=\"filled\" x=\"7.3\" y=\"9.8\" width=\"6.1\" height=\"6.2\"/>\n                            <rect className=\"filled-highlight \" x=\"2.1\" y=\"2.1\" width=\"3.6\" height=\"3.7\"/>\n                            <rect className=\"filled-highlight \" x=\"2.1\" y=\"12.9\" width=\"3.6\" height=\"3.7\"/>\n                        \t<path className=\"st1\" d=\"M4.2,5.1H1.1C0.5,5.1,0,4.6,0,4v0c0-0.6,0.5-1.1,1.1-1.1h3.2c0.6,0,1.1,0.5,1.1,1.1v0C5.3,4.6,4.8,5.1,4.2,5.1 z\"/>\n                            <path className=\"st1\" d=\"M4.2,15.8H1.1c-0.6,0-1.1-0.5-1.1-1.1v0c0-0.6,0.5-1.1,1.1-1.1h3.2c0.6,0,1.1,0.5,1.1,1.1v0 C5.3,15.3,4.8,15.8,4.2,15.8z\"/>\n                        </svg>\n                    </>\n                );\n\n            case \"attributes\":\n                return (\n                    <>\n                        <svg className={`icon-attributes ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 20.8 18.4\" >\n                            <path className=\"filled-highlight stroked\" d=\"M13.4,15c-0.4-0.1-0.7-0.2-1-0.5L4.8,8.4C4,7.7,3.8,6.6,4.5,5.8l3.7-4.6c0.4-0.4,0.9-0.7,1.5-0.7 c0.4,0,0.8,0.1,1.2,0.4l7.7,6.2C18.8,7.3,19,7.7,19.1,8l1.1,5.2c-0.1,0.8-0.6,1.4-1.3,1.6L13.4,15z\"/>\n                            <path className=\"filled-highlight stroked\" d=\"M11.4,17c-0.3,0-0.6-0.1-0.9-0.2l-8.9-4.1c-0.5-0.2-0.8-0.6-1-1.1c-0.2-0.5-0.2-1,0.1-1.4l2.5-5.3 c0.3-0.7,1-1.1,1.7-1.1c0.3,0,0.5,0.1,0.8,0.2l9,4.1c0.3,0.2,0.6,0.4,0.8,0.7l2.4,4.8c0.1,0.7-0.2,1.5-0.9,1.9L11.5,17 C11.5,17,11.4,17,11.4,17z\"/>\n\n                            <path className=\"filled stroked-highlight\" d=\"M20.4,11.6l-4.3-3.4c-0.4-0.2-0.8-0.3-1.3-0.3H5c-1.3,0-2.4,1.1-2.4,2.4v5.9c0,1.3,1.1,2.4,2.4,2.4h9.8 c0.5,0,1-0.1,1.4-0.4l4.3-3.7C21,13.5,21,12.4,20.4,11.6z\"/>\n                            <path className=\"filled-highlight\" d=\"M18.3,14.3c-0.6,0-1.1-0.5-1.1-1.1c0-0.6,0.5-1.1,1.1-1.1c0.6,0,1.1,0.5,1.1,1.1 C19.4,13.8,18.9,14.3,18.3,14.3z\"/>\n                        </svg>\n                    </>\n                );\n            case \"attribute-groups\":\n                return(\n                    <>\n                        <svg className={`icon-attribute-groups ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 20.6 19\"  >\n                            <path className=\"filled-highlight stroked\" d=\"M6.9,16.6c-0.5,0-1.1-0.3-1.4-0.7l-3.1-4.4c-0.3-0.4-0.4-0.8-0.3-1.2c0.1-0.4,0.3-0.8,0.7-1.1L10.3,4 c0.3-0.2,0.6-0.3,0.9-0.3L16.1,4c0.6,0.2,1,0.8,1.1,1.5l-1.3,5c-0.1,0.3-0.3,0.5-0.6,0.7l-7.4,5.1C7.5,16.5,7.2,16.6,6.9,16.6 L6.9,16.6z\"/>\n                        \t<path className=\"filled\" d=\"M14.9,7.2c-0.5,0.3-1.1,0.2-1.4-0.3c-0.3-0.5-0.2-1.1,0.3-1.4c0.5-0.3,1.1-0.2,1.4,0.3 C15.5,6.2,15.4,6.8,14.9,7.2z\"/>\n                            <polygon className=\"filled\" points=\"4,0 1.5,0 0,0 0,1.5 0,4 1.5,4 1.5,1.5 4,1.5 \"/>\n                            <polygon className=\"filled\" points=\"19,0 16.6,0 16.6,1.5 19,1.5 19,4 20.6,4 20.6,1.5 20.6,0 \"/>\n                            <polygon className=\"filled\" points=\"1.5,17.4 1.5,14.9 0,14.9 0,17.4 0,19 1.5,19 4,19 4,17.4 \"/>\n                            <polygon className=\"filled\" points=\"19,14.9 19,17.4 16.6,17.4 16.6,19 19,19 20.6,19 20.6,17.4 20.6,14.9 \"/>\n                        </svg>\n                    </>\n                );\n            case \"attribute-mappings\":\n                return (\n                    <>\n                        <svg className={`icon-attribute-mappings ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 20.1 17.8\" >\n                             <path className=\"filled\" d=\"M4.5,5.5H1c-0.5,0-1-0.4-1-1V1c0-0.5,0.4-1,1-1h3.6c0.5,0,1,0.4,1,1v3.6C5.5,5.1,5.1,5.5,4.5,5.5z\"/>\n                             <path className=\"filled-highlight stroked\" d=\"M10.8,17.3c-0.3,0-0.5-0.2-0.5-0.5V6.6c0-0.3,0.2-0.5,0.5-0.5h8.3c0.3,0,0.5,0.2,0.5,0.5v10.2 c0,0.3-0.2,0.5-0.5,0.5H10.8z\"/>\n                             <rect className=\"filled-highlight\" x=\"9.8\" y=\"10.4\" width=\"2.3\" height=\"2.9\"/>\n                             <path className=\"stroked no-fill\" d=\"M15.3,11.7H5.2c-1.3,0-2.4-1.1-2.4-2.4V3.2\"/>\n                             <polygon className=\"filled\" points=\"17.2,11.7 12.5,9.8 13.6,11.7 12.5,13.6\"/>\n                        </svg>\n                    </>\n                );\n            case \"classes\":\n                return (\n                    <svg className={`icon-classes ${this.props.classes}`} x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 18.7 18.6\" >\n                        <path className=\"filled-highlight\" d=\"M7.6,8.7H1c-0.6,0-1-0.4-1-1V1c0-0.6,0.4-1,1-1h6.6c0.6,0,1,0.4,1,1v6.7C8.6,8.3,8.1,8.7,7.6,8.7z\"/>\n                        <path className=\"filled stroked-highlight\" d=\"M11.1,8.2c-0.3,0-0.5-0.2-0.5-0.5V1c0-0.3,0.2-0.5,0.5-0.5h6.6c0.3,0,0.5,0.2,0.5,0.5v6.7\tc0,0.3-0.2,0.5-0.5,0.5H11.1z\"/>\n                        <path className=\"filled stroked-highlight\" d=\"M1.1,18.1c-0.3,0-0.5-0.2-0.5-0.5v-6.7c0-0.3,0.2-0.5,0.5-0.5h6.6c0.3,0,0.5,0.2,0.5,0.5v6.7 c0,0.3-0.2,0.5-0.5,0.5H1.1z\"/>\n                        <path className=\"filled stroked-highlight\" d=\"M11.1,18.1c-0.3,0-0.5-0.2-0.5-0.5v-6.7c0-0.3,0.2-0.5,0.5-0.5h6.6c0.3,0,0.5,0.2,0.5,0.5v6.7 c0,0.3-0.2,0.5-0.5,0.5H11.1z\"/>\n                        <path className=\"filled-highlight\" d=\"M4.4,13.3c-0.5,0-1,0.4-1,1c0,0.5,0.4,1,1,1c0.5,0,1-0.4,1-1C5.4,13.8,4.9,13.3,4.4,13.3L4.4,13.3z\"/>\n                        <path className=\"filled-highlight\" d=\"M7,10.5c-0.5,0-1,0.4-1,1c0,0.5,0.4,1,1,1c0.5,0,1-0.4,1-1C8,11,7.6,10.5,7,10.5L7,10.5z\"/>\n                        <path className=\"filled-highlight\" d=\"M1.7,15.8c-0.5,0-1,0.4-1,1c0,0.5,0.4,1,1,1c0.5,0,1-0.4,1-1C2.7,16.3,2.2,15.8,1.7,15.8L1.7,15.8z\"/>\n                        <path className=\"filled-highlight\" d=\"M7,15.9c-0.5,0-1,0.4-1,1c0,0.5,0.4,1,1,1s1-0.4,1-1C8,16.3,7.5,15.9,7,15.9L7,15.9z\"/>\n                        <path className=\"filled-highlight\" d=\"M1.7,10.5c-0.5,0-1,0.4-1,1s0.4,1,1,1s1-0.4,1-1S2.3,10.5,1.7,10.5L1.7,10.5z\"/>\n                        <polygon className=\"filled-highlight\" points=\"14.2,10.2 10.3,14.1 11,14.8 14.9,10.9 14.2,10.2 \t\"/>\n                        <polygon className=\"filled-highlight\" points=\"17.6,10.3 10.5,17.4 11.2,18.1 18.3,11.1 17.6,10.3 \t\"/>\n                        <polygon className=\"filled-highlight\" points=\"17.8,13.7 13.9,17.6 14.6,18.3 18.5,14.4 17.8,13.7 \t\"/>\n                    </svg>\n\n                )\n\n            case \"icon-card-view\":\n                return(\n                    <svg className={`${this.props.classes} icon-card-view`} version=\"1.1\" x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 20.4 20.4\" >\n\t                    <g className=\"stroked\">\n                            <path d=\"M4.4,1v3.4H1V1H4.4 M5.4,0H0v5.4h5.4V0L5.4,0z\"/>\n                            <path d=\"M11.9,1v3.4H8.4V1H11.9 M12.9,0H7.4v5.4h5.4V0L12.9,0z\"/>\n                            <path d=\"M19.4,1v3.4H16V1H19.4 M20.4,0H15v5.4h5.4V0L20.4,0z\"/>\n                            <path d=\"M4.4,8.5v3.4H1V8.5H4.4 M5.4,7.5H0v5.4h5.4V7.5L5.4,7.5z\"/>\n                            <path d=\"M11.9,8.5v3.4H8.4V8.5H11.9 M12.9,7.5H7.4v5.4h5.4V7.5L12.9,7.5z\"/>\n                            <path d=\"M19.4,8.5v3.4H16V8.5H19.4 M20.4,7.5H15v5.4h5.4V7.5L20.4,7.5z\"/>\n                            <path d=\"M4.4,16v3.4H1V16H4.4 M5.4,15H0v5.4h5.4V15L5.4,15z\"/>\n                            <path d=\"M11.9,16v3.4H8.4V16H11.9 M12.9,15H7.4v5.4h5.4V15L12.9,15z\"/>\n                            <path d=\"M19.4,16v3.4H16V16H19.4 M20.4,15H15v5.4h5.4V15L20.4,15z\"/>\n                        </g>\n                    </svg>\n                );\n\n            case \"icon-list-view\":\n                return (\n                    <svg className={`${this.props.classes} icon-list-view`} version=\"1.1\" x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 23.6 21.1\" >\n                        <g className=\"stroked\">\n                            <path d=\"M4.1,1v3.1H1V1H4.1 M5.1,0H0v5.1h5.1V0L5.1,0z\"/>\n                            <path d=\"M22.6,1v3.1H7.8V1H22.6 M23.6,0H6.8v5.1h16.8V0L23.6,0z\"/>\n                            <path d=\"M4.1,9v3.1H1V9H4.1 M5.1,8H0v5.1h5.1V8L5.1,8z\"/>\n                            <path d=\"M22.6,9v3.1H7.8V9H22.6 M23.6,8H6.8v5.1h16.8V8L23.6,8z\"/>\n                            <path d=\"M4.1,17v3.1H1V17H4.1 M5.1,16H0v5.1h5.1V16L5.1,16z\"/>\n                            <path d=\"M22.6,17v3.1H7.8V17H22.6 M23.6,16H6.8v5.1h16.8V16L23.6,16z\"/>\n                        </g>\n                \t</svg>\n                );\n            case \"icon-mosaic-view\":\n                return (\n                    <svg className={`${this.props.classes} icon-mosaic-view`} version=\"1.1\" x=\"0px\" y=\"0px\" width={this.props.width} height={this.props.height} viewBox=\"0 0 19.4 21.4\" >\n                \t\t<g className=\"stroked\">\n                            <path d=\"M4.1,1v12.6H1V1H4.1 M5.1,0H0v14.6h5.1V0L5.1,0z\"/>\n                            <path d=\"M18.4,1v4.6h-3.1V1H18.4 M19.4,0h-5.1v6.6h5.1V0L19.4,0z\"/>\n                            <path d=\"M18.4,9.7v10.7h-3.2V9.7H18.4 M19.4,8.7h-5.1v12.7h5.1V8.7L19.4,8.7z\"/>\n                            <path d=\"M11.3,1v8.2H8.1V1H11.3 M12.3,0H7.1v10.2h5.1V0L12.3,0z\"/>\n                            <path d=\"M4.1,17.7v2.7H1v-2.7H4.1 M5.1,16.7H0v4.7h5.1V16.7L5.1,16.7z\"/>\n                            <path d=\"M11.3,13.2v7.2H8.1v-7.2H11.3 M12.3,12.3H7.1v9.1h5.1V12.3L12.3,12.3z\"/>\n                        </g>\n\t                </svg>\n\n                )\n        }\n    }\n\n    render(){\n        return(<>{this.getIcon()}</>)\n    }\n}","import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\n\ninterface iPROPS {\n    tooltipType : \"deluxe\" | \"basic\" | \"empty\" | \"media\";\n    header? : string;\n    subHeader? : string;\n    copy? : string | ReactElement;\n    icon? : ReactElement | \"none\";\n    iconClasses? : string;\n    mainClasses? : string;\n    toolTipContainerClasses?:string;\n}\n\ninterface iSTATE {\n\n}\n\nexport class ToolTipContent extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props)\n    }\n\n    getToolTip(){\n        switch (this.props.tooltipType){\n            case \"deluxe\":\n                return (\n                <div  className={`${this.props.mainClasses} app-tool-tip deluxe tt-element-main`}>\n                    <div className=\"title-area\">\n                        <h3>{this.props.header}</h3>\n                        <p>{this.props.subHeader}</p>\n                    </div>\n                    <div className=\"tool-tip-icon\">{this.props.icon}</div>\n                    <div className=\"tool-tip-copy\">{this.props.copy}</div>\n                </div>\n                );\n\n            case \"media\":\n                return (\n                    <div className={`${this.props.mainClasses} app-tool-tip deluxe media tt-element-main`}>\n                        <div>\n                            <h3>{this.props.header}</h3>\n                            <p>{this.props.subHeader}</p>\n                        </div>\n                        <div className=\"tool-tip-icon\">{this.props.icon}</div>\n                        <div className=\"tool-tip-copy\">{this.props.copy}</div>\n                    </div>\n                );\n\n            case \"basic\":\n                return(\n                    <div id=\"toolTip\" className={`${this.props.mainClasses} app-tool-tip basic tt-element-main`}>\n                        <h4>{this.props.header}</h4>\n                        <div className=\"tool-tip-copy\">{this.props.copy}</div>\n                    </div>\n                );\n            case \"empty\":\n                return(\n                <div id=\"toolTip\" className={`${this.props.mainClasses} app-tool-tip basic tt-element-main`}/>\n                );\n        }\n    }\n\n    render(){\n        return(\n            <>\n                {this.getToolTip()}\n            </>)\n    }\n}","import * as React from \"react\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport {ToolTipContent} from \"../../view-components/heru-tool-tip/tool-tip-content\";\n\nimport addVariantIllustrationIllustration from \"../../images/SVG/add-variant.svg\"\nimport createVariantGroupIllustrationIllustration from \"../../images/SVG/create-variant-group.svg\"\nimport maximizeDrawerIllustration from \"../../images/SVG/maximize-drawer.svg\"\nimport closeDrawerIllustration from \"../../images/SVG/close-drawer.svg\"\nimport restoreDrawerIllustration from \"../../images/SVG/restore-drawer.svg\"\nimport closeModalIllustration from \"../../images/SVG/close-modal-and-cancel.svg\"\nimport dragFilesIllustration from \"../../images/SVG/drag-files.svg\"\nimport backToSpreadsheetIllustration from \"../../images/SVG/back-to-spreadsheet.svg\"\nimport singleProductSwitchToEditModeIllustration from \"../../images/SVG/sitch-to-edit-mode.svg\"\nimport singleProductSwitchToReadModeIllustration from \"../../images/SVG/switch-to-read-only.svg\"\nimport insertColumnIllustration from \"../../images/SVG/illustration-insert.svg\"\nimport partNumberIllustration from \"../../images/SVG/tooltip-part-number.svg\"\nimport productGroupsIllustration from \"../../images/SVG/tooltip-product-groups.svg\"\nimport referenceImageIllustration from \"../../images/SVG/tooltip-reference-image.svg\"\nimport classesIllustrationIllustration from \"../../images/SVG/illustration-classes.svg\"\nimport clearSelectionIllustration from \"../../images/SVG/illustration-clear-selection.svg\"\nimport deleteItemIllustration from \"../../images/SVG/illustration-delete-items.svg\"\nimport deleteRowIllustration from \"../../images/SVG/illustration-delete-rows.svg\"\nimport editItemIllustration from \"../../images/SVG/illustration-edit.svg\"\nimport insertFromStagingIllustration from \"../../images/SVG/illustration-insert-from-staging.svg\"\nimport continueWizardIllustration from \"../../images/SVG/illustration-continue-next-step.svg\"\nimport goBackWizardIllustration from \"../../images/SVG/illustration-wizard-go-back.svg\"\nimport productNamingIllustration from \"../../images/SVG/illustration-product-name.svg\"\nimport clickDragGridCells from \"../../images/SVG/illustration-click-drag-cells.svg\"\nimport mediaCardsIllustration from \"../../images/SVG/illustration-card-view.svg\"\nimport mediaGridIllustration from \"../../images/SVG/illustration-media-grid.svg\"\n\nimport tutBulkEdit from \"../../images/SVG/illustration-bulk-edit.svg\"\nimport tutEditWithDrawer from \"../../images/SVG/illustration-edit-with-drawer.svg\"\nimport tutFooter from \"../../images/SVG/illustration-footer-menu.svg\"\n\n\n\ninterface iSTATE{\n\n}\n\ninterface iPROPS{\n\n}\n\nexport class ContentToolTips extends React.Component<iPROPS, iSTATE>{\n    constructor(props : iPROPS) {\n        super(props);\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        let toolTip = (<></>);\n        return toolTip;\n    }\n}\n\n\nexport class toolTipsLibrary {\n    showSelectRow : boolean = true;\n    showSingleProduct : boolean = true;\n    showCloseDrawer : number = 0;\n    showMaximizeDrawer : number = 0;\n\n    gridIntroTutorial : number = 0;\n\n    gridDragTutorial : number = 0;\n    bulkEditTutorial : number = 0;\n\n    mainNav(){\n    return(<ToolTipContent\n              header=\"Navigation\"\n              copy=\"Use this menu to access different sections of the app\"\n              tooltipType=\"deluxe\"\n              icon={\n                  <CatmanIcon\n                      iconName=\"compass\"\n                      classes=\"\"\n                      height=\"1.5rem\"\n                      width=\"1.5rem\"\n                  />\n              }\n        />)\n    }\n\n    footerCancel(){\n        return(<ToolTipContent\n            header=\"Cancel\"\n            copy=\"Close this menu and clear selected rows\"\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"cancel\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    footerDelete(){\n        return(<ToolTipContent\n            header=\"Delete Selected\"\n            subHeader=\"Permanently destroy the product data in selected rows\"\n            copy={(\n                <div>\n                    <img className=\"tooltip-illustration\" src={deleteRowIllustration}/>\n                </div>\n            )}\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-delete\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    deleteItem(){\n        return(<ToolTipContent\n            header=\"Delete Selected\"\n            subHeader=\"Permanently destroy the selected product data\"\n            copy={(\n                <div>\n                    <img className=\"tooltip-illustration\" src={deleteItemIllustration}/>\n                </div>\n            )}\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-delete\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    footerEditSelection(){\n        return(<ToolTipContent\n            header=\"Edit Selected Rows\"\n            subHeader=\"Switch to cell-editing mode\"\n            copy={(\n                <div>\n                    <img className=\"tooltip-illustration\" src={editItemIllustration}/>\n                </div>\n            )}\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-edit\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    footerAddVariant(){\n        return(<ToolTipContent\n            header=\"Add Product as a Variant\"\n            subHeader=\"Create a new product and add it to the selected product's group\"\n            copy={(\n                <div>\n                    <img className=\"tooltip-illustration\" src={addVariantIllustrationIllustration}/>\n                </div>\n            )}\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-add\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    footerCreateVariant(){\n        return(<ToolTipContent\n            header=\"Create New Product Group from Selection\"\n            subHeader=\"Create a new product variants group from the selected items.\"\n            copy={(\n                <div>\n                    <img className=\"tooltip-illustration\" src={createVariantGroupIllustrationIllustration}/>\n                </div>\n            )}\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"info-icon-product-group\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    singleProduct(){\n        if(this.showSingleProduct === true){\n            return (\n                <ToolTipContent\n                    header=\"Edit This Product\"\n                    subHeader=\"Edit this row in a single page.\"\n                    copy={(\n                        <div>\n                            <ul>\n                                <li>Web form style page</li>\n                                <li>View and Associate Media</li>\n                                <li>See variants of this product</li>\n                                <li>So much more...</li>\n                            </ul>\n                        </div>\n                    )}\n\n                    tooltipType=\"deluxe\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"single-product\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />\n            );\n        }else{\n            return (\n                <ToolTipContent\n                    header=\"Edit This Product\"\n                    subHeader=\"Select rows to delete, create groups, add variants to groups\"\n                    copy=\"\"\n                    tooltipType=\"empty\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"single-product\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />\n            );\n        }\n    }\n\n    selectRow(){\n        if(this.showSelectRow === true){\n            return (\n                <ToolTipContent\n                    header=\"Select Rows\"\n                    subHeader=\"Select rows to perform actions on them.\"\n                    copy={(\n                        <div>\n                            <ul>\n                                <li>Delete items from catalog</li>\n                                <li>Create product groupings</li>\n                                <li>Add Variants to product groups</li>\n                            </ul>\n                        </div>\n                    )}\n\n                    tooltipType=\"deluxe\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"select-row\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />\n            );\n        }else{\n            return (\n                <ToolTipContent\n                    header=\"\"\n                    copy={(\n                        <div>\n                            <p>Select rows to delete, create groups, add variants to groups</p>\n                        </div>\n                    )}\n\n                    tooltipType=\"empty\"\n\n                />\n            );\n        }\n    }\n\n    closeDrawer(){\n        if(this.showCloseDrawer < 4){\n            return(\n                <ToolTipContent\n                    header=\"Close Drawer\"\n                    subHeader=\"Close edit drawer and clear cell selection set\"\n                    copy={(\n                        <div>\n                            <img className=\"tooltip-illustration\" src={closeDrawerIllustration}/>\n                        </div>\n                    )}\n                    tooltipType=\"deluxe\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"close-icon\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />\n                )\n        }else{\n            return(<ToolTipContent\n                header=\"Close Drawer\"\n                copy={(\n                    <div>\n                        <p>Close drawer and clear selection.</p>\n                    </div>\n                )}\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"icon-close\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />)\n        }\n    }\n\n    closeModal(){\n        if(this.showCloseDrawer < 4){\n            return(\n                <ToolTipContent\n                    header=\"Close & Cancel\"\n                    subHeader=\"Close this window, you'll lose any work you've done in the window.\"\n                    copy={(\n                        <div>\n                            <img className=\"tooltip-illustration\" src={closeModalIllustration}/>\n                        </div>\n                    )}\n                    tooltipType=\"deluxe\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"close-icon\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />\n            )\n        }else{\n            return(<ToolTipContent\n                header=\"Close Drawer\"\n                copy={(\n                    <div>\n                        <p>Close drawer and clear selection.</p>\n                    </div>\n                )}\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"icon-close\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />)\n        }\n    }\n\n    restoreDrawer(){\n        return(\n            <ToolTipContent\n                header=\"Restore Drawer\"\n                subHeader=\"Restore drawer so the grid is in view again.\"\n                copy={(\n                    <div>\n                        <img className=\"tooltip-illustration\" src={restoreDrawerIllustration}/>\n                    </div>\n                )}\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"icon-restore-tooltip\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        )\n    }\n\n    maximizeDrawer(){\n        if(this.showMaximizeDrawer < 4){\n            return(<ToolTipContent\n                header=\"Maximize Drawer\"\n                subHeader=\"Expand the edit area\"\n                copy={(\n                    <div>\n                        <img className=\"tooltip-illustration\" src={maximizeDrawerIllustration}/>\n                    </div>\n                )}\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"icon-maximize-tooltip\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />)\n        }else{\n            return(<ToolTipContent\n                header=\"Maximize Drawer\"\n                copy={(\n                    <div>\n                        <p>Expand the edit area.</p>\n                    </div>\n                )}\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"icon-maximize-tooltip\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />)\n        }\n    }\n\n    addProducts(){\n        return(\n            <ToolTipContent\n                header=\"Add or Update Products\"\n                subHeader=\"Add or update product data in YOUR catalog and then publish to Wayfair when you're ready.\"\n                copy={(\n                    <div>\n                        <ul>\n                            <li>Add new blank products as stubs</li>\n                            <li>Extract product data from files like Excel sheets and images</li>\n                            <li>Upload media like photos and associate to products</li>\n                            <li>Add product variants for groups (like a red, yellow and green versions of a product).</li>\n                            <li>So much more...</li>\n                        </ul>\n                    </div>\n                )}\n\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"single-product\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        )\n    }\n\n    addBlankStubs(){\n        return(<ToolTipContent\n            header=\"Add Blank Product Stubs\"\n            copy=\"This functionality available yet\"\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-add-invert\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    dragUploadFiles(){\n        return(<ToolTipContent\n            header=\"Upload Files Here\"\n            subHeader=\"Drag files from your computer's folder onto this to upload them, or click to browse your computer.\"\n            copy={\n                    <div>\n                        <img className=\"tooltip-illustration\" src={dragFilesIllustration}/>\n                    </div>\n                }\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-add-invert\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    goBackToSpreadsheet(){\n        return(<ToolTipContent\n            header=\"Go back to the Spreadsheet View\"\n            subHeader=\"Any edits you made in the Single Product view will be saved\"\n            copy={\n                <div>\n                    <img className=\"tooltip-illustration\" src={backToSpreadsheetIllustration}/>\n                </div>\n            }\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-add-invert\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    singleProductSwitchToEditMode(){\n        return(<ToolTipContent\n            header=\"Switch to edit Mode\"\n            subHeader=\"this will turn this view into a web form style page with textboxes, dop-downs and such so you can edit this product's data\"\n            copy={\n                <div>\n                    <img className=\"tooltip-illustration\" src={singleProductSwitchToEditModeIllustration}/>\n                </div>\n            }\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-edit\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    singleProductSwitchToReadMode(){\n        return(<ToolTipContent\n            header=\"Switch to Read Mode\"\n            subHeader=\"this will turn off all the the web form text boxes, drop-downs and such so you can read this easier.\"\n            copy={\n                <div>\n                    <img className=\"tooltip-illustration\" src={singleProductSwitchToReadModeIllustration}/>\n                </div>\n            }\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-read-mode\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    insertColumn(){\n        return(<ToolTipContent\n            header=\"Insert new Attribute/Column\"\n            subHeader=\"Insert a new attribute, this will make a new column.\"\n            copy={\n                <div>\n                    <img className=\"tooltip-illustration\" src={insertColumnIllustration}/>\n                </div>\n            }\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-add-invert\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    mediaCardView(){\n        return(<ToolTipContent\n            header=\"Media Card View\"\n            subHeader=\"View media assets as cards, good for inspection and review\"\n            copy={\n                <div>\n                    <img className=\"tooltip-illustration\" src={mediaCardsIllustration}/>\n                </div>\n            }\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"media-nav-icon\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    mediaGridView(){\n        return(<ToolTipContent\n            header=\"Media Grid View\"\n            subHeader=\"View media assets in a grid, good for bulk actions\"\n            copy={\n                <div>\n                    <img className=\"tooltip-illustration\" src={mediaGridIllustration}/>\n                </div>\n            }\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"media-nav-icon\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    clearSelection(){\n        return(\n            <ToolTipContent\n                header=\"Clear Selection\"\n                subHeader=\"Unselect items & cancel current activity.\"\n                copy={\n                    <div>\n                        <img className=\"tooltip-illustration\" src={clearSelectionIllustration}/>\n                    </div>\n                }\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"clear\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        )\n    }\n\n    continueWizard(){\n        return(\n            <ToolTipContent\n                header=\"Continue To Next Step\"\n                subHeader=\"We'll walk you through a few steps to help you a bit.\"\n                copy={\n                    <div>\n                        <img className=\"tooltip-illustration\" src={continueWizardIllustration}/>\n                    </div>\n                }\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"clear\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        )\n    }\n\n    goBackWizard(){\n        return(\n            <ToolTipContent\n                header=\"Go Back To Last Step\"\n                subHeader=\"Whoops! Nevermind... let's go back a bit.\"\n                copy={\n                    <div>\n                        <img className=\"tooltip-illustration\" src={goBackWizardIllustration}/>\n                    </div>\n                }\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"clear\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        )\n    }\n\n    insertFromStagingArea(){\n        return(\n            <ToolTipContent\n                header=\"Insert Into Catalog\"\n                subHeader=\"Insert these items into your catalog\"\n                copy={\n                    <div>\n                        <img className=\"tooltip-illustration\" src={insertFromStagingIllustration}/>\n                    </div>\n                }\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"clear\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        )\n    }\n\n    clickDragGrid(){\n        if(this.gridDragTutorial <= 2 ){\n            return(\n                <ToolTipContent\n                    header=\"\"\n                    subHeader=\"Click & drag to select & edit multiple cells\"\n                    mainClasses=\"embedded-tip\"\n                    copy={\n                        <div>\n                            <img className=\"tooltip-illustration\" src={clickDragGridCells}/>\n                        </div>\n                    }\n                    tooltipType=\"deluxe\"\n\n                />\n            )\n        }else if(this.gridDragTutorial > 2 && this.gridDragTutorial < 5){\n            return(\n                <ToolTipContent\n                    header=\"\"\n                    subHeader=\"Click & drag to select & edit multiple cells\"\n                    mainClasses=\"embedded-tip\"\n                    tooltipType=\"deluxe\"\n                />\n            )\n        }\n    }\n\n    imageThumbnailPreview(imagePath : string){\n        return(<ToolTipContent\n            header=\"\"\n            subHeader=\"\"\n            copy={\n                <div>\n                    <img className=\"tooltip-photo\" src={imagePath}/>\n                </div>\n            }\n            tooltipType=\"media\"\n\n        />)\n    }\n\n    columnHeaderToolTips(tipName : string) {\n        switch (tipName) {\n            case \"ReferenceImage\":\n                return(\n                    <ToolTipContent\n                        header=\"Reference Image\"\n                        subHeader=\"This is just to help you identify the product visually while you're working\"\n                        copy={\n                            <div>\n                                <img className=\"tooltip-illustration\" src={referenceImageIllustration}/>\n                            </div>\n                        }\n                        tooltipType=\"deluxe\"\n                        icon={\n                            <CatmanIcon\n                                iconName=\"info-icon-image\"\n                                classes=\"\"\n                                height=\"1.5rem\"\n                                width=\"1.5rem\"\n                            />\n                        }\n                    />\n                );\n\n            case \"PartNumber\":\n                return(\n                    <ToolTipContent\n                        header=\"Part Number\"\n                        subHeader=\"Must be unique, ideally you would use your existing descriptive part number\"\n                        copy={\n                            <div>\n                                <img className=\"tooltip-illustration\" src={partNumberIllustration}/>\n                            </div>\n                        }\n                        tooltipType=\"deluxe\"\n                        icon={\n                            <CatmanIcon\n                                iconName=\"info-icon-part-number\"\n                                classes=\"\"\n                                height=\"1.5rem\"\n                                width=\"1.5rem\"\n                            />\n                        }\n                    />\n                );\n\n            case \"ProductGroup\":\n                return(\n                    <ToolTipContent\n                        header=\"Product Group\"\n                        subHeader=\"To group products give items that have a relationship the same product name\"\n                        copy={\n                            <div>\n                                <img className=\"tooltip-illustration\" src={productGroupsIllustration}/>\n                            </div>\n                        }\n                        tooltipType=\"deluxe\"\n                        icon={\n                            <CatmanIcon\n                                iconName=\"info-icon-product-group\"\n                                classes=\"\"\n                                height=\"1.5rem\"\n                                width=\"1.5rem\"\n                            />\n                        }\n                    />\n                );\n\n            case \"ProductName\":\n                return(\n                    <ToolTipContent\n                        header=\"Product Name\"\n                        subHeader=\"Give each item a friendly human-readable name, this may or may not be used by Wayfair in the white-labeling process\"\n                        copy={\n                            <div>\n                                <img className=\"tooltip-illustration\" src={productNamingIllustration}/>\n                            </div>\n                        }\n                        tooltipType=\"deluxe\"\n                        icon={\n                            <CatmanIcon\n                                iconName=\"info-icon-product-name\"\n                                classes=\"\"\n                                height=\"1.5rem\"\n                                width=\"1.5rem\"\n                            />\n                        }\n                    />\n                );\n\n            case \"Class\":\n                return(\n                    <ToolTipContent\n                        header=\"Class\"\n                        subHeader=\"The Product Class is the species of product, by selecting a class you will define a set of attributes/column heads to describe that product\"\n                        copy={\n                            <div>\n                                <img className=\"tooltip-illustration\" src={classesIllustrationIllustration}/>\n                            </div>\n                        }\n                        tooltipType=\"deluxe\"\n                        icon={\n                            <CatmanIcon\n                                iconName=\"icon-add-invert\"\n                                classes=\"\"\n                                height=\"1.5rem\"\n                                width=\"1.5rem\"\n                            />\n                        }\n                    />\n                );\n\n        }\n\n        return(\n            <ToolTipContent\n                subHeader=\"\"\n                copy={tipName}\n                tooltipType=\"basic\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"icon-add-invert\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        );\n    }\n\n    mediaRelatedTooltips(tipName : string){\n        switch(tipName){\n            case \"media-details\":\n                return(\n                    <ToolTipContent\n                        header=\"Media Details\"\n                        subHeader=\"See all of the detailed information about this piece of media\"\n                        copy={\n                            <div>\n                                <img className=\"tooltip-illustration\" src={referenceImageIllustration}/>\n                                <div>\n                                    <ul>\n                                        <li>File information</li>\n                                        <li>Manage associated products</li>\n                                        <li>Manage media tags</li>\n                                    </ul>\n                                </div>\n                            </div>\n                        }\n                        tooltipType=\"deluxe\"\n                        icon={\n                            <CatmanIcon\n                                iconName=\"info-icon-image\"\n                                classes=\"\"\n                                height=\"1.5rem\"\n                                width=\"1.5rem\"\n                            />\n                        }\n                    />\n                )\n        }\n\n        return (<></>);\n    }\n\n    tutorialEditGrid(){\n        if(this.gridDragTutorial < 1){\n            return(\n                <ToolTipContent\n                    header=\"You Can Edit Right in This Grid!\"\n                    subHeader=\"This grid is editable, click in to try it (don't worry you can undo/redo)\"\n                    copy={\n                        <div className=\"tutorial-group\">\n                            <img className=\"tooltip-illustration\" src={goBackWizardIllustration}/>\n                            <img className=\"tooltip-illustration\" src={goBackWizardIllustration}/>\n                            <img className=\"tooltip-illustration\" src={goBackWizardIllustration}/>\n                        </div>\n                    }\n                    tooltipType=\"deluxe\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"clear\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />\n            )\n        }\n    }\n};\n\n\nexport let toolTipContent = new toolTipsLibrary();","import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {toolTipContent} from \"../../views/tool-tip-content/content-tool-tips\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport AppButton from \"../button/app-button\";\n\n\ninterface iPROPS{\n    closeModalFunc : Function;\n    modalTitle : string;\n    classes? : string;\n}\n\ninterface iSTATE{\n\n}\n\nexport class ModalView extends React.Component<iPROPS, iSTATE>{\n    constructor(props : iPROPS) {\n        super(props);\n    }\n\n    getHeader(){\n        if(this.props.modalTitle != undefined && this.props.modalTitle != \"\" ){\n            return (\n                <header className=\"modal-header\">\n                    <h3>{this.props.modalTitle}</h3>\n                </header>\n            )\n        }else {\n            return null\n        }\n    }\n\n    getModal(){\n        return(\n            <div className={`modal ${this.props.classes}`}>\n                <div className=\"modal-contents\">\n                        {this.getHeader()}\n                        <AppButton\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"\"\n                            OnClick={()=>this.props.closeModalFunc()}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.closeModal()}\n                            toolTipTimeOutInMS={10000}\n                            classes=\"icon-only-btn close-modal \"\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-close\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                    <div className=\"modal-page-content\">\n                        {this.props.children}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    render(){\n        const root = ()=>{\n            let root : any | HTMLElement = document.getElementById(\"root\");\n            if(root != null){\n                return root;\n            }\n        };\n        let modal : ReactElement = this.getModal();\n        return ReactDOM.createPortal(modal, root() );\n    }\n}","import * as React from \"react\";\n\n\ninterface iPROPS {\n    dividerType : \"solid\" | \"labeled\";\n    labelText? : string;\n    classes? : string;\n}\n\ninterface iSTATE {\n\n}\n\nexport class DividerLine extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n    }\n\n    getLine(){\n        switch (this.props.dividerType) {\n            case \"solid\":\n                return(\n                    <>\n                        <div className=\"divider-line\"></div>\n                    </>\n                );\n            case \"labeled\":\n                return(\n                    <>\n                        <div className={`${this.props.classes} divider-line`}>\n                            <div className=\"divider-left\"></div>\n                            <p className=\"label\">{this.props.labelText}</p>\n                            <div className=\"divider-right\"></div>\n                        </div>\n                    </>\n                )\n        }\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (<>{this.getLine()}</>);\n    }\n}","import * as React from \"react\";\nimport {ChangeEvent} from \"react\";\n\n\ninterface iPROPS {\n    label : string;\n    currentValue : string;\n    onChangeAction : Function\n    row? : number;\n    cell? : number;\n    columnName? : string;\n    onFocusAction? : Function;\n    onBlurActions? : Function[];\n}\n\ninterface iSTATE{\n    value : string;\n}\n\nexport class TextInput extends React.Component<iPROPS, iSTATE>{\n    constructor(props : iPROPS) {\n        super(props);\n        this.state = {\n            value : this.props.currentValue\n        }\n    }\n\n    onBlurActions(){\n        if(this.props.onBlurActions != undefined){\n            for(let i=0; i < this.props.onBlurActions.length; i++){\n                this.props.onBlurActions[i]();\n            }\n        }\n    }\n\n    onChangeActions(e: React.ChangeEvent){\n        let keyVal = e.target as HTMLInputElement;\n        console.log(\"inside input box\", keyVal.value);\n        //this.setState({value : keyVal.value});\n        this.props.onChangeAction(this.props.row, this.props.cell, keyVal.value, this.props.columnName);\n    }\n\n    onFocusActions(){\n        if(this.props.onFocusAction !== undefined){\n            this.props.onFocusAction(this.props.row, this.props.cell);\n        }\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (\n            <div className=\"pl-TextInput-wrapper\" >\n                <div className=\"pl-FloatLabel-text\">{this.props.label}</div>\n                <input onBlur={()=>this.onBlurActions()} onFocus={()=>this.onFocusActions()} onChange={(evt:React.ChangeEvent)=>this.onChangeActions(evt as React.ChangeEvent)}  type=\"text\" value={this.props.currentValue || ''} placeholder=\"\" className=\"InputBox pl-TextInput-input has-text pl-FloatLabel-input\" />\n            </div>\n        );\n    }\n}","import * as React from \"react\";\nimport AttributeMappingIllustration from \"../../images/SVG/illustration-attribute-mapping.svg\" ;\nimport AttributesIllustration from \"../../images/SVG/illustration-create-attributes.svg\";\nimport CatalogIllustration from \"../../images/SVG/illustration-catalog.svg\";\nimport AttributeGroupsIllustration from \"../../images/SVG/illustration-attribute-groups.svg\"\nimport uploadIllustration from \"../../images/SVG/upload-illustration.svg\";\nimport homeIllustration from \"../../images/SVG/illustration-start.svg\"\nimport mediaIllustration from \"../../images/SVG/illustration-media-library.svg\"\n\n\ninterface iPROPS{\n    illustrationName : string;\n    specialClasses? : string;\n    heightWithUnits : string;\n    widthWithUnits : string;\n}\n\ninterface iSTATE{\n\n}\n\nexport class Illustration extends React.Component<iPROPS, iSTATE>{\n\n    getIllustration(){\n        switch (this.props.illustrationName) {\n            case \"illustration-manage-classes\":\n                return (\n                        <svg className={`classes-illustration ${this.props.specialClasses}`}   x=\"0px\" y=\"0px\" width={this.props.widthWithUnits} height={this.props.heightWithUnits} viewBox=\"0 0 337.1 157\" style={{overflow:\"visible\"}} >\n                            <rect className=\"st0-white\" width=\"337.1\" height=\"157\"/>\n                            <path className=\"st1-light-grey\" d=\"M123.4,77c-1.5,0.5-2.3,1.5-2.1,2.9l0.9,12.8l1.8,3.4l76.1,49.8c2,1.6,4.1,1.8,6.6,0.3l73.2-40l0.3-1.8 l0.2-14.6l-1.7-3l-82.4-41.3L123.4,77z\"/>\n                            <polygon className=\"st2-med-grey\" points=\"203.2,147.1 202.9,132.9 279.7,89.8 279.9,105.3 206.2,146.5 \"/>\n                            <path className=\"st3-med-grey-two\" d=\"M194.4,114.4l11.8-6.3c1.5-1.2,3-0.6,4.6,0.6l10.3,7l-13,7.9c-0.9,0.4-1.7,0.4-2.6-0.1l-11.1-7.3 C193.7,115.6,193.5,115,194.4,114.4z\"/>\n                            <path className=\"st2-med-grey\" d=\"M194.2,114.3l12.3-6.5c1-0.4,2-0.5,2.7,0c-0.8,0.1-1.1,0.5-1.1,1.2l0.1,10.9c-0.3-0.1-0.8,0.1-1.4,0.3l-3,1.8 l-9.5-5.9C193.6,115.7,193.4,115.1,194.2,114.3z\"/>\n                            <path className=\"st4-light-green\" d=\"M239.5,60.3l0,16.4l-9.3-4.6L218,78.6l0.1,24.7l10.4,6.8c0.8,0.5,1.6,0.6,2.6,0.3l12.3-6.8l0.2-10.3l7.5,5.2 c1.1,0.6,2,0.4,3.1-0.3l11.7-6.7l-0.4-30l-1.2-2.7l-12.1-7.1l-10.8,5C240.1,57.3,239.5,58.6,239.5,60.3z\"/>\n                            <g className=\"st5-med-green\" >\n                                <path d=\"M230.1,86.2l3.7-1.5l6.4-3.1c1.2-0.9,2.2-0.8,3,0.4l0.1,21.6l-12.1,6.8l-1.7-0.1l-0.7-22.7 C229,87,229.5,86.6,230.1,86.2z\"/>\n                                <path d=\"M252.2,65.6l3.7-1.5l6.4-3.1c1.2-0.9,2.2-0.8,3,0.4l0.5,30.1l-12.3,7c-0.5,0.3-1,0.4-1.4,0.3l-0.1-1.8l-1.1-30 C251,66.4,251.5,66,252.2,65.6z\"/>\n                            </g>\n                            <g className=\"st6-light-yellow\" >\n                                <path d=\"M218.1,80.9l0.3,22.8l4.5,2.9l-2.8-3.5l-0.5-21.5l5.4,2.5c-1.1-1-4.6-4.8-4.6-4.8l8.2-4.3 c1.4-0.9,2.6-1,5.9,0.2c-0.9-0.8-3.9-2.8-5.3-1.8l-9.6,4.4C218.4,78.2,218,79.4,218.1,80.9z\"/>\n                                <path d=\"M240.1,60.8l0.2,16.6l1.7,0.9l-0.4-16.8l5.4,2.5c-1.1-1-4.6-4.8-4.6-4.8l8.2-4.3c1.4-0.9,2.6-1,5.9,0.2 c-0.9-0.8-3.9-2.8-5.3-1.8l-9.6,4.4C240.4,58.2,239.9,59.3,240.1,60.8z\"/>\n                            </g>\n                            <path className=\"st7-bright-yellow\" d=\"M195.8,68.1l20.5-3.5l0.8,23.8l-7.3,11.7l-14.3-9.1L195,69.6C194.8,68.7,195.1,68.2,195.8,68.1z\"/>\n                            <path className=\"st8-med-yellow\" d=\"M198.5,69.3c0.3-0.2,0.6-0.3,1-0.3l16.2-4.3l-19.2,3.2c-1,0.1-1.7,0.1-1.5,1.4l0.8,21.5l3.1,2.1l-0.8-3 l-0.4-18.4l6.9,2.6L198.5,69.3z\"/>\n                            <polygon className=\"st9-yellow-green\" points=\"208.8,77.2 209.6,99.6 217.1,88.4 216.3,64.6 \"/>\n                            <path className=\"st7-bright-yellow\" d=\"M171.3,88.8l22.2-2.7l0.9,14.7l-7.2,11.8l-15.6-9.8l-1.1-12.4C170.3,89.4,170.6,89,171.3,88.8z\"/>\n                            <path className=\"st8-med-yellow\" d=\"M193.4,86.3l-22,2.6c-0.7,0-1,0.5-0.7,1.4l0.9,12l2.5,1.6l-0.6-11.1l8.8,3.1l-7.9-5.6c1.4-0.2,7.8-1.1,9.9-1.5 C186.6,88.2,193.4,86.3,193.4,86.3z\"/>\n                            <polygon className=\"st9-yellow-green\" points=\"193.4,86.3 185.9,98.3 186.8,112 194.3,100.9 \"/>\n                            <path className=\"st7-bright-yellow\" d=\"M216.7,47.8l0.9-0.7l19.8-3.3c0.5-0.1,0.8,0.4,1,1l0.6,32.3l-8.9-4.8l-12.5,5.9L216.7,47.8z\"/>\n                            <path className=\"st8-med-yellow\" d=\"M217.2,48.6l0.7,29.4l2.2-1l-0.2-27.6c0.4-0.6,0.9-1,1.8-1.1l16.2-4.3l-19.2,3.2 C217.7,47.3,217,47.3,217.2,48.6z\"/>\n                            <polygon className=\"st9-yellow-green\" points=\"231,55.2 231.7,72.9 239.4,76.8 238.6,44.1 \"/>\n                            <path className=\"st10-light-purple\" d=\"M157.5,78.4c0.6-3.1,3.2-5.2,9.2-5.8c5.5-0.1,9.7,1.2,11.5,4.8l0.4,10.2l-7.4,1l-0.8,0.9l0.3,7.2 c-4.5,1.8-8.8,1.1-12.6-2.7L157.5,78.4z\"/>\n                            <path className=\"st11-purple\" d=\"M161.6,81.1c-2.2-2.8-2.5-5.3,1-7.3c-3.6,0.5-5.9,2.8-3.7,5.7C159.7,80.3,160.6,80.8,161.6,81.1z\"/>\n                            <path className=\"st12-dark-purple\" d=\"M170.6,88.6l0,8.3c-1.5,0.7-2.4,1-4.2,1l-0.2-13.7c-0.1-1-0.3-1.3-0.8-1.8c5.6,0.5,10.3-0.6,12.7-5l0.4,10.1 L170.6,88.6z\"/>\n                            <path className=\"st11-purple\" d=\"M158.3,79.6c0.5,1.1,0.7,2,0.8,2.8l0.3,11.6c-0.1,0.5-0.3,0.8-0.6,1c1,0.8,2.1,1.5,3.1,1.7 c-0.2-0.6-0.4-1.2-0.3-1.9L161.3,83c0-0.5,0.1-0.9,0.4-1.2C160.5,81.3,159.1,80.5,158.3,79.6z\"/>\n                            <path className=\"st10-light-purple\" d=\"M179.6,55.9c0.9-3.5,4.4-5.1,9.8-5.3c5,0,8.6,1.4,10.4,4.7l0.7,1.3l0.3,10.3l-5.7,1.1l-0.5,1.4l0.4,15.2 c-5.4,2.1-10.4,1.6-14.9-3.3L179.6,55.9z\"/>\n                            <path className=\"st12-dark-purple\" d=\"M187.8,60.6c0.9,0.5,1.2,1.3,1.2,2l0.1,19.9c-0.1,1.6-0.8,2.2-2,2.6c2.5,0.6,5,0.4,7.7-0.6l-0.4-15.8l1.2-0.9 l5.3-1l-0.4-10.1l-0.5-1.3c-0.7,2-1.9,3.2-3.5,3.7c-1.1,0.5-2.2,0.9-3.1,1C191.7,60.6,189.8,60.7,187.8,60.6z\"/>\n                            <path className=\"st11-purple\" d=\"M184.2,59.3c-2.3-2.9-2.8-5.5,0.8-7.6c-3.8,0.5-6.2,3-3.8,6C181.9,58.6,183.1,59,184.2,59.3z\"/>\n                            <path className=\"st11-purple\" d=\"M180.5,57.8c0.5,1.1,0.8,2.1,0.8,3l0.3,20.2c-0.1,0.5-0.3,0.8-0.6,1.1c1.1,0.9,2.2,1.5,3.2,1.8 c-0.3-0.6-0.4-1.3-0.3-2l-0.2-20.5c0-0.5,0.3-1.1,0.5-1.5C183,59.4,181.4,58.7,180.5,57.8z\"/>\n                            <path className=\"st10-light-purple\" d=\"M222.7,46l-5.1,0.9l-1.2,0.9l0.1,16.5l-14.3,2.2l-0.6-27.2L202,36c3.7-6.7,17.6-6.3,20.6,0.7L222.7,46z\"/>\n                            <path className=\"st12-dark-purple\" d=\"M210,41.8c0.9,0.5,1.2,2,1.2,2.7l0,20.6l4.9-0.7l0.9,0.3L216.3,48l1.2-0.9l5.5-1l-0.2-8.1l-0.4-1.3 c-0.7,2-2.1,3.1-3.6,3.6c-1.1,0.5-2.2,0.9-3.1,1C213.8,41.7,211.9,41.8,210,41.8z\"/>\n                            <path className=\"st11-purple\" d=\"M206.2,40.5c-2.3-2.9-2.6-5.5,1.1-7.6c-3.8,0.5-6.2,3-3.8,6C204.2,39.7,205.1,40.2,206.2,40.5z\"/>\n                            <path className=\"st11-purple\" d=\"M202.7,39c0.5,1.1,0.8,2.1,0.8,3l0.2,24.1l2.2-0.3l-0.1-23.2c0-0.5,0.1-0.9,0.4-1.3 C205.1,40.7,203.6,39.9,202.7,39z\"/>\n                            <path className=\"st13-blue\" d=\"M182.3,47.5c0.2-0.1-0.3-21.8-0.3-21.8c0-0.8,0.2-1.4,1-1.6l8.9-4.2l13.6,7.4c0.4,0.2,0.2,0.6,0.3,1.1l0,4.2 c0,0-2.8,1.6-3.8,3.4c-1,1.9,0,6.1,0,6.1l0.4,10.2l-0.1,14.1l-1.3,0.4V56.4l-1.4-2.4l-4.5-3l-3.7-0.3c-2.7-0.2-5.6,0.1-8.5,1 L182.3,47.5z\"/>\n                            <path className=\"st14-blue-desat\" d=\"M192.9,20.5l1.9,1.1l-2.1-0.7c-0.2-0.1-0.3-0.1-0.5,0l-7.6,4c-0.1,0.1-0.1,0.2-0.1,0.3l6.7,5.3l-7.4-4 c-0.2,0-0.3,0-0.3,0.2l0,18.4c0,1.2-0.8,6.6-0.8,6.6l-0.2-5.1l-0.2-0.5l-0.4-20.9c0.1-0.6,0.3-1.1,0.8-1.2l1.5-0.7l7.4-3.6 L192.9,20.5z\"/>\n                            <path className=\"st15-blue-dark\" d=\"M195.1,32.6L195,51c2.2,0.9,4,2,5.1,3.7l0.6,3.4l0.2,8.7l1.3-0.4l-0.4-14.1l-0.1-15.2c0.5-2.5,1.7-4.5,4-5 l-0.1-4.7l-1.7,0.8L195.1,32.6z\"/>\n\t                        <path className=\"st16-grey\" d=\"M182.3,46.8c-0.2-0.3-0.2-0.7-0.2-1l0-1l-0.1-2.1l-0.2-4.1c-0.1-2.8-0.2-5.5-0.3-8.3l-0.1-4.1 c0-0.3,0-0.8,0.1-1.2c0.1-0.4,0.5-0.8,0.8-1.1c0.2-0.1,0.4-0.2,0.6-0.3l0.5-0.2l0.9-0.4c2.5-1.2,5-2.3,7.6-3.3l0,0l0.2-0.1l0.2,0.1 l8.9,5.1l2.2,1.3l1.1,0.6l0.6,0.3c0.2,0.1,0.4,0.2,0.6,0.4c0.2,0.2,0.3,0.5,0.3,0.8l0,0.6l0,1.3l0,2.6l-0.5,0l0-2.6l0-1.3l0-0.6 c0-0.2,0-0.3-0.1-0.4c-0.1-0.1-0.3-0.2-0.5-0.3l-0.6-0.3l-1.1-0.6L201,25l-9-4.9l0.4,0l0,0c-2.5,1.3-4.9,2.5-7.4,3.7l-0.9,0.4 l-0.5,0.2c-0.1,0.1-0.2,0.1-0.3,0.2c-0.4,0.3-0.5,0.7-0.5,1.4l0.1,4.1c0.1,2.8,0.1,5.5,0.1,8.3l0,4.1l0,2.1l0,1c0,0.3,0,0.7-0.1,1 L182.3,46.8z\"/>\n\t                        <path className=\"st16-grey\" d=\"M183.4,25.3c1,0.5,1.9,1.1,2.8,1.6l2.8,1.6c1.9,1.1,3.8,2.2,5.6,3.3l0,0l0,0c0.1,0.1,0.2,0.1,0.3,0.1 c0.1,0,0.3-0.1,0.4-0.2l0,0l0,0c1.3-0.7,2.7-1.3,4.1-1.9c1.4-0.6,2.8-1.2,4.2-1.7c-1.3,0.9-2.6,1.6-3.9,2.3 c-1.3,0.8-2.6,1.5-3.9,2.2l0.1,0c-0.3,0.2-0.6,0.4-1,0.4c-0.4,0-0.8-0.2-1.1-0.4l0.1,0c-1.8-1.2-3.6-2.4-5.4-3.7l-2.7-1.9 C185.2,26.6,184.3,26,183.4,25.3z\"/>\n\t                        <path className=\"st16-grey\" d=\"M195,34.6c0.3,0.7,0.3,1.3,0.3,2l0,2l0,4l0,4l0,2c0,0.7,0.1,1.3-0.2,2c-0.3-0.7-0.2-1.3-0.2-2l0-2l-0.1-4l0-4 l0-2C194.7,35.9,194.7,35.2,195,34.6z\"/>\n                            <path className=\"st13-blue\" d=\"M137.5,78.1c0.2-0.1-0.3-12.7-0.3-12.7c0-0.8,0.2-1.4,1-1.6l8.9-4.2l12.9,7.5c0.4,0.2,0.6,0.5,0.7,1l-0.1,5.5 c0,0-1.8,1-2.8,2.8s-0.6,5.5-0.6,5.5l-7.1,3.8l-12.4-7.5L137.5,78.1z\"/>\n                            <path className=\"st14-blue-desat\" d=\"M148.2,60.7l-8.1,3.8c-0.9,0.2-0.6,1-0.3,1.9c-0.8-0.3-1.2-0.3-1.4,0.5l0.1,9.5c-0.2,0.8,0.3,1.5,0.8,2 l1.5,1.7l-3.4-2l0.1-0.6l-0.3-12.1c0.1-0.6,0.3-1.1,0.8-1.2l1.5-0.7l7.4-3.6L148.2,60.7z\"/>\n                            <path className=\"st15-blue-dark\" d=\"M149.9,72.4l0,13.5l7.3-4l-0.2-3.4c0.3-2.3,1.4-4.1,3.5-4.9l0-6.3l-1.1,0.6L149.9,72.4z\"/>\n                            <path className=\"st13-blue\" d=\"M159.3,66.7c0.2-0.1-0.3-21.8-0.3-21.8c0-0.8,0.2-1.4,1-1.6L169,39l13,7.3c0.4,0.2,0.5,0.7,0.5,1.2l-0.1,4.5 c0,0-1.8,2-2.8,3.8c-1,1.9-0.6,5.5-0.6,5.5l0.4,10.2l-3.7,2.5l-3.9-1.5l-4.3-0.5L159.3,66.7z\"/>\n                            <path className=\"st14-blue-desat\" d=\"M170.2,39.8l2.2,1.1l-2.7-0.7c-0.2-0.1-0.3,0-0.4,0l-7.7,3.8c-0.1,0.1-0.1,0.2-0.1,0.3l7,5.4l-7.8-4.3 c-0.2,0-0.3,0-0.3,0.2l-0.1,18.4c0,1.2,0.3,1.6,0.9,2.4l2,2.5l-1.9-1.2l-0.4-0.2l-1.6-1.9l0.1-0.6l-0.2-20.7 c0.1-0.6,0.3-1.1,0.8-1.2l1.5-0.7l7.4-3.6L170.2,39.8z\"/>\n                            <path className=\"st15-blue-dark\" d=\"M172.2,52l-0.5,20.9l3.9,0.8l3.8-2.2L179,57.9c0.3-2.3,1.4-5,3.5-5.8l-0.2-5.4L172.2,52z\"/>\n                            <path className=\"st16-grey\" d=\"M159,66.3c-0.2-0.5-0.2-0.9-0.2-1.4l0-1.4l-0.1-2.7l-0.2-5.5l-0.3-11l0,0c-0.1-0.7,0.4-1.4,1-1.6l1.2-0.6 l2.5-1.2l4.9-2.3l0,0c0.3-0.2,0.7-0.3,1.1-0.3c0.4,0,0.9,0.2,1.2,0.5l-0.1-0.1c4.3,2.5,8.5,4.9,12.8,7.4l0,0l0.1,0.1l0,0.2l-0.1,5 l-0.5,0l0.1-5l0.1,0.2l0,0c-4.4-2.3-8.7-4.6-13-6.9l0,0l-0.1-0.1c-0.1-0.1-0.3-0.2-0.4-0.2c-0.2,0-0.4,0.1-0.6,0.2l0,0l0,0 l-4.9,2.3l-2.5,1.1l-1.2,0.6c-0.2,0.1-0.4,0.4-0.4,0.6l0,0l0,0l0.3,11l0.1,5.5l0.1,2.7l0,1.4c0,0.5,0.1,0.9-0.1,1.4L159,66.3z\"/>\n                            <path className=\"st16-grey\" d=\"M160.2,44.4c2,1.1,4,2.3,6,3.4l5.9,3.5l-0.5,0c1.6-0.7,3.2-1.4,4.8-2.1c1.6-0.7,3.2-1.4,4.9-1.9 c-1.5,0.9-3,1.8-4.6,2.6c-1.5,0.8-3.1,1.7-4.6,2.4l-0.3,0.1l-0.3-0.2l-5.7-3.9C163.9,47.1,162,45.8,160.2,44.4z\"/>\n                            <path className=\"st16-grey\" d=\"M172.1,51.8c0.1,0.8,0.1,1.6,0.1,2.3l0,2.3l-0.1,4.6l-0.1,4.6l-0.1,2.3c0,0.8,0,1.6-0.2,2.3 c-0.2-0.8-0.1-1.6-0.2-2.3l0-2.3l-0.1-4.7l0-4.7l0-2.3c0-0.8,0-1.6,0.1-2.3L172.1,51.8z\"/>\n                            <path className=\"st16-grey\" d=\"M137.5,78.1c-0.3-0.2-0.4-0.5-0.4-0.8l0-0.8l-0.1-1.6l-0.1-3.1c-0.1-2.1-0.1-4.2-0.2-6.3l0,0\tc-0.1-0.4-0.1-0.9,0.2-1.4c0.2-0.5,0.7-0.7,1.1-0.8l0,0c1.6-0.7,3.1-1.5,4.7-2.2l2.4-1.1l1.2-0.5l0.6-0.3c0.3-0.1,0.7-0.1,0.9,0.2 l-0.1,0c1.1,0.6,2.2,1.1,3.2,1.7l3.2,1.8l6.4,3.6l0,0c0.3,0.1,0.5,0.4,0.6,0.7c0.1,0.3,0.1,0.6,0.1,0.9l0,0 c-0.1,0.9-0.1,1.7-0.1,2.6l0,1.3c0,0.4,0,0.9,0,1.3l-0.5,0c0.1-0.4,0.1-0.9,0.1-1.3l0-1.3c0-0.9,0-1.7,0-2.6l0,0l0,0 c0.1-0.4-0.1-0.8-0.4-0.9l0,0l0,0l-6.4-3.5l-3.2-1.8c-1.1-0.6-2.1-1.2-3.2-1.8l0,0l0,0c-0.1-0.1-0.1-0.1-0.3,0l-0.6,0.3l-1.2,0.6 l-2.3,1.1c-1.5,0.8-3.1,1.5-4.7,2.2l0,0l0,0c-0.3,0.1-0.6,0.3-0.7,0.5c-0.1,0.2-0.2,0.6-0.1,0.9l0,0l0,0c0,2.1,0.2,4.2,0.3,6.3 l0.1,3.1l0,1.6l0,0.8C137.8,77.6,137.7,77.9,137.5,78.1z\"/>\n                            <path className=\"st16-grey\" d=\"M154.2,63.4c-0.1-0.3,0-0.2,0.1-0.3l0.1-0.1l0.3-0.2c0.2-0.1,0.4-0.2,0.6-0.3l1.2-0.6 c0.4-0.2,0.8-0.4,1.2-0.6c0.4-0.2,0.8-0.4,1.3-0.4l0.2,0.3c-0.3,0.3-0.8,0.5-1.1,0.7c-0.4,0.2-0.8,0.4-1.2,0.6l-1.2,0.6 c-0.2,0.1-0.4,0.2-0.6,0.3l-0.3,0.1l-0.2,0.1C154.4,63.5,154.4,63.7,154.2,63.4z\"/>\n                        \t<path className=\"st16-grey\" d=\"M138.3,65.1c0.9,0.8,1.8,1.5,2.9,2.1l3.1,1.8l3.1,1.8l1.6,0.9l0.2,0.1c0.1,0,0.1,0,0.1,0.1 c0.1,0,0.2,0.1,0.3,0.1c0.3,0,0.5,0,0.8,0l-0.1,0c1.5-0.7,3-1.4,4.5-2c1.5-0.7,3-1.3,4.6-1.8c-1.4,0.9-2.9,1.7-4.3,2.4 c-1.5,0.8-2.9,1.5-4.4,2.2l-0.1,0l-0.1,0c-0.3,0-0.7,0.1-1,0c-0.2,0-0.3-0.1-0.5-0.1c-0.1,0-0.2-0.1-0.3-0.1l-0.2-0.1l-1.6-0.9 c-1-0.6-2-1.3-3-1.9l-3-2C140,66.9,139,66.1,138.3,65.1z\"/>\n                        \t<path className=\"st16-grey\" d=\"M149.9,73.6c0.2,0.5,0.2,1,0.2,1.5l0,1.5l0,3.1c0,2,0,4.1-0.1,6.1l0,0.5l-0.4-0.2c-2.1-1.2-4.1-2.5-6.2-3.8 l-3.1-2c-1-0.7-2.1-1.2-3-2.1c1.2,0.4,2.2,1.1,3.2,1.7l3.1,1.9c2.1,1.3,4.1,2.5,6.2,3.8l-0.4,0.2c0-2,0-4.1,0-6.1l0.1-3.1l0-1.5 C149.7,74.6,149.7,74.1,149.9,73.6z\"/>\n                            <line className=\"st16-grey\" x1=\"157.1\" y1=\"81.9\" x2=\"150\" y2=\"86\"/>\n\t                        <path className=\"st16-grey\" d=\"M171.4,82.1c-1.8,0.5-3.8,0.7-5.7,0.6c-1.9-0.1-3.8-0.6-5.6-1.5c-0.9-0.5-1.7-1.1-2.3-1.9 c-0.6-0.8-0.8-2.1-0.4-3.2c0.4-1,1.2-1.8,2.1-2.3c0.8-0.6,1.8-1,2.7-1.3c1.9-0.6,3.8-0.9,5.8-0.8c1.9,0.1,3.9,0.4,5.8,1.1 c0.9,0.4,1.8,0.8,2.6,1.5c0.8,0.6,1.5,1.5,1.7,2.6c0.2,1.1-0.3,2.2-1,2.9c-0.7,0.7-1.6,1.2-2.5,1.5c0.8-0.5,1.6-1.1,2.1-1.8 c0.6-0.7,0.8-1.6,0.6-2.4c-0.2-0.8-0.8-1.5-1.5-2c-0.7-0.5-1.5-0.9-2.4-1.2c-1.7-0.6-3.6-0.8-5.4-0.8c-1.8,0-3.7,0.2-5.4,0.7 c-0.9,0.3-1.7,0.6-2.5,1.1c-0.7,0.5-1.4,1.1-1.7,1.8c-0.3,0.7-0.3,1.5,0.2,2.2c0.4,0.7,1.2,1.3,1.9,1.7c1.6,0.9,3.4,1.3,5.3,1.6 C167.7,82.3,169.5,82.3,171.4,82.1z\"/>\n                            <path className=\"st16-grey\" d=\"M157.9,76.5c-0.2,0.7-0.3,1.4-0.3,2.1c0,0.7,0.1,1.5,0.1,2.2c0.1,1.5,0.2,3,0.3,4.5c0.1,1.5,0.2,3,0.2,4.5 c0.1,1.5,0.1,3,0,4.5l-0.5,0c-0.2-1.5-0.4-3-0.5-4.4c-0.1-1.5-0.2-3-0.3-4.5c-0.1-1.5-0.1-3-0.2-4.5c0-0.8-0.1-1.4,0-2.3 c0.1-0.8,0.3-1.6,0.7-2.3L157.9,76.5z\"/>\n                            <path className=\"st16-grey\" d=\"M193.5,60.1c-1.8,0.5-3.8,0.7-5.7,0.6c-1.9-0.1-3.8-0.6-5.6-1.5c-0.9-0.5-1.7-1.1-2.3-1.9 c-0.6-0.9-0.8-2.1-0.4-3.2c0.4-1,1.2-1.8,2.1-2.3c0.8-0.6,1.8-1,2.7-1.3c1.9-0.6,3.8-0.9,5.8-0.8c1.9,0.1,3.9,0.4,5.8,1.1 c0.9,0.4,1.8,0.8,2.6,1.5c0.8,0.6,1.5,1.5,1.7,2.6c0.2,1.1-0.3,2.2-1,2.9c-0.7,0.7-1.6,1.2-2.5,1.5c0.8-0.5,1.6-1.1,2.1-1.8 c0.6-0.7,0.8-1.6,0.6-2.4c-0.2-0.8-0.8-1.5-1.5-2c-0.7-0.5-1.5-0.9-2.4-1.2c-1.7-0.6-3.6-0.8-5.4-0.8c-1.8,0-3.7,0.2-5.4,0.7 c-0.9,0.3-1.7,0.6-2.5,1.1c-0.7,0.5-1.4,1.1-1.7,1.8c-0.3,0.7-0.3,1.5,0.2,2.2c0.4,0.7,1.2,1.3,1.9,1.7c1.6,0.9,3.4,1.3,5.3,1.6 C189.7,60.3,191.6,60.4,193.5,60.1z\"/>\n                            <path className=\"st16-grey\" d=\"M215.7,41.3c-1.8,0.5-3.8,0.7-5.7,0.6c-1.9-0.1-3.8-0.6-5.6-1.5c-0.9-0.5-1.7-1.1-2.3-1.9 c-0.6-0.9-0.8-2.1-0.4-3.2c0.4-1,1.2-1.8,2.1-2.3c0.8-0.6,1.8-1,2.7-1.3c1.9-0.6,3.8-0.9,5.8-0.8c1.9,0.1,3.9,0.4,5.8,1.1 c0.9,0.4,1.8,0.8,2.6,1.5c0.8,0.6,1.5,1.5,1.7,2.6c0.2,1.1-0.3,2.2-1,2.9c-0.7,0.7-1.6,1.2-2.5,1.5c0.8-0.5,1.6-1.1,2.1-1.8 c0.6-0.7,0.8-1.6,0.6-2.4c-0.2-0.8-0.8-1.5-1.5-2c-0.7-0.5-1.5-0.9-2.4-1.2c-1.7-0.6-3.6-0.8-5.4-0.8c-1.8,0-3.7,0.2-5.4,0.7 c-0.9,0.3-1.7,0.6-2.5,1.1c-0.7,0.5-1.4,1.1-1.7,1.8c-0.3,0.7-0.3,1.5,0.2,2.2c0.4,0.7,1.2,1.3,1.9,1.7c1.6,0.9,3.4,1.3,5.3,1.6 C212,41.4,213.8,41.5,215.7,41.3z\"/>\n                            <path className=\"st16-grey\" d=\"M180,54.6c-0.1,0.5-0.2,1.1-0.3,1.6c-0.1,0.5,0,1,0,1.6l0.2,3.4c0.1,2.3,0.2,4.5,0.3,6.8 c0.1,2.3,0.2,4.5,0.2,6.8c0.1,2.3,0,4.5,0,6.8l-0.5,0c-0.2-2.3-0.4-4.5-0.5-6.8c-0.1-2.3-0.2-4.5-0.3-6.8c-0.1-2.3-0.2-4.5-0.2-6.8 l-0.1-3.4l0-0.9c0-0.3,0-0.6,0.1-0.9c0.1-0.6,0.3-1.2,0.6-1.7L180,54.6z\"/>\n                            <path className=\"st16-grey\" d=\"M202.1,35.7c-0.1,0.6-0.2,1.2-0.3,1.8c0,0.6,0,1.2,0.1,1.9l0.1,3.9c0.1,2.6,0.2,5.1,0.2,7.7 c0.1,5.1,0.3,10.3,0.2,15.4l-0.5,0c-0.4-5.1-0.6-10.3-0.7-15.4c-0.1-2.6-0.1-5.1-0.2-7.7l-0.1-3.9c0-0.6-0.1-1.3,0-2 c0.1-0.7,0.3-1.3,0.6-1.9L202.1,35.7z\"/>\n                            <path className=\"st16-grey\" d=\"M177.2,75.7c0,0,1.1,1.4,1.2,3c0,1.3,0.3,9.4,0.3,9.4\"/>\n                            <path className=\"st16-grey\" d=\"M199.5,54c0,0,1.1,1.4,1.2,3c0,1.3,0.3,9.6,0.3,9.6\"/>\n                            <path className=\"st16-grey\" d=\"M221.5,34.6c0,0,1.1,1.4,1.2,3c0,1.3,0.2,8,0.2,8\"/>\n                            <path className=\"st16-grey\" d=\"M194.1,100.7c-0.2-1.2-0.2-2.4-0.2-3.6l-0.2-3.5l-0.3-7.1l0,0c0-0.1-0.1-0.3-0.1-0.2c0,0,0,0,0,0 c0,0-0.1,0-0.1,0l0,0l0,0l-22,2.8l0,0c-0.2,0-0.2,0-0.2,0.1c-0.1,0.1,0,0.4,0,0.7l0.1,1.8l0.3,3.5l0.5,7.1l-0.2-0.4l15.9,10 l-0.7,0.2l3.6-5.7l1.8-2.9C192.8,102.6,193.3,101.6,194.1,100.7z M194.7,100.8c-0.4,1-1.1,2-1.7,3l-1.8,3l-3.6,5.9l-0.3,0.5 l-0.5-0.3l-15.9-10l-0.2-0.1l0-0.3l-0.5-7.1l-0.2-3.5l-0.1-1.8c0-0.3-0.1-0.6,0.1-1.1c0.1-0.2,0.2-0.5,0.5-0.6 c0.2-0.1,0.5-0.2,0.7-0.2l0,0l22-2.7l-0.1,0c0.1,0,0.3-0.1,0.4,0c0.2,0,0.4,0.1,0.5,0.2c0.3,0.3,0.3,0.5,0.3,0.7l0,0l0,0l0.3,7.2 l0.1,3.6C194.6,98.5,194.8,99.7,194.7,100.8z\"/>\n                        \t<path className=\"st16-grey\" d=\"M172.4,90.4c1.3,0.6,2.5,1.3,3.7,1.9l3.7,2c1.2,0.7,2.4,1.4,3.6,2.1l1.8,1c0.2,0.2,1-0.1,1.2-0.4l0,0l0,0 c1-1.6,2.1-3.1,3.1-4.6l1.6-2.3c0.5-0.8,1.1-1.5,1.6-2.3c-0.4,0.8-0.9,1.6-1.4,2.4l-1.4,2.4c-0.9,1.6-1.9,3.2-2.8,4.8l0-0.1 c-0.3,0.5-0.7,0.7-1.1,0.9c-0.4,0.1-0.9,0.2-1.4,0l-1.8-1.1c-1.2-0.7-2.4-1.5-3.5-2.2l-3.5-2.3C174.6,92,173.5,91.2,172.4,90.4z\"/>\n                        \t<path className=\"st16-grey\" d=\"M186.8,111.7c-0.5-1.1-0.4-2.2-0.5-3.2l-0.2-3.3c-0.1-2.2-0.2-4.3-0.3-6.5c0.3,2.2,0.5,4.3,0.7,6.5l0.3,3.2 C186.9,109.5,187.2,110.5,186.8,111.7z\"/>\n                        \t<path className=\"st16-grey\" d=\"M216.9,88.3c-0.2-2-0.2-3.9-0.3-5.9l-0.2-5.8L216.1,65l0,0c0-0.2-0.1-0.2-0.1-0.2c0,0-0.1,0-0.1,0l-0.3,0.1 l-1.4,0.2l-2.8,0.5l-5.6,1l-5.6,1l-2.8,0.5l-1.4,0.2c-0.5,0.1-0.9,0.2-0.9,0.3c-0.1,0.2-0.1,0.7,0,1.2l0.1,1.4l0.1,2.8l0.2,5.7 l0.5,11.3l-0.2-0.4l13.2,8.6l0,0l0,0c0.2,0.2,0.6,0.2,0.9-0.1c0,0,0.1-0.1,0.1-0.1l0.1-0.2l0.2-0.4l0.5-0.8l1.9-3.1l1.9-3.1 C215.5,90.4,216,89.3,216.9,88.3z M217.4,88.5c-0.4,1.1-1.1,2.2-1.8,3.2l-1.9,3.2l-1.9,3.2l-0.5,0.8l-0.2,0.4l-0.1,0.2 c-0.1,0.1-0.1,0.2-0.2,0.3c-0.3,0.3-0.7,0.6-1.2,0.6c-0.5,0-0.9-0.1-1.2-0.5l0.1,0.1l-13.2-8.6l-0.2-0.1l0-0.3l-0.4-11.3l-0.2-5.7 l-0.1-2.8l-0.1-1.4c0-0.5-0.1-0.9,0.1-1.6c0.2-0.4,0.6-0.6,0.8-0.6c0.3-0.1,0.5-0.1,0.8-0.1l1.4-0.2l2.8-0.5l5.6-1l5.6-1l2.8-0.5 l1.4-0.2l0.4-0.1c0.2,0,0.3,0,0.6,0c0.2,0.1,0.4,0.2,0.5,0.4c0.1,0.2,0.1,0.3,0.1,0.5l0,0l0,0l0.3,11.8l0.1,5.9 C217.4,84.6,217.5,86.6,217.4,88.5z\"/>\n                            <path className=\"st16-grey\" d=\"M239,77.4c-0.2-1.4-0.1-2.9-0.2-4.3l-0.1-4.3l-0.2-8.6l-0.2-8.6l-0.1-4.3l-0.1-2.2c0-0.4,0-0.7-0.1-0.9 c-0.1-0.2-0.2-0.2-0.5-0.2l0.1,0l-13,2.2l-6.5,1.1c-0.3,0.1-0.6,0.1-0.7,0.1c-0.1,0-0.2,0.1-0.2,0.1c0,0,0,0,0,0.1 c0,0.1,0,0.4,0,0.7l0,0.8l0.1,3.3l0.4,13.2l0.2,6.6l0.1,3.3c0,1.1,0.1,2.2-0.1,3.3l-0.5,0c-0.3-1.1-0.2-2.2-0.3-3.3l-0.1-3.3 l-0.2-6.6l-0.4-13.2l-0.1-3.3l0-0.8c0-0.3-0.1-0.6,0.1-1c0.1-0.2,0.2-0.5,0.4-0.6c0.2-0.1,0.4-0.2,0.5-0.3c0.3-0.1,0.6-0.1,0.9-0.2 l6.5-1.1l13-2.2l0,0l0,0c0.2,0,0.5,0,0.7,0.2c0.3,0.1,0.5,0.4,0.6,0.6c0.1,0.2,0.1,0.5,0.1,0.7l0,0.6l0,2.2l0.1,4.3l0.2,8.6 l0.2,8.6l0.1,4.3c0,1.4,0.1,2.9,0,4.3L239,77.4z\"/>\n                            <path className=\"st16-grey\" d=\"M196.4,69.2c2.2,1,4.2,2.3,6.3,3.5c2.1,1.2,4.2,2.4,6.2,3.7l-0.7,0.2l3.4-4.8c1.1-1.6,2.2-3.2,3.4-4.8 c-0.9,1.7-2,3.4-3,5.1l-3,5l-0.3,0.4l-0.4-0.3c-2-1.3-4-2.6-6-3.9C200.4,72,198.3,70.7,196.4,69.2z\"/>\n                            <path className=\"st16-grey\" d=\"M208.9,76.8c0.3,1.6,0.2,3.1,0.3,4.7l0.1,4.7c0.1,3.1,0.2,6.3,0.2,9.4c-0.3-3.1-0.5-6.3-0.7-9.4l-0.3-4.7 c-0.1-1.6-0.3-3.1-0.2-4.7L208.9,76.8z\"/>\n                        \t<path className=\"st16-grey\" d=\"M218.1,47.8c2.4,1.1,4.6,2.4,6.9,3.6l3.4,1.9l1.7,1c0.3,0.2,0.6,0.3,0.7,0.3c0,0,0,0,0.1,0 c0.1-0.1,0.2-0.1,0.3-0.3l0,0c1-1.5,2-3,3.1-4.4l1.6-2.2c0.5-0.7,1.1-1.5,1.6-2.2c-0.4,0.8-0.9,1.6-1.3,2.4l-1.4,2.3 c-0.9,1.6-1.8,3.1-2.8,4.6l0,0l0,0c-0.1,0.1-0.2,0.3-0.4,0.4c-0.2,0.1-0.5,0.3-0.8,0.2c-0.6-0.1-0.8-0.3-1.1-0.5l-1.7-1l-3.3-2.1 C222.4,50.7,220.2,49.4,218.1,47.8z\"/>\n                            <path className=\"st16-grey\" d=\"M231.3,72.5c-0.3-1.4-0.2-2.8-0.2-4.2l-0.1-4.2c0-2.8-0.1-5.6-0.1-8.3c0.2,2.8,0.4,5.6,0.5,8.3l0.2,4.2 c0.1,1.4,0.2,2.8,0.1,4.2L231.3,72.5z\"/>\n                        \t<path className=\"st16-grey\" d=\"M157.9,89.1c-0.8,1.3-0.9,3-0.1,4.3c0.4,0.6,0.9,1.2,1.5,1.7c0.6,0.5,1.3,0.9,2,1.2c1.4,0.7,2.9,1.2,4.5,1.2 c1.6,0.1,3.2-0.2,4.6-0.9l0.3,0.5c-1.5,0.8-3.2,1.2-4.9,1.2c-1.7,0-3.4-0.5-4.8-1.2c-1.5-0.7-3-1.7-3.9-3.2 c-0.4-0.8-0.6-1.7-0.6-2.6c0.1-0.9,0.4-1.7,0.9-2.4L157.9,89.1z\"/>\n                            <path className=\"st16-grey\" d=\"M179.9,79.3c-0.3,0.5-0.1,1.3,0.3,1.9c0.4,0.6,1,1.1,1.7,1.5c1.3,0.8,2.7,1.5,4.2,2.1c1.4,0.5,3,0.7,4.6,0.6 c1.5-0.1,3.1-0.5,4.5-1.1l0.2,0.5c-1.5,0.7-3.1,1.2-4.7,1.3c-1.6,0.2-3.3,0-4.9-0.6c-1.5-0.6-3-1.2-4.4-2.2c-0.7-0.5-1.3-1-1.8-1.8 c-0.5-0.7-0.7-1.8-0.1-2.6L179.9,79.3z\"/>\n                            <path className=\"st16-grey\" d=\"M157.1,82.2L157,83l-7.4,4.6l-14.6-10c-0.3-0.2-0.3-0.7,0-1l2.3-1.1l0.1,2.3l12.5,8.1L157.1,82.2z\"/>\n                            <path className=\"st16-grey\" d=\"M218,103.7c-0.3-0.5-0.4-1.1-0.4-1.7l-0.1-1.7l-0.1-3.3l-0.2-6.7l-0.2-6.7l-0.1-3.3c0-0.6,0-1.3,0.3-2 c0.3-0.7,0.9-1.3,1.6-1.5l-0.1,0l5-2.4c1.7-0.8,3.3-1.6,5-2.4l0,0c0.5-0.3,1-0.4,1.6-0.4c0.6,0,1.1,0.2,1.5,0.4l2.2,1.3l4.4,2.5 l4.4,2.6c0.4,0.3,0.8,0.6,1.1,1.2c0.3,0.5,0.3,1,0.3,1.5l0,2.6l-0.1,10.1c-0.1,3.4-0.1,6.8-0.4,10.1l-0.5,0 c-0.2-3.4-0.2-6.7-0.3-10.1l0-10.1l0-2.5c-0.1-0.8-0.2-1.2-0.9-1.6l-4.4-2.5l-4.4-2.5l-2.2-1.3c-0.6-0.3-1.2-0.3-1.7,0l0,0l0,0 c-1.7,0.8-3.4,1.6-5,2.4l-5,2.4l0,0l0,0c-0.7,0.2-1,1-0.9,2l0.1,3.3l0.1,6.7l0.1,6.7l0.1,3.3l0,1.7c0,0.6,0,1.1-0.3,1.7L218,103.7z \"/>\n                        \t<path className=\"st16-grey\" d=\"M230.1,86.2c0.9-0.7,2-1.2,3-1.7c1-0.5,2.1-1,3.1-1.6c1-0.5,2.1-1,3.1-1.5c0.5-0.2,1.1-0.4,1.7-0.6 c0.6-0.2,1.3,0,1.6,0.5c-0.2-0.2-0.5-0.3-0.7-0.4c-0.3,0-0.5,0-0.8,0.1c-0.5,0.1-1,0.6-1.5,0.8c-1,0.6-2.1,1-3.1,1.5 c-1.1,0.5-2.1,1-3.2,1.4C232.3,85.4,231.3,85.9,230.1,86.2z\"/>\n                        \t<path className=\"st16-grey\" d=\"M218.9,79.6c0.8,0.4,1.5,0.9,2.3,1.3c0.8,0.5,1.5,0.9,2.3,1.4c0.7,0.5,1.5,1,2.2,1.5c0.7,0.5,1.4,1.1,2,1.7 l0,0c0.4,0.2,0.7,0.6,0.9,1c0.2,0.4,0.2,0.9,0.2,1.3c-0.1-0.4-0.2-0.9-0.4-1.2c-0.2-0.3-0.6-0.6-0.9-0.8l0,0 c-0.8-0.4-1.5-0.9-2.3-1.3c-0.7-0.5-1.4-1-2.2-1.5c-0.7-0.5-1.4-1.1-2.1-1.7C220.2,80.7,219.5,80.2,218.9,79.6z\"/>\n\t                        <path className=\"st16-grey\" d=\"M229,88.9c0.3,1.8,0.2,3.7,0.4,5.5c0.1,1.8,0.1,3.7,0.2,5.5l0.1,5.5l0,2.7c0,0.9,0.1,1.8-0.1,2.7 c-0.2-0.9-0.2-1.8-0.2-2.7l-0.1-2.7l-0.2-5.5c0-1.8-0.1-3.7-0.1-5.5C228.9,92.6,228.8,90.8,229,88.9z\"/>\n                            <path className=\"st16-grey\" d=\"M230.6,111.3\"/>\n\t                        <path className=\"st16-grey\" d=\"M218.2,102.2c-0.3,0.3-0.5,0.5-0.8,0.7l0,0c0,0,0,0.1,0,0c0,0,0-0.2,0-0.2c0,0,0.1,0.1,0.2,0.1l0.9,0.6 l1.8,1.1l3.6,2.2l3.6,2.3l1.8,1.1c0.4,0.3,1,0.3,1.5,0.1c0.1,0,0.2-0.1,0.4-0.2l0.5-0.2l0.9-0.5l1.9-1l3.7-2l3.7-2l1.9-1l0.9-0.5 c0.1,0,0.1-0.1,0.1-0.1c0,0-0.1,0.1,0,0.2c0.1,0.1,0-0.1-0.2-0.1l0.1,0c-0.4-0.2-0.7-0.4-1.1-0.6l0.2-0.5c0.4,0.1,0.8,0.2,1.2,0.3 l0,0l0,0c0.2,0.1,0.4,0.1,0.6,0.6c0.1,0.3-0.1,0.6-0.2,0.7c-0.1,0.1-0.2,0.2-0.3,0.2l-0.9,0.5l-1.8,1l-3.7,2.1l-3.7,2.1l-1.8,1 l-0.9,0.5l-0.5,0.3c-0.2,0.1-0.4,0.2-0.6,0.3c-0.8,0.3-1.8,0.3-2.6-0.2l-1.8-1.2l-3.5-2.3l-3.5-2.3l-1.8-1.2l-0.9-0.6 c-0.1-0.1-0.4-0.2-0.5-0.5c-0.1-0.2-0.1-0.5,0-0.7c0.1-0.2,0.2-0.3,0.3-0.4l0,0c0.3-0.2,0.7-0.3,1-0.4L218.2,102.2z\"/>\n                        \t<path className=\"st16-grey\" d=\"M194.1,114.8c-0.1,0.1-0.3,0.3-0.2,0.5c0,0.1,0,0.2,0.1,0.2c-0.1,0,0.2,0.1,0.3,0.2l1.8,1.1l3.5,2.2l3.5,2.2 l1.8,1.1l0.9,0.5c0.3,0.2,0.5,0.3,0.8,0.4c0.5,0.1,1.1,0,1.6-0.2l1.8-1l3.6-2.1l7.2-4.1l0.4-0.3c0.1,0,0.1-0.1,0.1-0.1 c0,0-0.1,0-0.1,0.2c0,0.1,0.1,0.1,0,0.1c0,0-0.1-0.1-0.1-0.1l-0.4-0.3l-1.7-1.1l-3.5-2.3l-3.5-2.3l-1.7-1.1l-0.9-0.6 c-0.2-0.2-0.5-0.3-0.7-0.3c-0.3,0-0.5,0-0.8,0c-0.3,0.1-0.5,0.2-0.8,0.4l-1.8,1l-3.6,1.9L194.1,114.8z M193.6,114.1l7.3-4l3.6-2 l1.8-1c0.6-0.4,1.5-0.7,2.3-0.5c0.4,0.1,0.9,0.3,1.2,0.5l0.9,0.6l1.7,1.1l3.4,2.3l3.4,2.3l1.7,1.1l0.4,0.3c0.1,0,0.2,0.1,0.3,0.2 c0.1,0.1,0.2,0.2,0.3,0.5c0,0.3-0.2,0.6-0.3,0.7c-0.1,0.1-0.2,0.2-0.3,0.2l-0.4,0.3l-7.1,4.2l-3.6,2.1l-1.8,1 c-0.7,0.4-1.6,0.6-2.4,0.3c-0.4-0.1-0.8-0.4-1.1-0.6l-0.9-0.6l-1.7-1.1l-3.5-2.2l-3.5-2.2l-1.7-1.1c-0.1-0.1-0.3-0.1-0.5-0.4 c-0.2-0.3-0.2-0.5-0.2-0.8C192.9,114.8,193.1,114.4,193.6,114.1z\"/>\n\t                        <path className=\"st16-grey\" d=\"M211.1,121.5c-0.6-0.3-1.2-0.7-1.8-1c-0.5-0.4-1.2-0.4-1.9-0.3c-0.6,0.2-1.2,0.6-1.8,0.9 c-0.6,0.3-1.2,0.7-1.8,0.9c0.5-0.4,1.1-0.8,1.7-1.1l0.9-0.5c0.3-0.2,0.6-0.3,1-0.4c0.7-0.2,1.5-0.1,2,0.3 C210,120.7,210.6,121.1,211.1,121.5z\"/>\n                            <path className=\"st16-grey\" d=\"M239.6,77.9c-0.2-0.4-0.2-0.9-0.2-1.3l0-1.3l-0.1-2.7l-0.2-5.3l-0.2-5.3l0-1.3c0-0.5-0.1-0.9,0-1.4 c0-0.5,0.2-1.1,0.5-1.6c0.3-0.5,0.8-0.9,1.4-1.1l-0.1,0c1.7-0.8,3.3-1.6,5-2.4l5-2.4l0,0c0.5-0.3,1.3-0.5,1.9-0.4 c0.7,0.1,1.3,0.4,1.7,0.7l2.6,1.5l5.2,3l2.6,1.5c0.5,0.3,1.1,0.8,1.3,1.5c0.2,0.6,0.2,1.3,0.2,1.8l0,6.1l0,12.1l0,6.1l0,3 c0,1,0,2-0.2,3l-0.5,0c-0.3-1-0.2-2-0.3-3l-0.1-3l-0.1-6.1l-0.3-12.1l-0.1-6.1c0-0.5-0.1-0.9-0.2-1.2c-0.1-0.3-0.3-0.5-0.7-0.7 l-2.6-1.5l-5.3-3l-2.6-1.5c-0.5-0.3-0.7-0.4-1.1-0.5c-0.3,0-0.6,0-1,0.2l0,0l0,0l-5,2.4c-1.7,0.8-3.4,1.6-5.1,2.3l-0.1,0l0,0 c-0.6,0.2-0.9,0.7-1,1.4c0,0.3,0,0.8,0,1.3l0,1.3l0,5.3l0,5.3l0,2.7l0,1.3c0,0.4,0,0.9-0.1,1.3L239.6,77.9z\"/>\n                            <path className=\"st16-grey\" d=\"M252.1,65.8c0.9-0.7,2-1.1,3-1.7c1-0.5,2.1-1,3.1-1.5c1-0.5,2.1-1,3.2-1.4c0.5-0.2,1.1-0.4,1.6-0.6 c0.6-0.2,1.3,0,1.6,0.5c-0.4-0.5-1-0.5-1.6-0.3c-0.5,0.1-1,0.6-1.5,0.8c-1,0.6-2,1.1-3.1,1.6c-1,0.5-2.1,1-3.1,1.4 C254.2,65,253.2,65.5,252.1,65.8z\"/>\n            \t            <path className=\"st16-grey\" d=\"M240.8,59.2c0.8,0.4,1.5,0.9,2.3,1.4c0.7,0.5,1.5,1,2.2,1.5c1.4,1,2.9,1.9,4.3,3.1l0,0c0.4,0.2,0.7,0.6,0.9,1 c0.2,0.4,0.2,0.9,0.2,1.3c-0.1-0.4-0.2-0.8-0.4-1.2c-0.2-0.3-0.6-0.6-0.9-0.8l0,0c-1.5-0.9-2.9-2-4.3-3c-0.7-0.5-1.4-1-2.1-1.6 C242.2,60.3,241.4,59.8,240.8,59.2z\"/>\n                            <path className=\"st16-grey\" d=\"M250.9,68.5c0.3,1.2,0.3,2.4,0.4,3.6l0.2,3.6l0.3,7.1l0.2,7.1l0.1,3.6c0,1.2,0.1,2.4-0.1,3.6 c-0.3-1.2-0.3-2.4-0.4-3.6l-0.2-3.6l-0.3-7.1l-0.2-7.1l-0.1-3.6C250.8,70.9,250.8,69.7,250.9,68.5z\"/>\n                            <path className=\"st16-grey\" d=\"M243.7,93.8l7.4,4.9c0.8,0.5,1.6,0.6,2.5,0l13-7.5c0.5-0.3,0.5-0.5,0-0.8l-0.4-0.2\"/>\n                            <g className=\"st16-grey\">\n                                <path d=\"M194.2,98.4l2.1-0.1c0.4,0,0.6,0.2,0.5,0.6l-8.9,14.2c-0.4,0.7-0.9,0.7-1.6,0.3l-16.3-10.5 c-0.3-0.3-0.3-0.5,0.1-0.7l0.7-0.5l0.2,0.8l16.1,10l7.2-11.8L194.2,98.4z\"/>\n                                <path d=\"M217.8,85.9l-0.6,0l0.2,2.4l-7.2,11.8l-15.1-9.3L195,90l-0.7,0.5c-0.3,0.2-0.4,0.4-0.1,0.7l15.3,9.8 c0.7,0.5,1.2,0.4,1.6-0.3l6.8-10.9C217.6,88.4,217.8,87.2,217.8,85.9z\"/>\n                                <path d=\"M160.9,67.7c0.6,0.2,1.1,0.6,1.7,0.9l1.6,1c1.1,0.7,2.2,1.4,3.3,2.1l-0.5,0.7c-1.1-0.7-2.2-1.4-3.2-2.1 l-1.6-1.1c-0.5-0.4-1.1-0.7-1.6-1.2L160.9,67.7z\"/>\n                            </g>\n                            <line className=\"st18-dark-grey\" x1=\"175.7\" y1=\"74\" x2=\"179.7\" y2=\"71.5\"/>\n                            <g className=\"st16-grey\" >\n                                <path d=\"M209.9,108.5c-0.3-0.1-0.5-0.2-0.8-0.3c-0.3-0.1-0.5-0.1-0.7,0.1c-0.1,0.1-0.1,0.3-0.1,0.6c0,0.3,0,0.6,0,0.8 l-0.1,3.4l-0.2,6.7l-0.2-6.7l-0.1-3.4c0-0.3,0-0.6,0-0.8c0-0.2,0-0.7,0.4-0.9c0.4-0.2,0.7-0.1,1,0.1 C209.5,108.1,209.7,108.3,209.9,108.5z\"/>\n                                <path d=\"M137,70.8l-13.8,6.6c-0.5,0.3-0.9,0.6-1.1,1c-0.2,0.4-0.2,0.9-0.2,1.5l0.2,3.8l0.3,7.6l0,0.1l0,0 c-0.1,0.7,0.2,1.5,0.5,2.2c0.3,0.7,0.8,1.4,1.4,1.7l0,0l0,0l77.2,50.7l0,0c0.4,0.3,0.9,0.5,1.4,0.6c0.5,0.1,0.9,0.1,1.3,0 c0.9-0.2,1.9-0.9,2.9-1.4l6-3.3l12-6.7l24-13.3l24-13.3l5.9-3.3c0.2-0.1,0.2-0.2,0.2-0.2c0-0.1,0.1-0.2,0.1-0.4l0-1.7l0-3.4l0-6.9 l0-3.4c0-0.9-0.3-1.5-1.1-2.1l0.1,0c-2-1.2-4.1-2.2-6.2-3.3l-3.1-1.7l-1.5-0.9l-0.8-0.4c-0.3-0.1-0.5-0.3-0.6-0.8l0.3-0.5 c0.5-0.2,0.7-0.1,1,0l0.8,0.4l1.6,0.8l3.1,1.6c2.1,1.1,4.2,2.2,6.3,3.2l0.1,0c0.6,0.3,1.2,0.8,1.6,1.4c0.4,0.6,0.7,1.4,0.7,2.1 c0,1.3,0,2.3,0,3.5l0,6.9l0,3.4l0,1.8c0,0.4-0.1,0.8-0.3,1.3c-0.2,0.5-0.6,0.8-0.9,1c-0.3,0.2-0.6,0.3-0.9,0.5l-0.8,0.4l-1.5,0.8 l-3,1.6L250,123.4l-24.1,13.1l-12.1,6.6l-6,3.3c-0.5,0.3-1,0.5-1.5,0.8c-0.5,0.3-1.1,0.6-1.7,0.8c-0.6,0.2-1.4,0.2-2,0 c-0.7-0.2-1.2-0.5-1.8-0.8l0,0l-77.2-50.7l0.1,0c-0.5-0.3-0.9-0.7-1.2-1.1c-0.3-0.4-0.6-0.8-0.8-1.2c-0.4-0.9-0.7-1.8-0.6-2.9 l0,0.1l-0.4-7.6l-0.2-3.8c0-0.7,0-1.5,0.5-2.3c0.5-0.7,1.2-1.1,1.8-1.4l14.1-6L137,70.8z\"/>\n                            </g>\n\n                        \t<path className=\"st13-blue\" d=\"M118.4,101l9.1-6.7c0.8-0.7,1.7-0.8,2.6-0.2l12.5,4.4c0.6,0.2,1,0.6,1,1.3l0.6,25.1l-9.9,8.2 c-0.6,0.3-1.2,0.4-1.8,0.1l-13.5-4.4c-0.6-0.1-0.9-0.6-0.9-1.4l-0.7-24.7C117.5,101.9,117.8,101.4,118.4,101z\"/>\n                            <path className=\"st15-blue-dark\" d=\"M131.6,107.1c2.1,0.4,6-3,11.2-7.5c0.3-0.3,0.1-0.9,0.1-0.9s0.5,0.4,0.6,0.4l0.7,24.9c0.1,0.8-0.1,1.4-0.7,1.7 l-10.3,8l-2.1-0.8c1.1-0.2,1.7-0.8,1.9-1.8l-0.5-22C132.5,108.1,132.3,107.4,131.6,107.1z\"/>\n                            <path className=\"st14-blue-desat\" d=\"M119.4,129c-0.7-0.2-1.2-0.6-1.4-1.2l-0.6-25.4c0.1-0.6,0.4-1.1,1-1.4l9.6-7c0.6-0.4,1.2-0.3,2,0l3.8,1.5 l-4-0.8c0,0-0.8,0-1.6,0.7l-8,6c-0.2,0.2-0.2,0.4,0.1,0.6c0,0,4.2,1.7,5.4,2.1s4.3,2.3,4.3,2.3s-3.6-0.3-4.8-0.6 c-1.2-0.3-6.1-0.5-6.1-0.5c-0.3,0-0.4,0.1-0.4,0.5L119.4,129z\"/>\n\t                        <path className=\"st16-grey\" d=\"M132.6,109c0.3,1.8,0.2,3.7,0.4,5.5c0.1,1.8,0.1,3.7,0.2,5.5l0.1,5.5l0,2.7c0,0.9,0.1,1.8-0.1,2.7 c-0.2-0.9-0.2-1.8-0.2-2.7l-0.1-2.7l-0.2-5.5c0-1.8-0.1-3.7-0.1-5.5C132.5,112.7,132.4,110.9,132.6,109z\"/>\n                            <path className=\"st16-grey\" d=\"M118.2,101.1l9.7-7.1c0.5-0.4,1-0.5,1.7-0.2l13.3,4.6c0.4,0.2,0.8,0.5,0.8,1l0.6,25c0.1,0.4-0.1,0.8-0.4,1 l-9.5,7.7c-0.5,0.5-1,0.6-1.7,0.3l-13.8-4.5c-0.5-0.1-0.7-0.4-0.8-1l-0.7-25.1C117.3,102.1,117.5,101.5,118.2,101.1z\"/>\n\n                            <g className=\"st16-grey\" >\n                                <path d=\"M118.9,102.7c1.4,0,2.7,0.5,4,0.9l3.9,1.3l3.8,1.3l0.5,0.2c0.1,0,0.3,0.1,0.4,0.1c0.3,0.1,0.6,0.1,0.9,0.1 c0.6,0,1.3-0.2,1.7-0.5l0,0l0,0l4.4-3.3c1.5-1.1,2.9-2.3,4.5-3.2c-1.3,1.3-2.7,2.4-4.2,3.6l-4.3,3.5l0,0c-0.6,0.6-1.4,0.7-2.1,0.8 c-0.4,0-0.7,0-1.1,0c-0.2,0-0.4-0.1-0.5-0.1l-0.5-0.2l-3.9-1.3l-3.8-1.3C121.4,104,120.1,103.6,118.9,102.7z\"/>\n                                <path d=\"M166.7,110.3c0.9,0.3,1.6,0.8,2.4,1.3l2.3,1.5l4.6,2.9l9.2,5.8l9.1,5.9l4.6,2.9c0.7,0.5,1.6,1,2.2,1.4 c0.7,0.4,1.4,0.3,2.1-0.1l19.1-10.4l9.6-5.2l4.8-2.6l2.4-1.3c0.8-0.4,1.6-0.9,2.5-1.2c-0.7,0.6-1.5,1-2.3,1.4l-2.4,1.3l-4.7,2.7 l-9.4,5.3l-19,10.6c-0.4,0.3-0.9,0.4-1.5,0.5c-0.5,0-1.1-0.1-1.5-0.4c-0.8-0.5-1.5-1-2.3-1.5l-4.5-3l-9.1-5.9l-9-6l-4.5-3l-2.3-1.5 C168.1,111.4,167.3,111,166.7,110.3z\"/>\n                                <path d=\"M127.5,76.4c-0.1,0.2-0.3,0.2-0.5,0.3l-0.5,0.3c-0.4,0.2-0.7,0.4-1.1,0.6c-0.7,0.4-1.3,0.9-1.9,1.4l0,0 l0.1-0.2c0.1,0.8,0.8,1.5,1.4,2.1c0.7,0.6,1.5,1,2.3,1.6l4.7,3.3l9.5,6.6L151,99l4.7,3.3l2.4,1.7l1.2,0.8c0.4,0.3,0.8,0.6,1.1,0.9 c-0.5-0.1-0.9-0.4-1.3-0.7l-1.2-0.8l-2.4-1.6l-4.8-3.2l-9.6-6.4l-9.6-6.5l-4.8-3.2c-0.4-0.3-0.8-0.5-1.2-0.8 c-0.4-0.3-0.8-0.6-1.1-1c-0.3-0.4-0.7-0.8-0.9-1.2c-0.3-0.5-0.5-1-0.4-1.6l0-0.2l0.1-0.1l0,0c0.7-0.4,1.4-0.9,2.1-1.2 c0.4-0.2,0.7-0.3,1.1-0.5l0.6-0.2C127.1,76.5,127.3,76.4,127.5,76.4z\"/>\n                            </g>\n\n                        \t<path className=\"st4-light-green\" d=\"M156.8,136.2l0.3-11.1c0-0.7,0.1-1.4,0.6-1.4l14.8-4.4l11.3,10.5l0,13c0.2,0.7-0.1,1.2-0.7,1.6l-13.3,5.2 c-0.9,0.4-1.6,0.2-2.4-0.6l-9.7-10.6C157.1,137.8,156.8,137.1,156.8,136.2z\"/>\n                            <path className=\"st6-light-yellow\" d=\"M157,125.3l-0.6,11.8l8,8.4l-5.9-8.5c-0.2-0.2-0.3-0.4-0.3-0.9l0.2-8.4c0-0.3,0.1-0.5,0.4-0.4l2.5,2.2l4.3,3.4\tc-0.6-0.5-2.4-3.3-3.8-5.2c-0.5-0.8-1.4-1.9-2-2.5c-0.5-0.5,0.2-0.8,0.2-0.8l11.2-3.4l4,1.2l-3.2-2.9l-13.7,3.9 C157.1,123.8,156.9,123.8,157,125.3z\"/>\n                            <path className=\"st5-med-green\" d=\"M169.6,135.3l11.9-3.8c1.1-0.4,1.7-0.3,1.8,0.5l-0.1,11.6l-14.7,6.7l0-13.3 C168.6,136.3,168.9,135.6,169.6,135.3z\"/>\n\n                            <g className=\"st16-grey\" >\n                                <path d=\"M169.6,135.3c-0.3,0.2-0.6,0.3-1,0.3c-0.4,0-0.7-0.1-1-0.3c-0.5-0.5-1-0.9-1.5-1.4c-1-0.9-1.9-1.9-2.8-2.8 l-2.8-2.9c-0.9-1-1.9-1.9-2.6-3c1.2,0.7,2,1.8,2.9,2.7c0.9,1,1.8,1.9,2.8,2.9c0.9,1,1.9,1.9,2.8,2.9l1.3,1.5 c0.2,0.2,0.5,0.4,0.8,0.4C168.9,135.5,169.3,135.4,169.6,135.3z\"/>\n                                <path d=\"M183,131.4c-0.5-0.2-1-0.1-1.5,0.1c-0.5,0.2-1,0.4-1.5,0.6c-1,0.3-2,0.7-3,1l-3,1c-1,0.3-2,0.7-3.1,0.8 c0.9-0.6,2-0.9,3-1.2l3-1c1-0.3,2-0.7,3-1c0.5-0.2,1-0.3,1.5-0.4C182,131.1,182.6,131,183,131.4z\"/>\n                                <path d=\"M157.4,125l0,7.1l0,3.6c0,0.6,0,1.2,0.1,1.6c0.1,0.3,0.6,0.8,1,1.3l9.5,10.9l-0.1-0.1 c0.2,0.1,0.3,0.2,0.5,0.2c0.2,0,0.3,0,0.6-0.2l2-0.8l3.9-1.7c2.6-1.1,5.2-2.3,7.8-3.4l0.1,0c0.1-0.1,0,0,0-0.1c0,0,0-0.1,0-0.2 l0-0.4l0-1.9l0.1-3.7l0.1-3.7l0-1.9l0-0.5c0-0.1,0-0.3,0-0.4c0-0.2-0.1-0.5-0.1-0.6c0-0.1-0.1-0.1-0.1-0.2l-0.3-0.3l-0.7-0.7 l-1.3-1.3c-0.9-0.9-1.8-1.7-2.7-2.6l-5.4-5.1l0,0l-0.1-0.1c-0.2-0.2-0.2-0.2-0.4-0.2c-0.2,0-0.5,0.1-0.9,0.2l-2.2,0.6l-4.3,1.3 l-4.3,1.2l-2.2,0.6c-0.4,0.1-0.6,0.2-0.6,0.2c-0.1,0-0.2,0.4-0.2,0.8L157.4,125z M156.4,125l0-0.2c0-0.4-0.1-0.8,0.2-1.4 c0.2-0.3,0.5-0.5,0.7-0.6c0.2-0.1,0.4-0.2,0.6-0.2l2.1-0.6l4.3-1.3l4.3-1.3l2.2-0.6l0.5-0.2c0.2-0.1,0.4-0.1,0.7-0.1 c0.3,0,0.6,0,0.9,0.2c0.3,0.2,0.5,0.4,0.6,0.6l-0.1-0.1l5.4,5.1c0.9,0.8,1.8,1.7,2.7,2.5l1.4,1.2l0.7,0.6c0.1,0.1,0.2,0.2,0.4,0.3 c0.2,0.2,0.3,0.4,0.4,0.6c0.4,0.8,0.3,1.6,0.3,2.2l0,1.8l0,3.7l0,3.7l0,1.8c0,0.2,0,0.3,0,0.5c0,0.2,0,0.4-0.1,0.7 c-0.1,0.2-0.2,0.5-0.4,0.8c-0.2,0.2-0.5,0.4-0.7,0.5l0.1,0c-2.6,1.1-5.2,2.2-7.8,3.3l-3.9,1.7l-2,0.8c-0.3,0.1-0.9,0.4-1.4,0.3 c-0.5,0-1-0.3-1.4-0.6l0,0l0,0l-9.3-11.2l-0.6-0.7c-0.2-0.2-0.5-0.5-0.6-0.9c-0.3-0.7-0.3-1.4-0.3-2l0.1-3.6L156.4,125z\"/>\n                                <path d=\"M169.1,135.7c-0.3,0.5-0.5,1.1-0.6,1.7l0,0c0.1,2,0.1,3.9,0.1,5.9l0,3c0,1,0,2-0.2,3c-0.2-1-0.2-2-0.2-3l0-3 c0-2,0-3.9,0.1-5.9l0,0l0,0c0.1-0.3,0.1-0.6,0.3-0.9C168.7,136.1,168.8,135.9,169.1,135.7z\"/>\n                            </g>\n\n\t                        <linearGradient id=\"SVGID_1_\" gradientUnits=\"userSpaceOnUse\" x1=\"136.6402\" y1=\"127.9253\" x2=\"158.0315\" y2=\"130.7804\">\n\t                            <stop  offset=\"0\" style={{stopColor:\"#000000\", stopOpacity:0.6}}/>\n                                <stop  offset=\"0.9741\" style={{stopColor:\"#000000\", stopOpacity:0}}/>\n                            </linearGradient>\n                            <path className=\"st19\" d=\"M133.2,133.8l22.9,2.8l0.2-11.7l-0.1-0.6l-11.8-1.7l0,1.8c0.1,0.5-0.1,0.9-0.5,1.2l-9.5,7.7 C134.1,133.7,133.7,133.9,133.2,133.8z\"/>\n                            <linearGradient id=\"SVGID_2_\" gradientUnits=\"userSpaceOnUse\" x1=\"173.6965\" y1=\"143.4539\" x2=\"202.7607\" y2=\"147.3331\">\n\t                            <stop  offset=\"0\" style={{stopColor:\"#000000\", stopOpacity:0.6}}/>\n                                <stop  offset=\"0.9741\" style={{stopColor:\"#000000\", stopOpacity:0}}/>\n                            </linearGradient>\n                            <path className=\"st20\" d=\"M169.1,151.1l28.7,3.5l3.4-7.2l-16.5-10.8l0,2.5l-0.1,4.1c0.1,0.5-0.3,1.6-1.3,1.9L169.1,151.1z\"/>\n                            <linearGradient id=\"SVGID_3_\" gradientUnits=\"userSpaceOnUse\" x1=\"251.858\" y1=\"122.6118\" x2=\"259.7804\" y2=\"137.2377\">\n\t                            <stop  offset=\"2.973706e-02\" style={{stopColor:\"#000000\", stopOpacity:0.6}}/>\n                                <stop  offset=\"0.9741\" style={{stopColor:\"#000000\", stopOpacity:0}}/>\n                            </linearGradient>\n                            <path className=\"st21\" d=\"M307.9,109.7l-26.9-3.5c-0.2,0.3-0.4,0.5-0.7,0.7l-37.8,20.6l-35.1,19.1c-0.8,0.5-1.6,0.9-2.3,1.2l-2.5,0.2 l1.1,0.3l25.8,3.1c2.5,0.5,4.6-0.2,6.8-1.5L307.9,109.7z\"/>\n                        </svg>\n                );\n\n            case \"illustration-home\":\n                return(\n                    <div style={{backgroundImage: `url(${homeIllustration})`}} className=\"image-box\" />\n                );\n\n            case \"illustration-media\":\n                return(\n                    <div style={{backgroundImage: `url(${mediaIllustration})`}} className=\"image-box\" />\n                );\n\n            case \"illustration-attribute-mapping\":\n                return(\n                    <div style={{backgroundImage: `url(${AttributeMappingIllustration})`}} className=\"image-box\" />\n                );\n\n            case \"illustration-attributes\":\n                return(\n                    <div style={{backgroundImage: `url(${AttributesIllustration})`}} className=\"image-box\" />\n                );\n\n            case \"illustration-attribute-groups\":\n                return(\n                    <div style={{backgroundImage : `url(${AttributeGroupsIllustration})`}} className=\"image-box\"></div>\n                )\n\n            case \"illustration-catalog\":\n                return(\n                    <div style={{backgroundImage : `url(${CatalogIllustration})`}} className=\"image-box\"></div>\n                );\n\n            case \"illustration-upload\":\n                return(\n                    <div style={{backgroundImage : `url(${uploadIllustration})`}} className=\"image-box\"></div>\n                );\n\n        }\n    }\n\n    render() {\n        return (\n            <>\n                {this.getIllustration()}\n            </>\n        );\n    }\n}","import * as React from \"react\";\nimport {iWizardStep} from \"../../../view-components/wizard/wizard\";\nimport {ReactElement} from \"react\";\nimport {toolTipContent} from \"../../tool-tip-content/content-tool-tips\";\nimport {CatmanIcon} from \"../../../svg/icons/icons\";\nimport AppButton from \"../../../view-components/button/app-button\";\nimport {DividerLine} from \"../../../view-components/divider-line/divider-line\";\nimport {TextInput} from \"../../../view-components/text-input/text-input\";\nimport {Illustration} from \"../../../svg/illustrations/illustrations\";\n\n\ninterface iPROPS{\n    addAction : Function\n}\n\ninterface iSTATE{\n    wizardPanel : \"upload-1\" | \"upload-2\" | \"upload-3\";\n}\n\nexport class UploadWizard extends React.Component<iPROPS, iSTATE>{\n\n    constructor(props:iPROPS) {\n        super(props);\n        this.state={\n            wizardPanel : \"upload-1\"\n        }\n    }\n\n    element(){\n        switch (this.state.wizardPanel) {\n            case \"upload-1\":\n                return(\n                        <div>\n                            <AppButton\n                                buttonType={\"drag-area-large\"}\n                                buttonLabel=\"Drag Files Here\"\n                                tooltipType=\"custom\"\n                                classes={\"upload-files\"}\n                                buttonHelp={(\n                                    <>\n                                        <p>Upload Images, Excel Sheets, PDFs, and we will try to add them to existing products or\n                                            create new products based.</p>\n                                    </>\n                                )}\n                                tooltip={toolTipContent.dragUploadFiles()}\n                                toolTipTimeOutInMS={10000}\n                                OnClick={()=>this.props.addAction}\n                                iconLeft={\n                                    <Illustration\n                                        illustrationName={\"illustration-upload\"}\n                                        specialClasses={\"\"}\n                                        heightWithUnits={\"100%\"}\n                                        widthWithUnits={\"100%\"}\n                                        />\n                                    }\n                                iconRight={\n                                    <CatmanIcon\n                                        iconName=\"icon-add-invert\"\n                                        classes=\" \"\n                                        height=\"100%\"\n                                        width=\"5rem\"\n                                    />\n                                }\n                            />\n                            <DividerLine\n                                dividerType={\"labeled\"}\n                                labelText={\"OR\"}\n                                classes=\"upload-wizard-divider\"\n                            />\n                            <h3>Add Products Manually</h3>\n                            <div className={\"add-blank-stubs-area\"}>\n                                <p>Add</p>\n                                <TextInput\n                                    label={\"\"}\n                                    currentValue={\"1\"}\n                                    onChangeAction={()=>{}}\n                                />\n                                <p>new blank product stubs</p>\n                                <AppButton\n                                    buttonType={\"secondary-action\"}\n                                    buttonLabel=\"Go\"\n                                    OnClick={()=>{}}\n                                    tooltipType=\"custom\"\n                                    tooltip={toolTipContent.addBlankStubs()}\n                                    toolTipTimeOutInMS={10000}\n                                    tooltipXOffset={0}\n                                    tooltipYOffset={20}\n                                    iconLeft={\n                                        <CatmanIcon\n                                            iconName=\"icon-add-invert\"\n                                            classes=\"reverse\"\n                                            height=\"100%\"\n                                            width=\"100%\"\n                                        />\n                                    }\n                                />\n\n                            </div>\n                        </div>\n                );\n            case \"upload-2\":\n                return(<></>)\n        }\n    }\n\n    render(){\n        return(this.element())\n    }\n}\n\n// export let uploadWizard : iWizardStep[] = [\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard  wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     }\n// ];","import * as React from \"react\";\nimport goBackWizard from \"../../../images/SVG/illustration-wizard-go-back.svg\"\nimport tutBulkEdit from \"../../../images/SVG/illustration-bulk-edit.svg\"\nimport tutEditWithDrawer from \"../../../images/SVG/illustration-edit-with-drawer.svg\"\nimport tutFooter from \"../../../images/SVG/illustration-footer-menu.svg\"\nimport {RefObject} from \"react\";\nimport {StandardTextInput} from \"../../../view-components/text-input/standard-text-input\";\n\ninterface iPROPS{\n\n}\n\ntype productGroupNavDT = \"closed\" | \"start\" | \"staging-area\" | \"upload-3\";\n\ninterface iSTATE{\n    wizardPanel : productGroupNavDT\n}\n\nexport class TutorialWizard extends React.Component<iPROPS, iSTATE>{\n\n    constructor(props:iPROPS) {\n        super(props);\n        this.state={\n            wizardPanel : \"start\"\n        }\n    }\n\n    groupNameValue : string = \"\";\n\n    groupNameRef:RefObject<StandardTextInput> = React.createRef<StandardTextInput>();\n\n\n\n    wizardNavigation(panelName : productGroupNavDT){\n        this.setState({wizardPanel : panelName})\n    }\n\n    element(){\n        switch (this.state.wizardPanel) {\n            case \"closed\":\n                return(<></>);\n            case \"start\":\n                return(\n                    <div className=\"wizard-content\">\n\n                        <div className={\"interaction-area\"}>\n                            <div className=\"tutorial-group\">\n                                <div className=\"tutorial-chunk\">\n                                    <img className=\"tooltip-illustration\" src={tutEditWithDrawer}/>\n                                    <p>Select a cell in the grid, edit it with corresponding controls in the drawer that pops up</p>\n\n                                </div>\n\n                                <div className=\"tutorial-chunk\">\n                                    <img className=\"tooltip-illustration\" src={tutBulkEdit}/>\n                                    <p>Click and Drag to multi-select and Bulk Edit</p>\n                                </div>\n                                <div className=\"tutorial-chunk\">\n                                    <img className=\"tooltip-illustration\" src={tutFooter}/>\n                                    <p>Use checkboxes to select rows and get an action menu to apply to those selected rows.</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                );\n\n        }\n    }\n\n    render(){\n        return(this.element())\n    }\n}\n\n","import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport StickyThing from \"../../../view-components/sticky-panel/sticky-panel\";\nimport AppButton from \"../../../view-components/button/app-button\";\nimport {ToolTip} from \"../../../view-components/heru-tool-tip/tool-tip\";\nimport {CatmanIcon} from \"../../../svg/icons/icons\";\nimport {ContentToolTips, toolTipContent} from \"../../tool-tip-content/content-tool-tips\";\nimport {ToolTipContent} from \"../../../view-components/heru-tool-tip/tool-tip-content\";\nimport {ModalView} from \"../../../view-components/modal/modal\";\nimport {UploadWizard} from \"../../wizards/upload-wizard/upload-wizard\";\nimport {TutorialWizard} from \"../../wizards/tutorial-wizard/tutorial-wizard\";\n\ninterface iPROPS{\n    sectionTitle? : string;\n    navigationElement? : ReactElement;\n    ribbonElement? : ReactElement;\n    addItemAction : Function;\n    mainButtonLabel : string;\n}\n\ninterface iSTATE{\n    menuIsOpen : boolean;\n    currentModal : \"none\" | \"add-products\" | \"add-product-variant\";\n    modalOpen : boolean;\n    tutorialModal : boolean\n}\n\nexport class MainHeaderArea extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n        this.state = {\n            menuIsOpen : false,\n            modalOpen : false,\n            currentModal : \"none\",\n            tutorialModal : true\n        }\n    }\n\n    navMenu(){\n        if(this.state.menuIsOpen === true){\n            return (\n                <>\n                    <StickyThing\n                        enterFromThisSide=\"left\"\n                        lastResortClasses={\"catman-main-nav\"}\n                        animateIn={true}\n                        heightIncludeUnits=\"90vh\"\n                        widthIncludeUnits={\"auto\"}\n                        stickyOpen={true}\n                        bgColor={\"\"}\n                        doAnimation={true}>\n                        {this.props.navigationElement}\n                    </StickyThing>\n                    <AppButton\n                        tooltipType=\"none\"\n                        buttonType=\"from-left\"\n                    />\n                    <div onClick={()=>this.handleMenu()} className=\"overlay\"/>\n                </>\n            );\n        }else{\n            return (<></>);\n        }\n    }\n\n    handleMenu(){\n        let inverse : boolean = !this.state.menuIsOpen;\n        this.setState({menuIsOpen : inverse})\n    }\n\n    ribbonMenu(){\n\n    }\n\n    navArea(){\n            return (\n                <div className=\"main-header-actions\">\n                    <AppButton\n                        buttonType={\"from-left\"}\n                        buttonLabel=\"catalog manager\"\n                        OnClick={()=>this.handleMenu()}\n                        tooltipType=\"custom\"\n                        tooltip={toolTipContent.mainNav()}\n                        toolTipTimeOutInMS={10000}\n                        iconRight={\n                            <CatmanIcon\n                                iconName=\"down-arrow\"\n                                classes=\"ui-icon \"\n                                height=\"100%\"\n                                width=\"100%\"\n                            />\n                        }\n                    />\n                    <AppButton\n                        buttonType={\"main-action\"}\n                        classes={\"main-add-btn\"}\n                        buttonLabel={this.props.mainButtonLabel}\n                        OnClick={()=>this.manageModals(\"add-products\")}\n                        tooltipType=\"custom\"\n                        tooltip={toolTipContent.addProducts()}\n                        toolTipTimeOutInMS={10000}\n                        iconLeft={\n                            <CatmanIcon\n                                iconName=\"icon-add-invert\"\n                                classes=\" main-add\"\n                                height=\"100%\"\n                                width=\"100%\"\n                            />\n                        }\n                    />\n                </div>\n            )\n    }\n\n    closeModal(){\n        this.setState({currentModal : \"none\"});\n        console.log(\"close modal try\", this.state.currentModal)\n    }\n\n    closeTutorialModal(){\n        this.setState({tutorialModal : false});\n        toolTipContent.gridDragTutorial++;\n    }\n\n    tutorialModal(){\n        if(this.state.tutorialModal === true && toolTipContent.gridDragTutorial < 1){\n            return(\n                <ModalView\n                    modalTitle={\"You Can Edit This Grid!\"}\n                    classes=\"upload-modal-wizard\"\n                    closeModalFunc={()=>this.closeTutorialModal()}\n                >\n                    <TutorialWizard  />\n                </ModalView>\n            );\n        }\n    }\n\n    getModals(){\n            switch(this.state.currentModal){\n                case \"add-products\":\n                    console.log(\"MODAL\");\n                    return(\n                        <ModalView\n                            modalTitle={\"Automatically Add/Update Products\"}\n                            classes=\"upload-modal-wizard\"\n                            closeModalFunc={()=>this.closeModal()}\n                        >\n                            <UploadWizard addAction={()=>this.props.addItemAction}/>\n                        </ModalView> );\n                case \"add-product-variant\":\n                    return(<><p>Product Variant</p></>);\n                case \"none\":\n                    return(<></>);\n                default:\n                    return(<h1>MODAL zzz</h1>)\n            }\n\n        return (<></>)\n\n    }\n\n    manageModals(modalName : string){\n        console.log(modalName);\n        switch(modalName){\n            case \"add-products\":\n                console.log(\"clicked\", modalName);\n                this.setState({currentModal : \"add-products\"});\n                break;\n            case \"none\":\n                this.setState({currentModal : \"none\"});\n                break;\n        }\n        console.log(this.state)\n    }\n\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        let constructedHeader = (\n          <>\n              <header className=\"header-area\">\n                  <div className=\"header-item\">\n                      {this.navArea()}\n                  </div>\n                  <div className=\"main-ribbon header-item\">\n                      {this.props.ribbonElement}\n                  </div>\n                  <div className=\"header-item\">\n                      {this.navMenu()}\n                  </div>\n                  {this.getModals()}\n                  {this.tutorialModal()}\n              </header>\n          </>\n        );\n\n        return constructedHeader;\n    }\n}\n\nexport default MainHeaderArea;","import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport {iNavItem} from \"../../_catman-data-types\";\nimport AppButton from \"../button/app-button\";\n\nexport type menuFormatDataType = \"fly-out\" | \"slide-in\" | \"drop-down\";\nexport type menuHelpStyleDataType = \"panel\" | \"searchable\" | \"no-help\";\n\n\n\ninterface iPROPS {\n    navElements : iNavItem[];\n    menuHelpStyle : any;\n}\n\ninterface iSTATE{\n    infoPanelIndex : number;\n    isHover : boolean\n}\n\nexport class Navigation extends React.Component<iPROPS, iSTATE> {\n    constructor(props:iPROPS) {\n        super(props);\n        this.state ={\n            infoPanelIndex : 1,\n            isHover : false\n        }\n    }\n\n    hoverActions :any[] = [];\n    sortNavItems() : iNavItem[][]{\n        let groupedItems : iNavItem[][] = [];\n        groupedItems.push([this.props.navElements[0]]);\n\n        //loop over each element and compare its group name to  , if not we'll create a new group\n        i: for(let i=1; i < this.props.navElements.length; i++){\n            //we'll start at one since we already pushed the first at zero\n           h: for(let h=0; h < groupedItems.length; h++ ){\n                if( groupedItems[h][0].presentationGroup === this.props.navElements[i].presentationGroup ){\n                    groupedItems[h].push(this.props.navElements[i]);\n                }else{\n                    //if we are at the end of both arrays then let's create a new group\n                    if(h === groupedItems.length-1){\n                        groupedItems.push([this.props.navElements[i]]);\n                        continue i;\n                    }\n                }\n            }\n        }\n\n        return groupedItems;\n    }\n\n    generateMenuBasedOnType(){\n        switch (this.props.menuHelpStyle) {\n            case \"panel\":\n\n                break;\n            case \"searchable\":\n\n                break;\n            case \"no-help\":\n\n                break;\n\n            default:\n\n        }\n    }\n\n    hoverInfoPanel(index:number){\n        this.setState({\n            infoPanelIndex : index,\n            isHover : true\n        });\n\n    }\n\n    hoverOutPanel(){\n        this.setState({\n            isHover : false\n        });\n    }\n\n    createElements(){\n        let itemGroups = this.sortNavItems();\n        let constructedMenuItems : ReactElement[] = [];\n        //let's keep track of all of the\n        let counter : number =0;\n\n        //if the hovered index matches the current on-render index we'll store the info panel here\n        let infoPanel : any;\n\n        for(let i=0; i < itemGroups.length; i++ ){\n            //these are the actual buttons\n            let subMenuItems : ReactElement[] = [];\n\n            //create an array of buttons that are part of that menu group\n            for(let j=0; j < itemGroups[i].length; j++){\n                counter++;\n                let count = counter;\n                if(count === this.state.infoPanelIndex && this.state.isHover === true){\n                    if(itemGroups[i][j].infoPanel !== undefined){\n                        infoPanel = itemGroups[i][j].infoPanel;\n                    }\n                }\n\n                let newButton : ReactElement = (\n                    <AppButton\n                        tooltipType=\"none\"\n                        tooltip={<p>menu tool tip</p> }\n                        hoverActions={[()=>this.hoverInfoPanel(count)]} key={`${i+j}${i}${j}`}\n                        hoverLeaveActions={[()=>this.hoverOutPanel()]}\n                        navPath={itemGroups[i][j].navPath}\n                        buttonType=\"nav-link\"\n                        buttonLabel={itemGroups[i][j].label}\n                        iconLeft={itemGroups[i][j].iconLeft}\n                        iconRight={itemGroups[i][j].iconRight}\n                        classes=\"main-nav-item\"\n                    /> );\n                subMenuItems.push(newButton);\n            }\n\n            //insert the created buttons into a group container\n            let subMenuGroup : ReactElement = (<div key={`${i}`} className=\"menu-sub-group\">{subMenuItems}</div>);\n            constructedMenuItems.push(subMenuGroup);\n        }\n\n        let infoPanelFinal : ReactElement = (<></>);\n\n        if(this.state.isHover === true){\n            infoPanelFinal = (<div className=\"info-panel\">{infoPanel}</div>);\n        }\n\n        //assemble those groups and put them in another main menu container\n        let finalMenu : ReactElement = (\n            <div key={0} className=\"menu-container\">\n               <div className=\"menu-main\">{constructedMenuItems}</div>\n                {infoPanelFinal}\n            </div>);\n        return finalMenu;\n    }\n    render(){\n        return (<>\n            {this.createElements()}\n        </>);\n    }\n}","import * as React from \"react\";\nimport {ReactElement} from \"react\";\n\ninterface iPROPS{\n    header : string;\n    copy : string;\n    image : ReactElement;\n}\n\ninterface iSTATE {\n\n}\n\nexport class InfoPanel extends React.Component<iPROPS, iSTATE>{\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (\n            <div className=\"info-panel-container\">\n                <h2 className=\"info-panel-item\">{this.props.header}</h2>\n                <p className=\"info-panel-item\">\n                    {this.props.copy}\n                </p>\n                <div className=\"info-panel-item info-panel-illustration\">\n                    {this.props.image}\n                </div>\n            </div>\n        );\n    }\n}","import * as React from \"react\";\n//import {graphicSize, iNavItem} from \"../../view-components/_common/component-data-types\";\nimport {iNavItem, graphicSize} from \"../../_catman-data-types\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport {InfoPanel} from \"../../view-components/info-panel/info-panel\";\nimport {Illustration} from \"../../svg/illustrations/illustrations\";\nimport {iToggleMenuItem} from \"../../view-components/toggle-menu/toggle-component\";\nimport AppButton from \"../../view-components/button/app-button\";\nimport {toolTipContent} from \"../tool-tip-content/content-tool-tips\";\nimport {navSettings} from \"../_common/nav-settings\";\n\nconst iconSize : graphicSize = {\n    height : \"1.5rem\",\n    width : \"1.5rem\"\n};\n\nexport let ribbonConfig : iToggleMenuItem[] = [\n\n];\n\n// Main Navigation\nexport let mainNavConfig : iNavItem[] = [\n    {\n        label: \"Home\",\n        navPath: \"/\",\n        buttonType: \"menu-link\",\n        iconLeft:\n            (<CatmanIcon\n                iconName=\"home\"\n                width={iconSize.width}\n                height={iconSize.height}\n            />),\n        presentationGroup : \"common\",\n        infoPanel : (\n            <InfoPanel\n                header=\"Home - Get Started\"\n                copy=\"Your landing page with info, help and quick-start actions to help you get the most out of the Catalog Manager\"\n                image={\n                    <Illustration\n                        illustrationName=\"illustration-home\"\n                        specialClasses=\"\"\n                        heightWithUnits=\"100%\"\n                        widthWithUnits=\"100%\"\n                    />\n                }\n            />\n        )\n    },\n    {\n        label: \"Media Library\",\n        navPath: \"/media-library\",\n        buttonType: \"menu-link\",\n        iconLeft:\n            (<CatmanIcon\n                iconName=\"media-nav-icon\"\n                width={iconSize.width}\n                height={iconSize.height}\n            />),\n        presentationGroup : \"common\",\n        infoPanel : (\n            <InfoPanel\n                header=\"Your Media Library\"\n                copy=\"Manage, review and link with products. Take control of your media and better describe your products.\"\n                image={\n                    <Illustration\n                        illustrationName=\"illustration-media\"\n                        specialClasses=\"\"\n                        heightWithUnits=\"100%\"\n                        widthWithUnits=\"100%\"\n                    />\n                }\n            />\n        )\n    },\n    {\n        label : \"Your Catalog\",\n        navPath : \"/catalog/spreadsheet\",\n        buttonType : \"nav-link\",\n        iconLeft : (\n            <CatmanIcon\n                iconName=\"catalog\"\n                width={iconSize.width}\n                height={iconSize.height}\n            />),\n        presentationGroup : \"catalog\",\n        infoPanel : (<InfoPanel\n            header=\"Your Catalog\"\n            copy=\"Manage your products in YOUR catalog. Import files to extract product data. Edit, update existing products. Publish your products to Wayfair or export product data for use anywhere\"\n            image={\n                <Illustration\n                    illustrationName=\"illustration-catalog\"\n                    specialClasses=\"\"\n                    heightWithUnits=\"100%\"\n                    widthWithUnits=\"100%\"\n                />\n            }\n\n        />)\n    },\n    {\n        label : \"Attributes\",\n        navPath : \"/manage-attributes\",\n        buttonType : \"nav-link\",\n        iconLeft : (\n            <CatmanIcon\n                iconName=\"attributes\"\n                width={iconSize.width}\n                height={iconSize.height}\n            />),\n        presentationGroup : \"catalog-settings\",\n        infoPanel : (\n            <InfoPanel\n                header=\"Manage Attributes\"\n                copy=\"Attributes are the 'Column Headers' that you can define and use to describe your products. \"\n                image={\n                    <Illustration\n                        illustrationName=\"illustration-attributes\"\n                        specialClasses=\"\"\n                        heightWithUnits=\"100%\"\n                        widthWithUnits=\"100%\"\n                    />\n                }\n            />\n\n        )\n    },\n    {\n        label : \"Attribute Groups\",\n        navPath : \"/manage-attribute-groups\",\n        buttonType : \"nav-link\",\n        iconLeft : (\n            <CatmanIcon\n                iconName=\"attribute-groups\"\n                width={iconSize.width}\n                height={iconSize.height}\n            />),\n        presentationGroup : \"catalog-settings\",\n        infoPanel : (\n            <InfoPanel\n                header=\"Attribute Groups\"\n                copy=\"Make editing attributes easier and clearer for you and your colleagues. Group attributes together in a way that makes sense for like height, width and length might be grouped under 'Dimensions'.\"\n                image={\n                    <Illustration\n                        illustrationName=\"illustration-attribute-groups\"\n                        specialClasses=\"\"\n                        heightWithUnits=\"100%\"\n                        widthWithUnits=\"100%\"\n                    />\n                }\n            />\n        )\n    },\n    {\n        label : \"Attribute Mappings\",\n        navPath : \"/manage-attribute-mappings\",\n        buttonType : \"nav-link\",\n        iconLeft : (\n            <CatmanIcon\n                iconName=\"attribute-mappings\"\n                width={iconSize.width}\n                height={iconSize.height}\n            />),\n        presentationGroup : \"catalog-settings\",\n        infoPanel : (\n            <InfoPanel\n                header=\"Attribute Mapping\"\n                copy=\"Attributes are the 'Column Headers' that you can define and use to describe your products. Here you can create mappings so the values you enter for each attribute can be automatically transformed for each channel you deal with.\"\n                image={\n                    <Illustration\n                        illustrationName=\"illustration-attribute-mapping\"\n                        specialClasses=\"\"\n                        heightWithUnits=\"100%\"\n                        widthWithUnits=\"100%\"\n                    />\n                }\n            />\n        )\n    },\n    {\n        label : \"Classes\",\n        navPath : \"/manage-classes\",\n        buttonType : \"nav-link\",\n        iconLeft : (\n            <CatmanIcon\n                iconName=\"classes\"\n                width={iconSize.width}\n                height={iconSize.height}\n            />),\n        presentationGroup : \"catalog-settings\",\n        infoPanel : (\n            <InfoPanel\n                header=\"Manage Classes\"\n                copy=\"Classes are sets of descriptive attributes that will be assigned to your products as you create them. When you specify a class on a product, the attributes you set up here will be automatically assigned to that product\"\n                image={\n                    <Illustration\n                        illustrationName=\"illustration-manage-classes\"\n                        specialClasses=\"\"\n                        heightWithUnits=\"100%\"\n                        widthWithUnits=\"100%\"\n                    />\n                }\n\n            />\n                )\n    },\n\n];\n\nexport let catalogRibbonConfiguration : iNavItem[] = [\n    {\n        label : \"Attribute Mappings\",\n        navPath : \"/manage-attribute-mappings\",\n        buttonType : \"nav-link\",\n        presentationGroup : \"catalog-settings\",\n        infoPanel : (<h2>Attributes Mappings</h2>)\n    }\n]","import React from \"react\";\nimport {MainHeaderArea} from \"../_common/main-header-area/main-header-area\";\nimport {Navigation} from \"../../view-components/list-menu/intra-app-navigation\";\nimport {mainNavConfig} from \"../_catman-configuration/common-app-configuration\";\nimport {toolTipContent} from \"../tool-tip-content/content-tool-tips\";\n\ninterface iPROPS {\n    message: string;\n}\n\ninterface iSTATE{\n\n}\n\nexport class LandingPageView extends React.Component<iPROPS, iSTATE>{\n    // constructor(props:iPROPS) {\n    //     super(props);\n    //\n    // }\n    render(){\n        return(\n            <>\n                <MainHeaderArea\n                    mainButtonLabel=\"Add Products\"\n                    addItemAction={()=>{}}\n                    sectionTitle=\"Landing Page\"\n                    navigationElement={<Navigation menuHelpStyle=\"panel\" navElements={mainNavConfig} />}\n                />\n                <h2>Get Started</h2>\n                <h3>{toolTipContent.mainNav}</h3>\n            </>\n        );\n    }\n}","import * as React from \"react\";\nimport {ChangeEvent} from \"react\";\n\n\ninterface iPROPS {\n    label : string;\n    currentValue : string;\n    onChangeAction : Function\n    row? : number;\n    cell? : number;\n    columnName? : string;\n    controlType?: \"with-label\" | \"no-label\" | undefined\n}\n\ninterface iSTATE{\n    value : string;\n}\n\nexport class StandardTextInput extends React.Component<iPROPS, iSTATE>{\n    constructor(props : iPROPS) {\n        super(props);\n        this.state = {\n            value : this.props.currentValue\n        }\n    }\n    value = this.props.currentValue;\n\n    getInputVal(e: React.ChangeEvent){\n        //console.log(this.props.row, this.props.cell, this.state.value, this.props.columnName);\n        let keyVal = e.target as HTMLInputElement;\n        this.value = keyVal.value\n        this.setState({value : keyVal.value});\n        this.reportCurrentValue();\n    }\n\n    reportCurrentValue=()=>this.props.onChangeAction(this.props.row, this.props.cell, this.value, this.props.columnName);\n\n    getElements(){\n        switch (this.props.controlType) {\n            case \"with-label\":\n                return(\n                    <div className=\"pl-TextInput-wrapper\" >\n                        <div className=\"pl-FloatLabel-text\">{this.props.label}</div>\n                        <input onChange={(evt:React.ChangeEvent)=>this.getInputVal(evt as React.ChangeEvent)}  type=\"text\" value={this.state.value || ''} placeholder=\"\" className=\"InputBox pl-TextInput-input has-text pl-FloatLabel-input\" />\n                    </div>\n                );\n            case \"no-label\":\n                return(\n                    <div className=\"pl-TextInput-wrapper\" >\n                        <input onChange={(evt:React.ChangeEvent)=>this.getInputVal(evt as React.ChangeEvent)}  type=\"text\" value={this.state.value || ''} placeholder=\"\" className=\"InputBox pl-TextInput-input has-text pl-FloatLabel-input\" />\n                    </div>);\n            case undefined:\n                return(\n                    <div className=\"pl-TextInput-wrapper\" >\n                        <div className=\"pl-FloatLabel-text\">{this.props.label}</div>\n                        <input onChange={(evt:React.ChangeEvent)=>this.getInputVal(evt as React.ChangeEvent)}  type=\"text\" value={this.state.value || ''} placeholder=\"\" className=\"InputBox pl-TextInput-input has-text pl-FloatLabel-input\" />\n                    </div>);\n        }\n    }\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (\n            <>{this.getElements()}</>\n        );\n    }\n}","import * as React from \"react\";\n\n//Configuration data:\n\nimport {iDataGridItem} from \"../../_catman-data-types\";\nimport {toolTipContent} from \"../tool-tip-content/content-tool-tips\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport AppButton from \"../../view-components/button/app-button\";\n\n//icons and illustrations\nimport {StandardTextInput} from \"../../view-components/text-input/standard-text-input\";\nimport {mediaObject} from \"../../_sample-data/media-library\";\n\ninterface iPROPS  {\n    mediaData : mediaObject;\n    closeSingleMediaView : Function;\n}\n\ninterface iSTATE{\n    editMode : boolean;\n}\n\nexport class SingleMediaDetailsView  extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n        this.state = {\n            editMode : false\n        };\n\n    }\n    manageEditMode(){\n        this.setState({editMode : !this.state.editMode})\n    }\n\n    getDataArea(){\n        const assignedProducts =(<div className=\"temp-associations\">\n            <div className=\"cell-read-only\" style={{gridColumn : 1, gridRow : 1, zIndex : 100 }}>sof-121-111</div>\n            <div className=\"cell-read-only\" style={{gridColumn : 2, gridRow : 1, zIndex : 100 }}>Rosina classic convertible sofa - deluxe</div>\n            <div className=\"cell details\" style={{gridColumn : 3, gridRow : 1, zIndex : 100 }}>\n                <AppButton\n                    buttonType=\"transparent-bg\"\n                    tooltipType=\"custom\"\n                    tooltip={toolTipContent.singleProduct()}\n                    iconCenter={(\n                        <CatmanIcon\n                            iconName=\"go-arrow\"\n                            width=\"1rem\"\n                            height=\"100%\"\n                        />\n                    )}\n                />\n            </div>\n\n            <div className=\"cell-read-only\" style={{gridColumn : 1, gridRow : 2, zIndex : 100 }}>sof-121-112</div>\n            <div className=\"cell-read-only\" style={{gridColumn : 2, gridRow : 2, zIndex : 100 }}>Rosina classic convertible sofa - basic</div>\n            <div className=\"cell details\" style={{gridColumn : 3, gridRow : 2, zIndex : 100 }}>\n                <AppButton\n                    buttonType=\"transparent-bg\"\n                    tooltipType=\"custom\"\n                    tooltip={toolTipContent.singleProduct()}\n                    iconCenter={(\n                        <CatmanIcon\n                            iconName=\"go-arrow\"\n                            width=\"1rem\"\n                            height=\"100%\"\n                        />\n                    )}\n                />\n\n\n            </div>\n\n            <div className=\"cell-read-only\" style={{gridColumn : 1, gridRow : 3, zIndex : 100 }}>sof-121-113</div>\n            <div className=\"cell-read-only\" style={{gridColumn : 2, gridRow : 3, zIndex : 100 }}>Rosina classic convertible sofa - davinci</div>\n            <div className=\"cell details\" style={{gridColumn : 3, gridRow : 3, zIndex : 100 }}>\n                <AppButton\n                    classes=\"go-button\"\n                    buttonType=\"transparent-bg\"\n                    tooltipType=\"custom\"\n                    tooltip={toolTipContent.singleProduct()}\n                    iconCenter={(\n                        <CatmanIcon\n                            iconName=\"go-arrow\"\n                            width=\"1rem\"\n                            height=\"100%\"\n                        />\n                    )}\n                />\n\n\n            </div>\n        </div>)\n\n        if(this.state.editMode === false){\n            return(\n                <div className=\"content-area\">\n\n                    <h3>Manage Media Details</h3>\n                    <div className=\"preview-image-large\"\n                         style={{backgroundImage:`url(${this.props.mediaData.mediaPath})` }}\n                     />\n\n                    <div className=\"product-card\">\n                        <footer>\n                            <AppButton\n                                classes={\"hi-contrast primary\"}\n                                buttonType={\"secondary-action\"}\n                                buttonLabel=\"edit\"\n                                OnClick={()=>this.manageEditMode()}\n                                tooltipType=\"custom\"\n                                tooltip={toolTipContent.singleProductSwitchToEditMode()}\n                                toolTipTimeOutInMS={10000}\n                                tooltipXOffset={0}\n                                tooltipYOffset={20}\n                                iconLeft={\n                                    <CatmanIcon\n                                        iconName={`icon-edit`}\n                                        classes=\" \"\n                                        height=\"100%\"\n                                        width=\"100%\"\n                                    />\n                                }\n                            />\n                        </footer>\n                        <h3>General Info</h3>\n                        <div className=\"data-section-readonly\">\n                            <div className={\"tiny-label\"}>Description</div>\n                            <div className={\"data-value\"}>hasellus laoreet neque vitae elit consequat hendrerit. Nulla facilisi. Suspendisse congue metus neque, vitae varius eros ultrices vel.  </div>\n                        </div>\n                        <div className=\"data-container\">\n\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Shot Type</div>\n                                <div className={\"data-value\"}>{this.props.mediaData.shotType}</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Date Uploaded</div>\n                                <div className={\"data-value\"}>June 4 2020</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Last Updated</div>\n                                <div className={\"data-value\"}>June 5 2020</div>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div className=\"product-card\">\n                        <footer>\n                            <AppButton\n                                classes={\"hi-contrast primary\"}\n                                buttonType={\"secondary-action\"}\n                                buttonLabel=\"Read-Only\"\n                                OnClick={()=>{}}\n                                tooltipType=\"custom\"\n                                tooltip={toolTipContent.singleProductSwitchToEditMode()}\n                                toolTipTimeOutInMS={10000}\n                                tooltipXOffset={0}\n                                tooltipYOffset={20}\n                                iconLeft={\n                                    <CatmanIcon\n                                        iconName={``}\n                                        classes=\" \"\n                                        height=\"100%\"\n                                        width=\"100%\"\n                                    />\n                                }\n                            />\n                        </footer>\n                        <h3>Media Properties</h3>\n                        <div className=\"data-container\">\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Resolution</div>\n                                <div className={\"data-value\"}>1200x1200</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>File Format</div>\n                                <div className={\"data-value\"}>JPEG</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>File Size</div>\n                                <div className={\"data-value\"}>1.23meg</div>\n                            </div>\n                        </div>\n                    </div>\n\n\n                        <div className=\"product-card\">\n                            <h3>Assigned to These Catalog Items</h3>\n                            {assignedProducts}\n                        </div>\n                </div>\n            );\n        }else{\n            return(\n                <div className=\"content-area\">\n                    <h3>Manage Media Details</h3>\n                    <div className=\"preview-image-large\"\n                         style={{backgroundImage:`url(${this.props.mediaData.mediaPath})` }}\n                    />\n                    <div className=\"product-card\">\n                        <h3>General Info</h3>\n                        <div className=\"data-section-readonly\">\n                            <StandardTextInput\n                                label={\"Description\"}\n                                currentValue={\"hasellus laoreet neque vitae elit consequat hendrerit. Nulla facilisi. Suspendisse congue metus neque, vitae varius eros ultrices vel.  \"}\n                                onChangeAction={()=>{}}\n                            />\n                        </div>\n                        <div className=\"data-container\">\n                            <StandardTextInput\n                                label={\"Shot Type\"}\n                                currentValue={this.props.mediaData.shotType}\n                                onChangeAction={()=>{}}\n                            />\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Date Uploaded</div>\n                                <div className={\"data-value\"}>June 4 2020</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Last Updated</div>\n                                <div className={\"data-value\"}>June 5 2020</div>\n                            </div>\n                        </div>\n                        <footer>\n                            <AppButton\n                                classes={\"hi-contrast primary\"}\n                                buttonType={\"secondary-action\"}\n                                buttonLabel=\"edit\"\n                                OnClick={()=>this.manageEditMode()}\n                                tooltipType=\"custom\"\n                                tooltip={toolTipContent.singleProductSwitchToEditMode()}\n                                toolTipTimeOutInMS={10000}\n                                tooltipXOffset={0}\n                                tooltipYOffset={20}\n                                iconLeft={\n                                    <CatmanIcon\n                                        iconName={`icon-edit`}\n                                        classes=\" \"\n                                        height=\"100%\"\n                                        width=\"100%\"\n                                    />\n                                }\n                            />\n                        </footer>\n                    </div>\n\n                    <div className=\"product-card\">\n                        <h3>Media Properties</h3>\n                        <div className=\"data-container\">\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Resolution</div>\n                                <div className={\"data-value\"}>1200x1200</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>File Format</div>\n                                <div className={\"data-value\"}>JPEG</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>File Size</div>\n                                <div className={\"data-value\"}>1.23meg</div>\n                            </div>\n                        </div>\n                        <footer>\n                            <AppButton\n                                classes={\"hi-contrast primary\"}\n                                buttonType={\"secondary-action\"}\n                                buttonLabel=\"edit\"\n                                OnClick={()=>this.manageEditMode()}\n                                tooltipType=\"custom\"\n                                tooltip={toolTipContent.singleProductSwitchToEditMode()}\n                                toolTipTimeOutInMS={10000}\n                                tooltipXOffset={0}\n                                tooltipYOffset={20}\n                                iconLeft={\n                                    <CatmanIcon\n                                        iconName={`icon-edit`}\n                                        classes=\" \"\n                                        height=\"100%\"\n                                        width=\"100%\"\n                                    />\n                                }\n                            />\n                        </footer>\n                    </div>\n\n                    <div className=\"product-card\">\n                        <h3>Assigned to These Catalog Items</h3>\n                        {assignedProducts}\n                    </div>\n\n                </div>\n            );\n        }\n\n    }\n\n    getProductPage(){\n        let editLabel = (valueCheck : boolean)=>{\n            if(valueCheck === false){\n                return \"Edit Mode\"\n            }else{\n                return \"Read Mode\"\n            }\n        };\n\n        let editIcon = (valueCheck : boolean)=>{\n            if(valueCheck == false){\n                return \"icon-edit\"\n            }else{\n                return \"icon-read-mode\"\n            }\n        };\n\n        let modeToolTip = (valueCheck : boolean) =>{\n            if(valueCheck == false){\n                return toolTipContent.singleProductSwitchToEditMode();\n            }else{\n                return toolTipContent.singleProductSwitchToReadMode();\n            }\n        };\n\n        const backBtn = (\n            <AppButton\n                buttonType=\"transparent-bg\"\n                classes=\"single-product-back\"\n                buttonLabel={\"Back\"}\n                navPath={`/media-library`}\n                tooltipType=\"custom\"\n                tooltip={toolTipContent.goBackToSpreadsheet()}\n                OnClick={()=>this.props.closeSingleMediaView()}\n                iconLeft={(\n                    <CatmanIcon\n                        iconName=\"go-back-arrow\"\n                        width=\"1rem\"\n                        height=\"100%\"\n                    />\n                )}\n            />\n        );\n\n        let introArea = (\n            <div className=\"single-product-view\">\n                <div className=\"single-prod-menu\">\n                    <div>\n                        {backBtn}\n                    </div>\n                    <AppButton\n                        classes={\"hi-contrast primary\"}\n                        buttonType={\"secondary-action\"}\n                        buttonLabel={editLabel(this.state.editMode)}\n                        OnClick={()=>this.manageEditMode()}\n                        tooltipType=\"custom\"\n                        tooltip={modeToolTip(this.state.editMode)}\n                        toolTipTimeOutInMS={10000}\n                        tooltipXOffset={0}\n                        tooltipYOffset={20}\n                        iconLeft={\n                            <CatmanIcon\n                                iconName={`${editIcon(this.state.editMode)}`}\n                                classes=\" \"\n                                height=\"100%\"\n                                width=\"100%\"\n                            />\n                        }\n                    />\n                    <div className=\"menu-area\">\n                        <ul>\n                            <li>General Info</li>\n                            <li>Media Properties</li>\n                            <li>Product Associations</li>\n                            <li>Related Media</li>\n                        </ul>\n                        <ul>\n                            <li>Media Quality</li>\n                            <li>Media Services</li>\n                            <li>Media Usage</li>\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"spacer\"></div>\n                {this.getDataArea()}\n            </div>\n        );\n\n        return(<>{introArea}</>)\n    }\n\n\n    render(){\n        return (\n            <>\n                {this.getProductPage()}\n            </>\n        )\n    }\n}\n","import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport {ToolTip} from \"../heru-tool-tip/tool-tip\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport {toolTipContent} from \"../../views/tool-tip-content/content-tool-tips\";\nimport AppButton from \"../button/app-button\";\n\nexport type selectedStateType = \"selected\" | \"active\" | \"inactive\" | \"\";\ninterface iPROPS{\n    tileType : string;\n    tileLabel : string;\n    tileCustomElement? : ReactElement;\n    mouseDownActions? : Function[];\n    mouseUpActions? : Function[];\n    hoverActions? : Function[];\n    mouseOutActions? : Function[];\n    selectedClass : selectedStateType;\n    classes? : string;\n    action? : Function;\n    toolTip? :  ReactElement | string;\n    toolTipTimeOut? : number;\n}\n\ninterface iSTATE{\n\n}\n\nexport class Tile extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n    }\n\n\n    mouseDownAction(){\n        if(this.props.mouseDownActions !== null && this.props.mouseDownActions !== undefined){\n            for(let i=0; i < this.props.mouseDownActions.length; i++){\n                this.props.mouseDownActions[i]();\n            }\n        }\n    }\n\n    mouseUpAction(){\n        if(this.props.mouseUpActions !== null && this.props.mouseUpActions !== undefined){\n            for(let i=0; i < this.props.mouseUpActions.length; i++){\n                this.props.mouseUpActions[i]();\n            }\n        }\n    }\n\n    doHoverActions(){\n\n            if(this.props.hoverActions != null){\n                for(let i=0; i < this.props.hoverActions.length; i++){\n                    this.props.hoverActions[i]();\n                }\n            }\n    }\n\n    doMouseOutActions(){\n        if(this.props.mouseOutActions != null){\n            for(let i=0; i < this.props.mouseOutActions.length; i++){\n                this.props.mouseOutActions[i]();\n            }\n        }\n    }\n\n    doClickActions(){\n        if(this.props.action !== undefined){\n            this.props.action();\n        }\n    }\n\n    getTile(){\n        switch (this.props.tileType) {\n            case \"column-header\":\n                return (\n                    <div\n                        draggable={\"true\"}\n                        onMouseUp={()=>this.mouseUpAction()}\n                        onMouseDown={()=>this.mouseDownAction()}\n                        className={`${this.props.selectedClass} column-header`}\n                    >\n                        <AppButton\n                            buttonType=\"button-custom\"\n                            classes={`column-header-btn`}\n                            buttonLabel={`${this.props.tileLabel} `}\n                            OnClick={()=>this.doClickActions()}\n                            tooltipType=\"custom\"\n                            tooltip={this.props.toolTip}\n                            toolTipTimeOutInMS={this.props.toolTipTimeOut}\n                            iconRight={(\n                                <CatmanIcon\n                                    iconName=\"carat-down\"\n                                    width=\"0.5rem\"\n                                    height=\"100%\"\n                                    classes={\"column-carat\"}\n                                />\n                            )}\n                        />\n                        <div className={`affordance ${this.props.selectedClass}`}></div>\n\n                    </div>\n                );\n\n            case \"header-active\":\n                return (\n                    <div\n                        draggable={\"true\"}\n                        onMouseUp={()=>this.mouseUpAction()}\n                        onMouseDown={()=>this.mouseDownAction()}\n                        className={`${this.props.selectedClass} column-header active-col`}\n                    >\n                        <AppButton\n                            buttonType=\"button-custom\"\n                            classes={`column-header-btn`}\n                            buttonLabel={`${this.props.tileLabel} `}\n                            OnClick={()=>this.doClickActions()}\n                            tooltipType=\"custom\"\n                            tooltip={this.props.toolTip}\n                            toolTipTimeOutInMS={this.props.toolTipTimeOut}\n                            iconRight={(\n                                <CatmanIcon\n                                    iconName=\"carat-down\"\n                                    width=\"0.5rem\"\n                                    height=\"100%\"\n                                    classes={\"column-carat\"}\n                                />\n                            )}\n                        />\n                        <div className={`affordance active-indicator ${this.props.selectedClass}`}></div>\n\n                    </div>\n                );\n\n\n            case \"text-input\":\n                return (\n                    <div\n                        draggable={\"false\"}\n                        onClick={()=>this.doClickActions()}\n                        onMouseUp={()=>this.mouseUpAction()}\n                        onMouseDown={()=>this.mouseDownAction()}\n                        onMouseOver={()=>this.doHoverActions()}\n                        onMouseOut={()=>this.doMouseOutActions()}\n                        className={`${this.props.selectedClass} cell-editable`}\n                    >\n                        <p className={`${this.props.selectedClass}`}>{`${this.props.tileLabel}`}&nbsp;</p>\n                        <div className={`affordance ${this.props.selectedClass}`}></div>\n\n                    </div>\n                );\n            case \"media\":\n                return(\n                    <div className={`media-cell `}>\n                        <AppButton\n                            buttonType=\"transparent-bg\"\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.imageThumbnailPreview(this.props.tileLabel)}\n                            classes={``}\n                        />\n                        <div className=\"thumb\" style={{backgroundImage : `url(${this.props.tileLabel})` }}>\n                            <p></p>\n                        </div>\n                        <div className={`affordance ${this.props.selectedClass}`}></div>\n                    </div>\n                );\n\n            case \"hidden\":\n                return(\n                    <div draggable={false} className=\"hidden-cell\">\n\n                    </div>\n                );\n\n            case \"read-only-cell\":\n                return (\n                    <div draggable={false}>\n                        <p>{this.props.tileLabel}</p>\n                    </div>\n                )\n        }\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (<>{this.getTile()}</>);\n    }\n}","import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport {iDataGridItem} from \"../../_catman-data-types\";\nimport AppButton from \"../button/app-button\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport {selectedStateType, Tile} from \"../tiles/tile-component\";\nimport {toolTipContent} from \"../../views/tool-tip-content/content-tool-tips\";\nimport camelcase from \"camelcase\";\nimport {iColumn} from \"../../_catman-data-types\";\nimport {DataManager} from \"../../data-components/data-manager/data-manager\";\nimport classesIllustration from \"../../images/SVG/illustration-classes.svg\";\nimport {ToolTipContent} from \"../heru-tool-tip/tool-tip-content\";\nimport ReactDOM from \"react-dom\";\nimport {win} from \"../../index\";\nimport {focusInputType} from \"../../views/catalog-views/catalog-details/catalog-details-view\";\n\n\n//data grid data should be an array of arrays\n//each product is an array of attributes\ninterface iPROPS {\n    data : iDataGridItem[][];\n    manageParentViews : Function;\n    selectionCallback? : Function;\n    columnsData : iColumn[];\n    classes? : string;\n    addAction : Function;\n    focusedItem? : focusInputType;\n    hasDetailsActionButton : boolean\n    notifySelections? : Function\n}\n\ninterface iSTATE {\n    selectionSet : selectionObject[];\n    checkedRows :number[];\n    workingDataSet : iDataGridItem[][];\n    hoveredRow : string;\n    mouseIsDown : boolean;\n    mouseX : number;\n    mouseY : number;\n    initialMouseX : number;\n    initialMouseY : number;\n}\n\nexport type selectionObject = {\n    row : number;\n    cell : number;\n    selected : boolean;\n    columnName : string;\n}\n\nexport class DataGrid extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n        this.state = {\n            workingDataSet : this.props.data,\n            selectionSet : [],\n            checkedRows : [],\n            hoveredRow : \"\",\n            mouseIsDown : false,\n            mouseX : 0,\n            mouseY : 0,\n            initialMouseX : 0,\n            initialMouseY : 0\n        };\n        this.startSelectionRow = 0;\n        this.startSelectionCell = 0;\n\n        this.cellRange = {\n            startCell : 0,\n            endCell : 0,\n            startRow : 0,\n            endRow : 0,\n        };\n\n        this.numCols = this.getNumColumns();\n        this.numRows = this.getNumRows();\n    }\n    selectionSet : selectionObject[] = [];\n    selectedCells : iDataGridItem[] = [];\n    numCols : number;\n    numRows: number;\n    startSelectionRow : number;\n    startSelectionCell : number;\n    dragInterval : number | null = null;\n    dragCounter : number = 0;\n\n    //used root for portals for overlays\n    root = ()=>{\n        let root : any | HTMLElement = document.getElementById(\"root\");\n        if(root != null){\n            return root;\n        }\n    };\n\n    cellRange : any;\n    _checkedRows : number[] = [];\n\n    shiftDown : boolean = false;\n    controlDown : boolean = false;\n\n    manageSelection(row:number, cell:number, columnName : string,  clearSelection : boolean){\n\n        if(clearSelection){\n            this.selectionSet = [];\n            this._checkedRows = [];\n        }\n\n        if(this.startSelectionRow > row){\n            this.cellRange.startRow = row;\n            this.cellRange.endRow = this.startSelectionRow\n        }else{\n            this.cellRange.startRow = this.startSelectionRow;\n            this.cellRange.endRow = row;\n        }\n\n        if(this.startSelectionCell > cell){\n            this.cellRange.startCell = cell;\n            this.cellRange.endCell = this.startSelectionCell;\n        }else {\n            this.cellRange.startCell = this.startSelectionCell;\n            this.cellRange.endCell = cell;\n        }\n\n        if(row === this.startSelectionRow && cell === this.startSelectionCell){\n            this.selectionSet.push(\n                {\n                    row: row,\n                    cell: cell,\n                    selected : true,\n                    columnName : this.props.columnsData[cell-2].columnName\n                    //columnName : appColumns.getColumns[cell-2].columnName\n                }\n            );\n        }\n\n        for( let i = this.cellRange.startRow; i < this.cellRange.endRow+1; i++){\n            for(let j= this.cellRange.startCell; j < this.cellRange.endCell+1; j++){\n                this.selectionSet.push(\n                    {\n                        row: i,\n                        cell: j,\n                        selected : true,\n                        columnName : this.props.columnsData[j-2].columnName\n                    }\n                );\n            }\n        }\n\n        // handle single cell as start and end\n\n        if(this.selectionSet.length === 2){\n            if( this.selectionSet[0].row === this.selectionSet[1].row && this.selectionSet[0].cell === this.selectionSet[1].cell  ){\n                this.selectionSet.splice(1,1);\n            }\n        }\n\n        this.setState({\n            selectionSet : this.selectionSet,\n            checkedRows : this._checkedRows\n        });\n\n\n        if(this.props.selectionCallback !== undefined && this.props.selectionCallback !== null){\n           type iSelectedItem = { row : number, cells : number[], productFields : iDataGridItem[] };\n            let selectedItems : iSelectedItem[] = [  ];\n            let lastRow : number = 0;\n\n            // work through the selection set to organize things\n\n           i: for(let i=0; i < this.selectionSet.length; i++){\n                if(i===0){\n                    //if it's the first one let's create a new entry\n                    lastRow = this.selectionSet[0].row;\n                    let newItem : iSelectedItem = { row : lastRow, cells:[], productFields : []};\n                    selectedItems.push(newItem);\n                }\n\n                //loop over the existing list of rows to create new ones\n                    if(this.selectionSet[i].row === lastRow){\n                        //one more loop over the list to grab all the cells that belong to the row\n                        if(selectedItems[selectedItems.length-1].cells.length === 0){\n                            for(let j=0; j < this.selectionSet.length; j++){\n                                if(this.selectionSet[j].row === lastRow){\n                                    //if the row matches the last row, then push in the selected cell\n                                    selectedItems[selectedItems.length-1].cells.push( this.selectionSet[j].cell );\n                                }\n                            }\n                        }\n                    }else{\n                        lastRow = this.selectionSet[i].row;\n                        let newItem : iSelectedItem = { row : lastRow, cells:[], productFields : []};\n                        selectedItems.push(newItem);\n                    }\n            }\n\n           for(let x=0; x < selectedItems.length; x++){\n                for(let y=0; y < this.state.workingDataSet[selectedItems[x].row-2].length; y++){\n                    selectedItems[x].productFields.push(this.state.workingDataSet[selectedItems[x].row-2][y] )\n                }\n\n           }\n\n\n            this.props.selectionCallback(selectedItems, this._checkedRows, \"standard-launch\", row, cell);\n         }\n    }\n\n    clearSelection(){\n        this.setState({selectionSet:[], checkedRows:[]});\n        this._checkedRows = [];\n        this.selectionSet = [];\n        if(this.props.notifySelections != undefined)\n        {\n            this.props.notifySelections();\n        }\n    }\n\n    checkSelected(row:number, cell:number):selectedStateType{\n        for(let i=0; i<this.state.selectionSet.length; i++){\n            if( this.state.selectionSet[i].row === row && this.state.selectionSet[i].cell === cell){\n                return \"selected\";\n            }\n        }\n        //if nothing is found, return false because it isn't selected\n        return \"\";\n    }\n\n    getNumColumns(){\n        //TODO swap this out to calculating total normalized columns\n\n        return this.props.columnsData.length;\n    }\n\n    getNumRows(){\n       if(this.state.workingDataSet.length > 0){\n           return this.state.workingDataSet.length;\n       }else{\n           return this.props.data.length;\n       }\n    }\n\n    getProductUniqueID(index : number){\n\n        for(let j=0; j < this.state.workingDataSet[index].length; j++){\n            if(this.state.workingDataSet[index][j].columnName === \"uniqueID\"){\n                return this.state.workingDataSet[index][j].value;\n            }\n        }\n    }\n\n    mouseDownAction(row : number, cell:number){\n        //start up the resize box\n        this.setState({mouseX : win.mousePos.x, mouseY : win.mousePos.y})\n\n        //set timer for dragging\n        this.dragInterval = window.setInterval(()=>{\n            // set timer for spacing out the times we poll for updating drag window\n             this.dragCounter++;\n            console.log(\"set interval\", this.dragInterval);\n        }, 200);\n\n        this.startSelectionCell = cell;\n        this.startSelectionRow = row;\n        this.setState({\n            mouseIsDown : true,\n            initialMouseX : win.mousePos.x,\n            initialMouseY : win.mousePos.y\n        });\n    }\n\n    mouseUpAction(row:number, cell:number, columnName : string){\n        this.setState({mouseIsDown : false});\n        this.manageSelection(row, cell, columnName, true);\n        this.manageKeyBoardEffect(\"dfdf\", \"up\");\n        //clear dragging timer\n        if(this.dragInterval != null)\n        {\n            window.clearInterval(this.dragInterval);\n            this.dragCounter = 0;\n        }\n        this.manageAppCues();\n    }\n\n    hoverRowAction(row:number){\n        //this.setState({hoveredRow : row.toString()});\n    }\n\n    mouseOutRowAction(){\n      //  this.setState({hoveredRow : \"\"});\n    }\n\n    manageCheckbox(row : number){\n\n        //find if this number is in the list\n        let found : boolean = false;\n\n\n\n        for(let i=0; i < this._checkedRows.length; i++){\n            if(this._checkedRows[i] === row){\n                //if it is in the list remove it which unchecks\n                this._checkedRows.splice(i, 1);\n                this.setState({checkedRows : this._checkedRows});\n                found = true;\n            }\n        }\n        if(found === false){\n            this._checkedRows.push(row);\n            this.setState({checkedRows : this._checkedRows});\n\n        }\n\n        //handle selecting the checked\n        //First reset the cell selection\n        this.selectionSet = [];\n\n        for(let i=0; i < this._checkedRows.length; i++){\n            for(let j=0; j < this.state.workingDataSet[this._checkedRows[i]].length; j++ ){\n                let selectedCell : selectionObject = {\n                    row : this._checkedRows[i]+2,\n                    cell : j+2,\n                    selected : true,\n                    columnName : this.props.columnsData[j].columnName\n                };\n                this.selectionSet.push(selectedCell);\n            }\n        }\n\n\n        this.setState({selectionSet : this.selectionSet});\n        if(this.props.selectionCallback !== undefined){\n            this.props.selectionCallback(this.state.selectionSet, this.state.checkedRows, \"checkbox-launched\");\n        }\n        //once people use the tool, we can hide the tool tip\n        toolTipContent.showSelectRow = false;\n    }\n\n    switchToEditModeFromCheckBoxMode(){\n        //handle switching from checkbox mode to cell selection mode\n        //First reset the cell selection\n\n        console.log(\"switch to edit mode\");\n\n\n        this._checkedRows = [];\n        this.setState({\n            checkedRows : this._checkedRows\n        });\n        console.log(\"switch to edit mode\", this.selectionSet);\n        console.log(\"switch to edit mode\", this.state.selectionSet);\n        if(this.props.selectionCallback !== undefined){\n            this.props.selectionCallback(this.state.selectionSet, this.state.checkedRows, \"checkbox-launched\");\n        }\n    }\n\n    iconForCheckBox = (row : number):string=>{\n        for(let i=0; i < this.state.checkedRows.length; i++){\n            if(row === this.state.checkedRows[i]){\n                return \"checkbox-checked\"\n            }\n        }\n        return \"checkbox-unchecked\"\n    };\n\n    updateSelectionState = ()=>{\n        this.setState({selectionSet : this.selectionSet});\n    };\n\n\n\n    getGridItems(){\n        let cells : ReactElement[] = [];\n        for(let i=0; i < this.state.workingDataSet.length; i++){\n            for(let j=0; j < this.state.workingDataSet[i].length; j++){\n                if(j === 0){\n                    cells.push(\n                        <div id={`row-${i+2}-start`} className={`cell checkbox-main `} style={{gridColumn : j+1, gridRow : i+2, zIndex : 100 + (this.numRows - i) }}>\n                            <AppButton\n                                OnClick={()=>this.manageCheckbox(i)}\n                                hoverActions={[()=>this.hoverRowAction(i+2)]}\n                                buttonType=\"transparent-bg\"\n                                tooltipType=\"custom\"\n                                tooltip={toolTipContent.selectRow()}\n                                classes={`${this.iconForCheckBox(i)}`}\n                                iconCenter={(\n                                    <CatmanIcon\n                                        iconName={`${this.iconForCheckBox(i)}`}\n                                        width=\"100%\"\n                                        height=\"100%\"\n                                    />\n                                )}\n                            />\n                            <CatmanIcon\n                                classes={\"shading-l-r\"}\n                                iconName=\"fader-left-to-right\"\n                                width=\"0.5rem\"\n                                height=\"100%\"\n                            />\n                        </div>\n                    )\n                }\n\n                let cell = (\n                    <div draggable={false} className={`cell row-${i+2}`} style={{gridColumn : j+2, gridRow : i+2 }}>\n                        <Tile\n                            tileType={this.props.columnsData[j].control}\n                            tileLabel={this.state.workingDataSet[i][j].value}\n                            action={() => this.clickCellsActions()}\n                            hoverActions={[()=>this.hoverRowAction(i+2)]}\n                            mouseOutActions={[()=>this.mouseOutRowAction()]}\n                            mouseDownActions={\n                                [() => this.mouseDownAction(i+2,j+2)]\n                            }\n                            mouseUpActions={\n                                [\n                                    this.props.manageParentViews,\n                                    () => this.mouseUpAction(i+2,j+2, this.props.columnsData[j].columnName)\n                                ]\n                            }\n                            selectedClass={this.checkSelected(i+2, j+2)}\n\n                        />\n\n                    </div>\n                );\n\n                if( this.props.columnsData[j].control !== \"hidden\"){\n                    cells.push(cell);\n                }\n\n                if(j === this.state.workingDataSet[i].length-1 && this.props.hasDetailsActionButton){\n                    cells.push(\n                        <div className=\"cell details\" style={{gridColumn : j+3, gridRow : i+2, zIndex : 100 + (this.numRows - i) }}>\n                            <AppButton\n                                buttonType=\"nav-link\"\n                                navPath={`/catalog/spreadsheet?product=${this.getProductUniqueID(i)}`}\n                                tooltipType=\"custom\"\n                                tooltip={toolTipContent.singleProduct()}\n                                iconCenter={(\n                                    <CatmanIcon\n                                        iconName=\"go-arrow\"\n                                        width=\"1rem\"\n                                        height=\"100%\"\n                                    />\n                                )}\n                            />\n                            <CatmanIcon\n                                classes={\"shading\"}\n                                iconName=\"fader-right-to-left\"\n                                width=\"0.5rem\"\n                                height=\"100%\"\n                            />\n\n                        </div>\n                    )\n                }\n            }\n        }\n\n        return cells;\n    }\n\n    columnHeadTooltip = (tooltiptype : \"custom\" | \"basic\", tooltip:ReactElement | string, header:string)=>{\n\n        switch (tooltiptype) {\n            case \"basic\":\n                return(<ToolTipContent\n                    header={header}\n                    copy={ tooltip }\n                    tooltipType=\"deluxe\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"info-icon-help\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />);\n            case \"custom\":\n                return tooltip;\n        }\n\n        return (<></>)\n    };\n\n    getColumnHeaders(){\n        let columnsHeads : ReactElement[] = [];\n\n        //Header checkbox for \"select all\"\n        for(let i=0; i < this.props.columnsData.length; i++ ){\n            if(i === 0){\n                columnsHeads.push(\n                    <div className=\"cell checkbox-main grid-header\" style={{gridColumn : i+1, gridRow : 1, zIndex : 120 + (this.numCols) }}>\n                        <AppButton\n                            OnClick={()=>this.manageCheckbox(i)}\n                            buttonType=\"transparent-bg\"\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.selectRow()}\n                            classes={` `}\n                            iconCenter={(\n                                <CatmanIcon\n                                    iconName={`${this.iconForCheckBox(i)}`}\n                                    width=\"0.5rem\"\n                                    height=\"100%\"\n                                />\n                            )}\n                        />\n                    </div>\n                )\n            }\n\n            //Handling the something-in-column selected visual indicator\n            const columnActiveCheck = ()=>{\n                if(this.props.focusedItem?.cell === (i+2) && this.props.focusedItem.editDrawerOpen === true){\n                    return {tileType:\"header-active\", cellClass:\"active\"};\n                }else{\n                    return {tileType:\"column-header\", cellClass:\"\"};\n                }\n            };\n\n\n            let columnHead = (\n                <div className={`cell grid-header ${columnActiveCheck().cellClass}`} style={{gridColumn : i+2, gridRow : 1, zIndex: this.numRows+100+i  }}>\n                    <Tile\n                        tileType={columnActiveCheck().tileType}\n                        tileLabel={this.props.columnsData[i].columnLabel}\n                        toolTip={ this.columnHeadTooltip(\n                            this.props.columnsData[i].tooltipType,\n                            this.props.columnsData[i].toolTip,\n                            this.props.columnsData[i].columnLabel\n                        )}\n                        toolTipTimeOut={30000}\n                        mouseDownActions={\n                            [ ]\n                        }\n                        mouseUpActions={\n                            [\n                                () => this.props.manageParentViews(true)\n                            ]\n                        }\n                        selectedClass={\"\"}\n                    />\n                </div>\n            );\n\n            if(this.props.columnsData[i].control != \"hidden\"){\n                columnsHeads.push(columnHead);\n            }\n\n            //final column head action\n            if(i === this.props.columnsData.length-1){\n                columnsHeads.push(\n                    <div className=\"cell details grid-header\"\n                         style={{gridColumn : this.props.columnsData.length+2, gridRow : 1, zIndex : (200 + this.numCols+2) }}\n                        >\n                        <AppButton\n                            buttonType=\"button-custom\"\n                            classes=\"add-column\"\n                            navPath={`/catalog/spreadsheet`}\n                            OnClick={()=>this.props.addAction(\"add-attribute\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.insertColumn()}\n                            iconCenter={(\n                                <CatmanIcon\n                                    iconName=\"icon-plus\"\n                                    width=\"0.5rem\"\n                                    height=\"100%\"\n                                />\n                            )}\n                        />\n                        <CatmanIcon\n                            classes={\"shading-l-r\"}\n                            iconName=\"fader-right-to-left\"\n                            width=\"0.5rem\"\n                            height=\"100%\"\n                        />\n                    </div>\n                )\n            }\n\n\n            //create the selected overlay\n            if(this.props.focusedItem?.cell === (i+2) && this.props.focusedItem.editDrawerOpen === true){\n                           let selectedIndicator = (\n                               <div className=\"cell selected-indicator\" style={{gridColumn : i+2, gridRowStart : this.cellRange.startRow, gridRowEnd:this.cellRange.endRow+1 }}>\n                                <div className=\"handle\"></div>\n                               </div>\n                           );\n                columnsHeads.push(selectedIndicator)\n            }else if(this.state.selectionSet.length == 0)\n            {\n                let selectedIndicator = (\n                    <div className=\"cell selected-indicator\" style={{gridColumn : 4, gridRowStart : 2, gridRowEnd: 2 }}>\n                        <div className=\"handle\"></div>\n                    </div>\n                );\n                columnsHeads.push(selectedIndicator)\n            }\n\n\n        }\n\n        return( columnsHeads );\n    }\n\n    //HOVER ROW STYLE\n    gridStyles(){\n        //This let's us have a hover row effect with css grid\n        //This way we don't have to put containers around each row just for visual cue\n        //     let style = `\n        //     .row-${this.state.hoveredRow} {\n        //         background-color: #f4f4f5;\n        //     }\n        //\n        //     .row-${this.state.hoveredRow} .cell-editable{\n        //         z-index:100;\n        //     }\n        //\n        //     .row-${this.state.hoveredRow} p{\n        //             color: #473F4A  ;\n        //     }\n        //     `;\n        //\n        //\n        //\n        // return <style dangerouslySetInnerHTML={{ __html: `${style}` }} />\n    }\n\n    clickCellsActions(){\n        this.setState({mouseIsDown : false})\n    }\n\n    //DRAG AREA - create bounding box while dragging\n    getDragArea(){\n        //Only run if mouse is down\n        if(this.dragInterval != undefined){\n            if(this.state.mouseIsDown === true  ){\n\n                let calcStyles =()=> {\n                    //calculate where the drag area will draw\n                    let coordinates = {\n                        top : this.state.initialMouseY,\n                        bottom : win.windowSize().height - this.state.mouseY,\n                        left : this.state.initialMouseX,\n                        right: win.windowSize().width - this.state.mouseX\n                    };\n\n                    if(this.state.initialMouseY <=  this.state.mouseY ){\n                        coordinates.top = this.state.initialMouseY;\n                        coordinates.bottom = win.windowSize().height - this.state.mouseY;\n                    }else if(this.state.initialMouseY >= this.state.mouseY){\n                        coordinates.top = win.mousePos.y;\n                        coordinates.bottom = win.windowSize().height - this.state.initialMouseY;\n                    }\n\n                    if( this.state.mouseX >=  this.state.initialMouseX ){\n                        coordinates.left = this.state.initialMouseX;\n                        coordinates.right = win.windowSize().width - this.state.mouseX;\n                    }else if( this.state.mouseY >= this.state.initialMouseY){\n                        coordinates.left = win.mousePos.x;\n                        coordinates.right = win.windowSize().width - this.state.initialMouseX;\n                    }\n\n                    if( this.state.mouseX <=  this.state.initialMouseX && this.state.initialMouseY >=  this.state.mouseY ){\n                        coordinates.left = this.state.mouseX;\n                        coordinates.right = win.windowSize().width - this.state.initialMouseX;\n                    }\n                    return coordinates;\n                };\n                let dragArea = (\n                    <div\n                        className=\"drag-area\"\n                        style={ calcStyles() }\n                    >\n                        <div className=\"drag-inner-container\">\n                            <div className=\"tool-tip\">\n                                {toolTipContent.clickDragGrid()}\n                            </div>\n                        </div>\n                    </div>\n                );\n                return ReactDOM.createPortal(dragArea, this.root());\n            }else{\n                if(this.dragInterval != null){\n                    clearInterval(this.dragInterval);\n                }\n            }\n        }\n    }\n\n    //Mouse move, this is used for defining the drag area rectangle but could be used for other stuff\n    mouseMoveActions(){\n        if(this.dragCounter % 2 === 0 && this.state.mouseIsDown === true){\n             this.setState({mouseX : win.mousePos.x, mouseY : win.mousePos.y})\n        }\n    }\n\n    selectionIndicator()\n    {\n        console.log(\"selection set\", this.state.selectionSet.length);\n\n            let selectedIndicator = (\n                <div className=\"cell selected-indicator\" style={{gridRowStart : 2, gridColumnStart : 2, gridRowEnd: 2, gridColumnEnd : \"auto\" }}>\n                    <div className=\"handle\"></div>\n                </div>\n            );\n\n            return selectedIndicator;\n\n    }\n\n    //APP CUES aka Super tooltips\n    manageAppCues(){\n        if(this.selectionSet.length > 1){\n            toolTipContent.gridDragTutorial++;\n        }\n    }\n\n    manageKeyBoardEffect(key : string, keyAction:\"up\" | \"down\"){\n        console.log(key, \" \", keyAction);\n        switch (key) {\n            case \"ArrowDown\":\n\n                break;\n            case \"ArrowUp\":\n\n                break;\n            case \"ArrowLeft\":\n\n                break;\n            case \"ArrowRight\":\n\n                break;\n            case \"Enter\":\n                console.log(\"Hit Enter\");\n                this.clearSelection();\n                break;\n            case \"Meta\":\n                    if(keyAction == \"up\"){\n                        this.controlDown = false;\n                    }else if(keyAction == \"down\"){\n                        this.controlDown = true;\n                    }\n                break;\n            default:\n\n        }\n    }\n\n    componentDidMount(): void {\n\n        window.addEventListener(\"keyup\", (evt: KeyboardEvent)=>{\n            this.manageKeyBoardEffect(evt.key, \"up\");\n        });\n\n        window.addEventListener(\"keydown\", (evt: KeyboardEvent)=>{\n            this.manageKeyBoardEffect(evt.key, \"down\");\n        });\n    }\n\n    componentWillUnmount(): void {\n        //Clear keyboard events for this component\n        window.removeEventListener(\"keyup\", (evt: KeyboardEvent)=>{\n            this.manageKeyBoardEffect(evt.key, \"up\");\n        });\n\n        window.removeEventListener(\"keydown\", (evt: KeyboardEvent)=>{\n            this.manageKeyBoardEffect(evt.key, \"down\");\n        });\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n\n        let columnHeaders : ReactElement[] = this.getColumnHeaders();\n\n        // let testTooltip : ReactElement = (\n        //     <div className=\"tool-tip\" style={{height : \"344px\"}}>\n        //         {toolTipContent.clickDragGrid()}\n        //     </div>\n        // );\n\n        let gridStyle = `1rem repeat(${this.getNumColumns()}, minmax(max-content, 1fr)) max-content`;\n\n        let constructedGrid : ReactElement = (\n            <>\n                <div className={`data-grid ${this.props.classes}`}>\n                    {this.gridStyles()}\n\n                    <div style={{ display:'grid', gridTemplateColumns:gridStyle}} className=\"viewport\" onMouseMove={()=>this.mouseMoveActions()}>\n                        {columnHeaders}\n                        {this.getGridItems()}\n                    </div>\n                </div>\n                {this.getDragArea()}\n\n            </>\n        );\n\n        return constructedGrid;\n    }\n}","import React, {ReactElement} from \"react\";\n\nimport {toolTipContent} from \"../../views/tool-tip-content/content-tool-tips\";\nimport {dataManagerMain} from \"../../index\";\nimport StickyThing from \"../../view-components/sticky-panel/sticky-panel\";\nimport {SingleMediaDetailsView} from \"../../views/media-library/media-details-view\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport AppButton from \"../../view-components/button/app-button\";\nimport {DataGrid, selectionObject} from \"../../view-components/data-grid/data-grid\";\nimport {iDataGridItem} from \"../../_catman-data-types\";\nimport {DataManager, iUpdateSet} from \"../../data-components/data-manager/data-manager\";\nimport {iColumn} from \"../../_catman-data-types\";\nimport {focusInputType} from \"../../views/catalog-views/catalog-details/catalog-details-view\";\nimport {TextInput} from \"../../view-components/text-input/text-input\";\nimport {dataSetType} from \"../../data-components/data-manager/data-manager\";\n\ntype viewState = \"cards-view\" | \"grid-view\" | \"mosaic-view\";\n\n\ninterface iPROPS {\n    message?: string;\n    gridData : iDataGridItem[][];\n    columnsData : iColumn[];\n    dataManager : DataManager;\n    targetDataSet : dataSetType;\n    selectionActions? : Function[];\n    gridHasDetailsButton : boolean;\n}\n\ninterface iSTATE{\n    detailsOpen : boolean;\n    editDrawerOpen : boolean;\n    workingData : iDataGridItem[][];\n    columnsData : iColumn[];\n    focusedInput : focusInputType;\n    footerOpen : boolean;\n    footerMode : \"default\" | \"has-group\" | \"no-group\" | \"multiple-selected\" ;\n    editDrawerMaximized : boolean;\n}\n\nexport class DataGridWithEditDrawer extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n        this.columnDefs = this.props.columnsData;\n        this.state={\n            detailsOpen : false,\n            editDrawerOpen : false,\n            //TODO need to adjust data manager\n            columnsData : this.props.columnsData,\n            workingData : this.props.gridData,\n            focusedInput : { row:0, cell:0, editDrawerOpen : false},\n            footerOpen : false,\n            footerMode : \"default\",\n            editDrawerMaximized : false\n        }\n    }\n\n    selectedMediaIndex : number = 0;\n    dataGridRef = React.createRef<DataGrid>();\n    editDrawerRef = React.createRef<StickyThing>();\n    drawerFirstOpen : boolean = false;\n    //COLUMN DEFINITIONS:\n    columnDefs : iColumn[];\n\n    //just for the fist launch of checkbox editing\n    initialized : boolean = false;\n\n    selectionSet : selectionObject[] = [];\n    drawerInputsLength = 0;\n\n    manageMediaDetailsPage=(mediaIndex : number)=>{\n        this.selectedMediaIndex = mediaIndex;\n        this.setState({detailsOpen : !this.state.detailsOpen})\n    };\n\n    getMediaDetailsView(){\n        if(this.state.detailsOpen === true){\n            return(\n                <StickyThing\n                    enterFromThisSide=\"right\"\n                    lastResortClasses={\"product-view\"}\n                    animateIn={true}\n                    heightIncludeUnits=\"100vh\"\n                    widthIncludeUnits={\"100vw\"}\n                    stickyOpen={true}\n                    bgColor={\"#CECECE\"}\n                    doAnimation={true}\n                >\n                    <SingleMediaDetailsView\n                        mediaData={dataManagerMain.getMediaObjectData()[this.selectedMediaIndex]}\n                        closeSingleMediaView={()=>this.manageMediaDetailsPage(0)}\n                    />\n                </StickyThing>\n            )\n        }\n    }\n\n    getColumnLabel(colName : string) : string{\n        //utility method for getting column data obj from\n        let columnLabel = \"\";\n        for(let i = 0; i < this.columnDefs.length; i++){\n            if(this.columnDefs[i].columnName === colName){\n                columnLabel = this.columnDefs[i].columnLabel;\n            }\n        }\n        return columnLabel;\n    }\n\n    updateValues=(row : number, cell:number, value:string, colName : string)=>{\n        if(this.dataGridRef.current != null && this.dataGridRef.current != undefined ){\n            this.selectionSet = this.dataGridRef.current.selectionSet;\n\n        }\n        //console.log(\"inside drawer\", value, \" col name:\", colName);\n        //the minus 2 is the offset for the extra columns checkbox and edit\n        for(let i =0; i < this.selectionSet.length; i++){\n            if(this.selectionSet[i].columnName === colName){\n                let myRow = this.selectionSet[i].row-2;\n                let myCell = this.selectionSet[i].cell-2;\n\n                //this.workingDataSet[ myRow-2][myCell-2].value = value;\n                const updateSet : iUpdateSet = { row:myRow ,cell:myCell, newData:value };\n                if(this.props.targetDataSet === \"custom-data\"){\n                    //if it's custom we need to pass along the grid data package\n                    this.props.dataManager.setData(this.props.targetDataSet, updateSet, this.props.gridData);\n                }else{\n                    this.props.dataManager.setData(this.props.targetDataSet, updateSet);\n                }\n            }\n        }\n        this.setState({workingData : this.props.dataManager.getProductData()});\n    };\n\n    openEditDrawer( ){\n        this.drawerFirstOpen = true;\n        this.setState({editDrawerOpen : true});\n    }\n\n    //DRAWER RELATED\n    maximizeEditDrawer(){\n        this.setState({editDrawerMaximized : !this.state.editDrawerMaximized})\n    }\n\n    closeEditDrawer(){\n        this.setState({\n            editDrawerOpen : false,\n            editDrawerMaximized : false,\n            focusedInput : {row:0, cell:0, editDrawerOpen:false}\n        });\n        if(this.dataGridRef.current != null && this.dataGridRef.current != undefined){\n            this.dataGridRef.current.clearSelection();\n        }\n        this.drawerFirstOpen = false;\n    }\n\n    shiftFocus(shiftIndex: number){\n        let inputs: HTMLCollection = document.getElementsByClassName(\"InputBox\");\n\n        if(inputs[0] != undefined){\n            if(shiftIndex === inputs.length-1){\n                // @ts-ignore\n                inputs[0].focus();\n                // @ts-ignore\n                inputs[0].select();\n            }\n        }\n    };\n\n    inputFocusAction=(row : number, cell:number)=>{\n        if(this.state.editDrawerOpen === true){\n            this.setState({focusedInput : { row : row, cell : cell, editDrawerOpen: this.state.editDrawerOpen}})\n        }\n    };\n\n    getEditDrawer():ReactElement{\n\n        if(this.state.editDrawerOpen === false){\n            return(<></>);\n        }\n\n        if(this.dataGridRef.current != null && this.dataGridRef.current != undefined ){\n            this.selectionSet = this.dataGridRef.current.selectionSet;\n        }\n\n        let inputs : ReactElement[] = [];\n        let selectedItems : iDataGridItem[] = [];\n\n        //Create list of selection items that need inputs (i.e. one input per column)\n        i: for(let i=0; i < this.selectionSet.length; i++){\n\n            j: for(let j=0; j < selectedItems.length; j++){\n                if(this.selectionSet[i].columnName === selectedItems[j].columnName){\n                    continue i;\n                }\n            }\n            let row = this.selectionSet[i].row;\n            let cell = this.selectionSet[i].cell;\n            //TODO this needs to be genericized\n            //let productDataItem = catmanData.productData[row-2][cell-2];\n            let productDataItem = this.props.gridData[row-2][cell-2];\n            selectedItems.push(productDataItem);\n        }\n\n        //Store number of inputs for later use\n        this.drawerInputsLength = selectedItems.length;\n\n        //CREATE INPUTS for DRAWER\n\n        let checkValue = \"\";\n        for( let i=0; i < selectedItems.length; i++){\n            //check for duplicate values\n            //make a list of all the items that match column name\n            let sameColumn : iDataGridItem[] = [];\n            j: for(let j = 0; j < this.selectionSet.length; j++)\n            {\n                    if(selectedItems[i].columnName === this.selectionSet[j].columnName)\n                    {\n                        sameColumn.push( this.state.workingData[this.selectionSet[j].row-2][this.selectionSet[j].cell-2]);\n                    }\n            }\n            //go over each item in the selection set and compare its corresponding value\n\n            k: for(let k = 0; k < sameColumn.length; k++)\n            {\n                if(k == 0)\n                {\n                    checkValue = sameColumn[k].value;\n                    continue k;\n                }\n\n                if(checkValue == sameColumn[k].value)\n                {\n                    continue k;\n                }\n                else\n                {\n                    checkValue = \"--multiple values selected\";\n                    break k;\n                }\n\n            }\n            console.log(\"sameColumn\",sameColumn);\n            console.log(\"selectedItems\",selectedItems);\n            console.log(\"checkValue\",checkValue);\n\n            let input = (\n                <TextInput\n                    row={this.selectionSet[i].row}\n                    cell={this.selectionSet[i].cell}\n                    columnName={this.selectionSet[i].columnName}\n                    label={this.getColumnLabel( selectedItems[i].columnName )}\n                    currentValue={ checkValue}\n                    onChangeAction={this.updateValues}\n                    onFocusAction={this.inputFocusAction}\n                    onBlurActions={[ ()=>this.shiftFocus(i) ]}\n                />\n            );\n            inputs.push(input)\n        }\n\n        let maximize = (valueCheck : boolean)=>{\n            if(valueCheck === true){\n                return \"maximized\"\n            }else{\n                return \"catman-edit-default restored\"\n            }\n        };\n\n        let restoreAndMaximizeTooltip = (valueCheck : boolean)=>{\n            if(valueCheck === false){\n                return toolTipContent.maximizeDrawer();\n            }else{\n                return toolTipContent.restoreDrawer();\n            }\n        };\n\n        let restoreAndMaximizeBtnIcon = (valueCheck : boolean)=>{\n            if(valueCheck === false){\n                return \"icon-maximize\"\n            }else{\n                return \"icon-restore-btn\"\n            }\n        };\n\n\n        let drawer = (<></>);\n        if(this.state.editDrawerOpen === true && this.selectionSet.length > 0){\n            drawer = (\n                <>\n                    <StickyThing\n                        ref = {this.editDrawerRef}\n                        enterFromThisSide=\"bottom\"\n                        lastResortClasses={`catman-edit-drawer ${maximize(this.state.editDrawerMaximized)}`}\n                        animateIn={true}\n                        heightIncludeUnits=\"\"\n                        widthIncludeUnits={\"\"}\n                        stickyOpen={true}\n                        bgColor={\"#CECECE\"}\n                        doAnimation={true}\n                        toolBar=\"none\"\n                    >\n                        <div className={\"tool-bar\"}>\n                            <div></div>\n                            <div className=\"drawer-controls\">\n                                <AppButton\n                                    buttonType={\"secondary-action\"}\n                                    buttonLabel=\"\"\n                                    OnClick={()=>this.maximizeEditDrawer()}\n                                    tooltipType=\"custom\"\n                                    tooltip={restoreAndMaximizeTooltip(this.state.editDrawerMaximized)}\n                                    toolTipTimeOutInMS={10000}\n                                    classes=\"tool-bar-btn icon-only-btn\"\n                                    iconLeft={\n                                        <CatmanIcon\n                                            iconName={`${restoreAndMaximizeBtnIcon(this.state.editDrawerMaximized)}`}\n                                            classes=\" \"\n                                            height=\"100%\"\n                                            width=\"100%\"\n                                        />\n                                    }\n                                />\n                                <AppButton\n                                    buttonType={\"secondary-action\"}\n                                    buttonLabel=\"\"\n                                    OnClick={()=>this.closeEditDrawer()}\n                                    tooltipType=\"custom\"\n                                    tooltip={toolTipContent.closeDrawer()}\n                                    toolTipTimeOutInMS={10000}\n                                    classes=\"icon-only-btn\"\n                                    iconLeft={\n                                        <CatmanIcon\n                                            iconName=\"icon-close\"\n                                            classes=\" \"\n                                            height=\"100%\"\n                                            width=\"100%\"\n                                        />\n                                    }\n                                />\n\n                            </div>\n                        </div>\n                        <div className=\"drawer-edit-area\">\n                            {inputs}\n                        </div>\n                    </StickyThing>\n                </>\n            );\n        }\n        return drawer;\n    }\n\n    notifySelectionSetUpdate(){\n        if(this.dataGridRef.current != null && this.dataGridRef.current != undefined ){\n            this.selectionSet = this.dataGridRef.current.selectionSet;\n        }\n\n        //TODO move this drawer logic out\n        if(this.selectionSet.length > 0){\n            this.setState({ editDrawerOpen : true } );\n        }else {\n            this.setState({ editDrawerOpen : false } );\n        }\n    }\n\n    //GRID MANAGEMENT\n    getGridArea(){\n        return (\n            <DataGrid\n                ref={this.dataGridRef}\n                data={this.state.workingData}\n                manageParentViews={()=>this.openEditDrawer()}\n                selectionCallback={this.manageSelectionSet}\n                notifySelections={()=>this.notifySelectionSetUpdate()}\n                columnsData={this.state.columnsData}\n                classes={this.conditionClasses()}\n                addAction={this.addAction}\n                focusedItem={this.state.focusedInput}\n                hasDetailsActionButton={this.props.gridHasDetailsButton}\n            />\n        )\n    }\n\n    manageSelectionSet = (selectionSet : iDataGridItem[], checkBoxSelections : number[], message : string, row:number, cell:number )=>{\n        if(checkBoxSelections.length > 0 || (this.initialized === false && checkBoxSelections.length === 0 && message === \"checkbox-launched\") ){\n            if(checkBoxSelections.length <= 1){\n                this.setState({editDrawerOpen : false, footerOpen : true, footerMode: \"default\"});\n            }else if(checkBoxSelections.length > 1 ){\n                this.setState({editDrawerOpen : false, footerOpen : true, footerMode: \"multiple-selected\"});\n            }\n            this.initialized = true;\n        }else{\n            this.setState({footerOpen : false});\n        }\n\n        //this is a catch all for parent objects to do something when...\n        //... a selection has occurred\n\n        if(this.props.selectionActions != undefined){\n            for(let i=0; i < this.props.selectionActions.length; i++){\n                this.props.selectionActions[i]();\n            }\n        }\n\n        //manage focus events\n        //we'll use the row & cell data here to manage the focus widget\n        if(this.state.editDrawerOpen === true){\n            this.setState({focusedInput : { row : row, cell : cell, editDrawerOpen:true}})\n        }\n\n    };\n\n    conditionClasses(){\n        if(this.state.editDrawerOpen === true){\n            return \"drawer-open\";\n        }\n    }\n\n    addAction(addType:string){\n\n        switch (addType) {\n            case \"add-attribute\":\n\n                return(<></>);\n            case \"add-products\":\n\n                return(<></>);\n        }\n    }\n\n    switchToEditMode(){\n        if(this.dataGridRef.current !== null && this.dataGridRef.current !== undefined){\n            this.dataGridRef.current.switchToEditModeFromCheckBoxMode();\n            this.openEditDrawer();\n            this.initialized = false;\n            this.setState({footerOpen : false})\n        }\n    }\n\n    // Grid\n    clearSelection(){\n        if(this.dataGridRef.current !== null && this.dataGridRef.current !== undefined){\n            this.dataGridRef.current.clearSelection();\n        }\n    }\n    getCheckedRows(){\n        if(this.dataGridRef.current != undefined)\n        {\n            return this.dataGridRef.current._checkedRows\n        }\n    }\n    switchToEditModeFromCheckBoxMode(){\n        if(this.dataGridRef.current !== null && this.dataGridRef.current !== undefined){\n            this.dataGridRef.current.switchToEditModeFromCheckBoxMode();\n            this.openEditDrawer();\n            this.initialized = false;\n            this.setState({footerOpen : false})\n        }\n    }\n\n    //Life Cycle\n    componentDidUpdate(): void {\n        let inputs : any = document.getElementsByClassName(\"InputBox\");\n\n        if(this.drawerFirstOpen === true ){\n            if(inputs[0] != undefined){\n                inputs[0].focus();\n                inputs[0].select();\n                this.drawerFirstOpen = false;\n            }\n        }\n    }\n\n    render(){\n        return(\n            <>\n                {this.getEditDrawer()}\n                {this.getGridArea()}\n                {this.getMediaDetailsView()}\n            </>\n        );\n    }\n}","import * as React from \"react\";\nimport {iColumn} from \"../_catman-data-types\";\nimport {iDataGridItem} from \"../_catman-data-types\";\n\nexport let dataAttributeColumns : iColumn[] = [\n\n    {\n        validationAction : [],\n        columnName : \"uniqueID\",\n        columnLabel : \" \",\n        columnMenu : <></>,\n        columnType : \"standard\",\n        control : \"text-input\",\n        tooltipType : \"custom\",\n        toolTip : \"this is non-editable unique id\"\n    },\n    {\n        validationAction : [],\n        columnName : \"attributeName\",\n        columnLabel : \"Attribute Name\",\n        columnMenu : <></>,\n        columnType : \"standard\",\n        control : \"text-input\",\n        tooltipType : \"custom\",\n        toolTip : \"this is your internal name for the attribute/column-head\"\n    },\n    {\n        validationAction : [],\n        columnName : \"columnLabel\",\n        columnLabel : \"Column Label\",\n        columnMenu : <></>,\n        columnType : \"standard\",\n        control : \"text-input\",\n        tooltipType : \"custom\",\n        toolTip : \"this is your internal name for the attribute/column-head\"\n    },\n    {\n        validationAction : [],\n        columnName : \"acceptableInputs\",\n        columnLabel : \"Acceptable Inputs\",\n        columnMenu : <></>,\n        columnType : \"standard\",\n        control : \"text-input\",\n        tooltipType : \"custom\",\n        toolTip : \"this is your internal name for the attribute/column-head\"\n    },\n    {\n        validationAction : [],\n        columnName : \"toolTip\",\n        columnLabel : \"Tool Tip\",\n        columnMenu : <></>,\n        columnType : \"standard\",\n        control : \"text-input\",\n        tooltipType : \"custom\",\n        toolTip : \"this is your internal name for the attribute/column-head\"\n    },\n    {\n        validationAction : [],\n        columnName : \"classesAssignedTo\",\n        columnLabel : \"Classes Assigned To\",\n        columnMenu : <></>,\n        columnType : \"standard\",\n        control : \"text-input\",\n        tooltipType : \"custom\",\n        toolTip : \"When you choose a class for your product, these attributes/column-heads will automatically be loaded\"\n    },\n\n];\n\nexport let standardAttributes : iDataGridItem[][]=\n    [\n        [\n            { validationValue:\"\",\n                columnName: \"uniqueID\",\n                value: \"100001\",\n                attrType: \"hidden\",\n                class: \"default\"\n            },\n            //REFERENCE IMAGE\n            {   validationValue:\"\",\n                value: \"ReferenceImage\",\n                columnName: \"attributeName\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {   validationValue:\"\",\n                value: \"Reference Image\",\n                columnName: \"columnLabel\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {   validationValue:\"\",\n                value: \"\",\n                columnName: \"acceptableInputs\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {   validationValue:\"\",\n                value: \"This is the summary of the media in your product\",\n                columnName: \"toolTip\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {   validationValue:\"\",\n                value: \"all\",\n                columnName: \"classesAssignedTo\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n        ],\n    ];\n\nexport let dataAttributesLibrary : iDataGridItem[][] =\n    [\n        [\n            { validationValue:\"\",\n                columnName: \"uniqueID\",\n                value: \"100001\",\n                attrType: \"hidden\",\n                class: \"default\"\n            },\n            //REFERENCE IMAGE\n            {   validationValue:\"\",\n                value: \"ReferenceImage\",\n                columnName: \"attributeName\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {   validationValue:\"\",\n                value: \"Reference Image\",\n                columnName: \"columnLabel\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {   validationValue:\"\",\n                value: \"\",\n                columnName: \"acceptableInputs\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {   validationValue:\"\",\n                value: \"This is the summary of the media in your product\",\n                columnName: \"toolTip\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {   validationValue:\"\",\n                value: \"all\",\n                columnName: \"classesAssignedTo\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n        ]\n    ];\n\n\n","import * as React from \"react\";\n\ninterface iPROPS {\n    mainTitle : string;\n    subTitle? : string;\n    titleType : \"subtitle-above\" | \"subtitle-below\" | \"no-subtitle\"\n}\n\ninterface iSTATE{\n\n}\n\nexport class TitleArea extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n    }\n\n    getTitle(){\n\n        switch (this.props.titleType) {\n            case \"no-subtitle\":\n                return(\n                    <div className=\"title-area\">\n                        <h2>\n                            {this.props.mainTitle}\n                        </h2>\n                    </div>\n                );\n            case \"subtitle-above\":\n                return(\n                <div className=\"title-area\">\n                    <p>\n                        {this.props.subTitle}\n                    </p>\n                    <h2>\n                        {this.props.mainTitle}\n                    </h2>\n                </div>\n                );\n\n            case \"subtitle-below\":\n                return(\n                    <div className=\"title-area\">\n                        <h2>\n                            {this.props.mainTitle}\n                        </h2>\n                        <p>\n                            {this.props.subTitle}\n                        </p>\n                    </div>\n                )\n        }\n\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return this.getTitle();\n    }\n\n}","import * as React from \"react\";\nimport {MainHeaderArea} from \"../../_common/main-header-area/main-header-area\";\nimport {Navigation} from \"../../../view-components/list-menu/intra-app-navigation\";\nimport {mainNavConfig} from \"../../_catman-configuration/common-app-configuration\";\nimport {DataGridWithEditDrawer} from \"../../../view-components/data-grid/data-grid-with-edit-drawer\";\nimport {\n    dataAttributeColumns,\n    dataAttributesLibrary,\n    standardAttributes\n} from \"../../../_sample-data/attributes-data-and-columns\";\nimport {dataManagerMain} from \"../../../index\";\nimport {TitleArea} from \"../../../view-components/title-area/title-area\";\n\ninterface iPROPS{\n    message : string;\n}\n\ninterface iSTATE{\n\n}\nexport class ManageAttributesView extends React.Component<iPROPS, iSTATE>{\n\n\n    getDataGrid(){\n\n        return(<DataGridWithEditDrawer\n            gridData={dataManagerMain.getAttributesData()}\n            columnsData={dataAttributeColumns}\n            dataManager={dataManagerMain}\n            targetDataSet={ \"attributes-data\"}\n            gridHasDetailsButton={true}\n            />\n    )\n\n    }\n    render(){\n        return(\n            <>\n                <MainHeaderArea\n                    mainButtonLabel=\"Add Attributes\"\n                    addItemAction={()=>{}}\n                    sectionTitle=\"Landing Page\"\n                    navigationElement={<Navigation menuHelpStyle=\"panel\" navElements={mainNavConfig} />}\n                />\n                <TitleArea\n                    mainTitle=\"Manage Attributes\"\n                    titleType=\"subtitle-above\"\n                    subTitle=\"Manage the column-heads/attributes you use to describe your products\"\n                />\n                {this.getDataGrid()}\n            </>\n        );\n    }\n}\n\nexport default ManageAttributesView;","import * as React from \"react\";\nimport {MainHeaderArea} from \"../../_common/main-header-area/main-header-area\";\nimport {Navigation} from \"../../../view-components/list-menu/intra-app-navigation\";\nimport {mainNavConfig} from \"../../_catman-configuration/common-app-configuration\";\nimport {DataGridWithEditDrawer} from \"../../../view-components/data-grid/data-grid-with-edit-drawer\";\nimport {\n    dataAttributeColumns,\n    dataAttributesLibrary,\n    standardAttributes\n} from \"../../../_sample-data/attributes-data-and-columns\";\nimport {dataManagerMain} from \"../../../index\";\nimport {TitleArea} from \"../../../view-components/title-area/title-area\";\n\ninterface iPROPS{\n    message : string;\n}\n\ninterface iSTATE{\n\n}\n\nexport class AttributeGroupsView extends React.Component<iPROPS, iSTATE>{\n\n    getDataGrid(){\n        return(<DataGridWithEditDrawer\n                gridData={dataManagerMain.getAttributeGroupsData()}\n                columnsData={dataManagerMain.getAttributeGroupsColumns()}\n                dataManager={dataManagerMain}\n                targetDataSet={\"attribute-groups-data\"}\n                gridHasDetailsButton={true}\n            />\n        )\n\n    }\n    render(){\n        return(\n            <>\n                <MainHeaderArea\n                    mainButtonLabel=\"Add Attributes Group\"\n                    addItemAction={()=>{}}\n                    sectionTitle=\"Attribute Groups\"\n                    navigationElement={<Navigation menuHelpStyle=\"panel\" navElements={mainNavConfig} />}\n                />\n                <TitleArea\n                    mainTitle=\"Manage Attribute Groups\"\n                    titleType=\"subtitle-above\"\n                    subTitle=\"e your products\"\n                />\n                {this.getDataGrid()}\n            </>\n        );\n    }\n}\n\nexport default AttributeGroupsView;","import React from \"react\";\nimport {Navigation} from \"../../../view-components/list-menu/intra-app-navigation\";\nimport {mainNavConfig} from \"../../_catman-configuration/common-app-configuration\";\nimport {MainHeaderArea} from \"../../_common/main-header-area/main-header-area\";\n\ninterface iPROPS {\n    message: string;\n}\n\ninterface iSTATE{\n\n}\n\nexport class ManageAttributeMappingView extends React.Component<iPROPS, iSTATE>{\n    // constructor(props:iPROPS) {\n    //     super(props);\n    //\n    // }\n    render(){\n        return(\n            <>\n                <MainHeaderArea\n                    mainButtonLabel=\"Add Attribute\"\n                    addItemAction={()=>{}}\n                    sectionTitle=\"Landing Page\"\n                    navigationElement={<Navigation menuHelpStyle=\"panel\" navElements={mainNavConfig} />}\n                />\n                <h2>Manage Attributes Mapping</h2>\n                <h3>{this.props.message}</h3>\n            </>\n        );\n    }\n}","    import {iColumn, iDataGridItem} from \"../_catman-data-types\";\nimport * as React from \"react\";\n\nexport let classesLibraryColumns : iColumn[] = [\n    {\n        validationAction : [],\n        columnName : \"uniqueID\",\n        columnLabel : \" \",\n        columnMenu : <></>,\n        columnType : \"standard\",\n        control : \"text-input\",\n        tooltipType : \"custom\",\n        toolTip : \"this is non-editable unique id\"\n    },\n    {\n        validationAction : [],\n        columnName : \"className\",\n        columnLabel : \"Class Name\",\n        columnMenu : <></>,\n        columnType : \"standard\",\n        control : \"text-input\",\n        tooltipType : \"custom\",\n        toolTip : \"This is a collection of attributes/column-head \"\n    },\n    {\n        validationAction : [],\n        columnName : \"columnLabel\",\n        columnLabel : \"Column Label\",\n        columnMenu : <></>,\n        columnType : \"standard\",\n        control : \"text-input\",\n        tooltipType : \"custom\",\n        toolTip : \"this is your internal name for the attribute/column-head\"\n    },\n\n];\n\nexport let classesLibrary : iDataGridItem[][] = [\n\n    [\n        { validationValue:\"\",\n            columnName: \"uniqueID\",\n            value: \"100001\",\n            attrType: \"hidden\",\n            class: \"default\"\n        },\n\n        {   validationValue:\"\",\n            value: \"Group Name\",\n            columnName: \"groupName\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"Attributes In Group\",\n            columnName: \"columnLabel\",\n            attrType: \"standard\",\n            class: \"default\"\n        }\n    ],\n];","import * as React from \"react\";\nimport {MainHeaderArea} from \"../../_common/main-header-area/main-header-area\";\nimport {Navigation} from \"../../../view-components/list-menu/intra-app-navigation\";\nimport {mainNavConfig} from \"../../_catman-configuration/common-app-configuration\";\nimport {DataGridWithEditDrawer} from \"../../../view-components/data-grid/data-grid-with-edit-drawer\";\nimport {\n    dataAttributeColumns,\n    dataAttributesLibrary,\n    standardAttributes\n} from \"../../../_sample-data/attributes-data-and-columns\";\nimport {dataManagerMain} from \"../../../index\";\nimport {TitleArea} from \"../../../view-components/title-area/title-area\";\nimport {classesLibraryColumns} from \"../../../_sample-data/classes-library\";\n\ninterface iPROPS{\n    message : string;\n}\n\ninterface iSTATE{\n\n}\nexport class ManageClassesView extends React.Component<iPROPS, iSTATE>{\n\n\n    getDataGrid(){\n\n        return(<DataGridWithEditDrawer\n                gridData={dataManagerMain.getClassesData()}\n                columnsData={classesLibraryColumns}\n                dataManager={dataManagerMain}\n                targetDataSet={\"classes-data\"}\n                gridHasDetailsButton={true}\n            />\n        )\n\n    }\n    render(){\n        return(\n            <>\n                <MainHeaderArea\n                    mainButtonLabel=\"Add Class\"\n                    addItemAction={()=>{}}\n                    sectionTitle=\"Landing Page\"\n                    navigationElement={<Navigation menuHelpStyle=\"panel\" navElements={mainNavConfig} />}\n                />\n\n                {this.getDataGrid()}\n            </>\n        );\n    }\n}\n\nexport default ManageClassesView;","import * as React from \"react\";\nimport {iNavItem} from \"../../_catman-data-types\";\n\n\nexport let navSettings = {\n    home : '/',\n    catalog: '/catalog',\n    catalogOverview : 'catalog/overview',\n    catalogDashBoard : 'catalog/dashboard',\n    catalogDetails : 'catalog/spreadsheet',\n    manageAttributes : '/manage-attributes',\n    manageAttributeGroups : '/manage-attribute-groups',\n    manageAttributeMappings : '/manage-attribute-mappings',\n    manageClasses : '/manage-classes',\n    mediaLibrary : '/media-library'\n};","import * as React from \"react\";\nimport {Navigation} from \"../../../view-components/list-menu/intra-app-navigation\";\nimport {MainHeaderArea} from \"../../_common/main-header-area/main-header-area\";\n\n//Configuration data:\nimport {mainNavConfig} from \"../../_catman-configuration/common-app-configuration\";\nimport {ReactElement} from \"react\";\n\ninterface iPROPS {\n    message: string;\n}\n\ninterface iSTATE{\n\n}\n\nexport class CatalogOverviewView extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n    }\n\n    render(){\n        return (\n            <>\n                <h2>Your Catalog: OverView</h2>\n                <h3>{this.props.message}</h3>\n            </>\n        )\n    }\n}\n","import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport {iColumnHeader, iComponentType, iDataGridItem} from \"../_catman-data-types\";\n\n\nexport class ProductsData{\n\n    productData: iDataGridItem[][] = [\n        [\n            { validationValue:\"\", columnName: \"uniqueID\", value: \"000001\", attrType: \"hidden\", class: \"default\"},\n\n            {   validationValue:\"\",\n                value: \"https://secure.img1-fg.wfcdn.com/im/46577228/resize-h800-w800%5Ecompr-r85/8736/87366205/Fallinerlea+Indoor/Outdoor+Throw+Pilow.jpg\",\n                columnName: \"ReferenceImage\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {validationValue:\"\", columnName: \"PartNumber\",  value: \"sof-121-111\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", columnName: \"ProductGroup\", value: \"Rosina\",  attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", columnName: \"ProductName\", value: \"Rosina classic convertible sofa\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", columnName: \"Class\", value: \"Sofas\",  attrType: \"required\", class: \"default\"},\n            {validationValue:\"\", columnName: \"ProductType\", value: \"Sofa\",  attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", columnName: \"OverallDimensions\",  value: `33'' H x 74'' W x 29'' D`, attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", columnName: \"OverallDepth\", value: `42\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"OverallHeight\", value: `42\"`,  attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"OverallLength\", value: `42\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"Seat\",value: `\"21\" H x 77\" W x 22\" D\"`,  attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", columnName: \"ArmHeightFloorToArm\", value: `25\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"BackHeightSeatToTopOfBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"FullyReclinedDepthFrontToBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"LegHeightTopToBottom\", value: `5.63\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ClearanceFromFloorToBottomOfSofa\",value: `3\"`,  attrType: \"user-gen\", class: \"sofa\"},\n\n        ],\n        [\n            {validationValue:\"\", value: \"000002\", columnName: \"uniqueID\", attrType: \"hidden\", class: \"default\"},\n            {\n                validationValue:\"\",\n                value: \"https://secure.img1-fg.wfcdn.com/im/89777776/resize-h800-w800%5Ecompr-r85/6623/66233441/Marcela+Geometric+Links+Accent+Decorative+18%2522+Square+Pillow+Cover.jpg\",\n                columnName: \"ReferenceImage\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {validationValue:\"\" , value: \"sof-121-112\", columnName: \"PartNumber\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\" , value: \"Rosina\", columnName: \"ProductGroup\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina classic convertible sofa\", columnName: \"ProductName\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofas\", columnName: \"Class\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofa\", columnName: \"ProductType\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: `33'' H x 74'' W x 29'' D`, columnName: \"Overall\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallDepth\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallHeight\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallLength\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `\"21\" H x 77\" W x 22\" D\"`, columnName: \"Seat\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ArmHeightFloorToArm\", value: `25\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"BackHeightSeatToTopOfBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"FullyReclinedDepthFrontToBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"LegHeightTopToBottom\", value: `5.63\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ClearanceFromFloorToBottomOfSofa\",value: `3\"`,  attrType: \"user-gen\", class: \"sofa\"}\n        ],\n        [\n            {validationValue:\"\", value: \"000003\", columnName: \"uniqueID\", attrType: \"hidden\", class: \"default\"},\n            {\n                validationValue:\"\",\n                value: \"https://secure.img1-fg.wfcdn.com/im/09257425/resize-h800-w800%5Ecompr-r85/9445/94458967/Besmira+Square+Pillow+Cover.jpg\",\n                columnName: \"ReferenceImage\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {validationValue:\"\", value: \"sof-121-113\", columnName: \"PartNumber\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina\", columnName: \"ProductGroup\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina classic convertible sofa\", columnName: \"ProductName\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofas\", columnName: \"Class\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofa\", columnName: \"ProductType\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: `33'' H x 74'' W x 29'' D`, columnName: \"Overall\", attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallDepth\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallHeight\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallLength\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `\"21\" H x 77\" W x 22\" D\"`, columnName: \"Seat\", attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", columnName: \"ArmHeightFloorToArm\", value: `25\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"BackHeightSeatToTopOfBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"FullyReclinedDepthFrontToBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"LegHeightTopToBottom\", value: `5.63\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ClearanceFromFloorToBottomOfSofa\",value: `3\"`,  attrType: \"user-gen\", class: \"sofa\"},\n        ],\n        [\n            {validationValue:\"\", value: \"000004\", columnName: \"uniqueID\", attrType: \"hidden\", class: \"default\"},\n            {\n                validationValue:\"\",\n                value: \"https://secure.img1-fg.wfcdn.com/im/09257425/resize-h800-w800%5Ecompr-r85/9445/94458967/Besmira+Square+Pillow+Cover.jpg\",\n                columnName: \"ReferenceImage\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {validationValue:\"\", value: \"sof-121-114\", columnName: \"PartNumber\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina\", columnName: \"ProductGroup\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina classic convertible sofa\", columnName: \"ProductName\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofas\", columnName: \"Class\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofa\", columnName: \"ProductType\", attrType: \"standard\", class: \"default\"},\n\n            {validationValue:\"\", value: `33'' H x 74'' W x 29'' D`, columnName: \"Overall\", attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallDepth\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallHeight\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallLength\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `\"21\" H x 77\" W x 22\" D\"`, columnName: \"Seat\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ArmHeightFloorToArm\", value: `25\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"BackHeightSeatToTopOfBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"FullyReclinedDepthFrontToBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"LegHeightTopToBottom\", value: `5.63\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ClearanceFromFloorToBottomOfSofa\",value: `3\"`,  attrType: \"user-gen\", class: \"sofa\"},\n        ],\n        [\n            { validationValue:\"\", columnName: \"uniqueID\", value: \"000001\", attrType: \"hidden\", class: \"default\"},\n\n            {   validationValue:\"\",\n                value: \"https://secure.img1-fg.wfcdn.com/im/46577228/resize-h800-w800%5Ecompr-r85/8736/87366205/Fallinerlea+Indoor/Outdoor+Throw+Pilow.jpg\",\n                columnName: \"ReferenceImage\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {validationValue:\"\", columnName: \"PartNumber\",  value: \"sof-121-111\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", columnName: \"ProductGroup\", value: \"Rosina\",  attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", columnName: \"ProductName\", value: \"Rosina classic convertible sofa\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", columnName: \"Class\", value: \"Sofas\",  attrType: \"required\", class: \"default\"},\n            {validationValue:\"\", columnName: \"ProductType\", value: \"Sofa\",  attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", columnName: \"OverallDimensions\",  value: `33'' H x 74'' W x 29'' D`, attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", columnName: \"OverallDepth\", value: `42\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"OverallHeight\", value: `42\"`,  attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"OverallLength\", value: `42\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"Seat\",value: `\"21\" H x 77\" W x 22\" D\"`,  attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", columnName: \"ArmHeightFloorToArm\", value: `25\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"BackHeightSeatToTopOfBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"FullyReclinedDepthFrontToBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"LegHeightTopToBottom\", value: `5.63\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ClearanceFromFloorToBottomOfSofa\",value: `3\"`,  attrType: \"user-gen\", class: \"sofa\"},\n\n        ],\n        [\n            {validationValue:\"\", value: \"000002\", columnName: \"uniqueID\", attrType: \"hidden\", class: \"default\"},\n            {\n                validationValue:\"\",\n                value: \"https://secure.img1-fg.wfcdn.com/im/89777776/resize-h800-w800%5Ecompr-r85/6623/66233441/Marcela+Geometric+Links+Accent+Decorative+18%2522+Square+Pillow+Cover.jpg\",\n                columnName: \"ReferenceImage\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {validationValue:\"\" , value: \"sof-121-112\", columnName: \"PartNumber\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\" , value: \"Rosina\", columnName: \"ProductGroup\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina classic convertible sofa\", columnName: \"ProductName\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofas\", columnName: \"Class\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofa\", columnName: \"ProductType\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: `33'' H x 74'' W x 29'' D`, columnName: \"Overall\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallDepth\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallHeight\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallLength\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `\"21\" H x 77\" W x 22\" D\"`, columnName: \"Seat\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ArmHeightFloorToArm\", value: `25\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"BackHeightSeatToTopOfBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"FullyReclinedDepthFrontToBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"LegHeightTopToBottom\", value: `5.63\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ClearanceFromFloorToBottomOfSofa\",value: `3\"`,  attrType: \"user-gen\", class: \"sofa\"}\n        ],\n        [\n            {validationValue:\"\", value: \"000003\", columnName: \"uniqueID\", attrType: \"hidden\", class: \"default\"},\n            {\n                validationValue:\"\",\n                value: \"https://secure.img1-fg.wfcdn.com/im/09257425/resize-h800-w800%5Ecompr-r85/9445/94458967/Besmira+Square+Pillow+Cover.jpg\",\n                columnName: \"ReferenceImage\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {validationValue:\"\", value: \"sof-121-113\", columnName: \"PartNumber\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina\", columnName: \"ProductGroup\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina classic convertible sofa\", columnName: \"ProductName\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofas\", columnName: \"Class\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofa\", columnName: \"ProductType\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: `33'' H x 74'' W x 29'' D`, columnName: \"Overall\", attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallDepth\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallHeight\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallLength\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `\"21\" H x 77\" W x 22\" D\"`, columnName: \"Seat\", attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", columnName: \"ArmHeightFloorToArm\", value: `25\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"BackHeightSeatToTopOfBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"FullyReclinedDepthFrontToBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"LegHeightTopToBottom\", value: `5.63\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ClearanceFromFloorToBottomOfSofa\",value: `3\"`,  attrType: \"user-gen\", class: \"sofa\"},\n        ],\n        [\n            {validationValue:\"\", value: \"000004\", columnName: \"uniqueID\", attrType: \"hidden\", class: \"default\"},\n            {\n                validationValue:\"\",\n                value: \"https://secure.img1-fg.wfcdn.com/im/09257425/resize-h800-w800%5Ecompr-r85/9445/94458967/Besmira+Square+Pillow+Cover.jpg\",\n                columnName: \"ReferenceImage\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {validationValue:\"\", value: \"sof-121-114\", columnName: \"PartNumber\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina\", columnName: \"ProductGroup\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina classic convertible sofa\", columnName: \"ProductName\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofas\", columnName: \"Class\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofa\", columnName: \"ProductType\", attrType: \"standard\", class: \"default\"},\n\n            {validationValue:\"\", value: `33'' H x 74'' W x 29'' D`, columnName: \"Overall\", attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallDepth\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallHeight\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallLength\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `\"21\" H x 77\" W x 22\" D\"`, columnName: \"Seat\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ArmHeightFloorToArm\", value: `25\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"BackHeightSeatToTopOfBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"FullyReclinedDepthFrontToBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"LegHeightTopToBottom\", value: `5.63\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ClearanceFromFloorToBottomOfSofa\",value: `3\"`,  attrType: \"user-gen\", class: \"sofa\"},\n        ],\n        [\n            { validationValue:\"\", columnName: \"uniqueID\", value: \"000001\", attrType: \"hidden\", class: \"default\"},\n\n            {   validationValue:\"\",\n                value: \"https://secure.img1-fg.wfcdn.com/im/46577228/resize-h800-w800%5Ecompr-r85/8736/87366205/Fallinerlea+Indoor/Outdoor+Throw+Pilow.jpg\",\n                columnName: \"ReferenceImage\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {validationValue:\"\", columnName: \"PartNumber\",  value: \"sof-121-111\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", columnName: \"ProductGroup\", value: \"Rosina\",  attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", columnName: \"ProductName\", value: \"Rosina classic convertible sofa\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", columnName: \"Class\", value: \"Sofas\",  attrType: \"required\", class: \"default\"},\n            {validationValue:\"\", columnName: \"ProductType\", value: \"Sofa\",  attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", columnName: \"OverallDimensions\",  value: `33'' H x 74'' W x 29'' D`, attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", columnName: \"OverallDepth\", value: `42\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"OverallHeight\", value: `42\"`,  attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"OverallLength\", value: `42\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"Seat\",value: `\"21\" H x 77\" W x 22\" D\"`,  attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", columnName: \"ArmHeightFloorToArm\", value: `25\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"BackHeightSeatToTopOfBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"FullyReclinedDepthFrontToBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"LegHeightTopToBottom\", value: `5.63\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ClearanceFromFloorToBottomOfSofa\",value: `3\"`,  attrType: \"user-gen\", class: \"sofa\"},\n\n        ],\n        [\n            {validationValue:\"\", value: \"000002\", columnName: \"uniqueID\", attrType: \"hidden\", class: \"default\"},\n            {\n                validationValue:\"\",\n                value: \"https://secure.img1-fg.wfcdn.com/im/89777776/resize-h800-w800%5Ecompr-r85/6623/66233441/Marcela+Geometric+Links+Accent+Decorative+18%2522+Square+Pillow+Cover.jpg\",\n                columnName: \"ReferenceImage\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {validationValue:\"\" , value: \"sof-121-112\", columnName: \"PartNumber\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\" , value: \"Rosina\", columnName: \"ProductGroup\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina classic convertible sofa\", columnName: \"ProductName\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofas\", columnName: \"Class\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofa\", columnName: \"ProductType\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: `33'' H x 74'' W x 29'' D`, columnName: \"Overall\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallDepth\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallHeight\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallLength\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `\"21\" H x 77\" W x 22\" D\"`, columnName: \"Seat\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ArmHeightFloorToArm\", value: `25\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"BackHeightSeatToTopOfBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"FullyReclinedDepthFrontToBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"LegHeightTopToBottom\", value: `5.63\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ClearanceFromFloorToBottomOfSofa\",value: `3\"`,  attrType: \"user-gen\", class: \"sofa\"}\n        ],\n        [\n            {validationValue:\"\", value: \"000003\", columnName: \"uniqueID\", attrType: \"hidden\", class: \"default\"},\n            {\n                validationValue:\"\",\n                value: \"https://secure.img1-fg.wfcdn.com/im/09257425/resize-h800-w800%5Ecompr-r85/9445/94458967/Besmira+Square+Pillow+Cover.jpg\",\n                columnName: \"ReferenceImage\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {validationValue:\"\", value: \"sof-121-113\", columnName: \"PartNumber\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina\", columnName: \"ProductGroup\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina classic convertible sofa\", columnName: \"ProductName\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofas\", columnName: \"Class\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofa\", columnName: \"ProductType\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: `33'' H x 74'' W x 29'' D`, columnName: \"Overall\", attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallDepth\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallHeight\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallLength\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `\"21\" H x 77\" W x 22\" D\"`, columnName: \"Seat\", attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", columnName: \"ArmHeightFloorToArm\", value: `25\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"BackHeightSeatToTopOfBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"FullyReclinedDepthFrontToBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"LegHeightTopToBottom\", value: `5.63\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ClearanceFromFloorToBottomOfSofa\",value: `3\"`,  attrType: \"user-gen\", class: \"sofa\"},\n        ],\n        [\n            {validationValue:\"\", value: \"000004\", columnName: \"uniqueID\", attrType: \"hidden\", class: \"default\"},\n            {\n                validationValue:\"\",\n                value: \"https://secure.img1-fg.wfcdn.com/im/09257425/resize-h800-w800%5Ecompr-r85/9445/94458967/Besmira+Square+Pillow+Cover.jpg\",\n                columnName: \"ReferenceImage\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {validationValue:\"\", value: \"sof-121-114\", columnName: \"PartNumber\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina\", columnName: \"ProductGroup\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina classic convertible sofa\", columnName: \"ProductName\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofas\", columnName: \"Class\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofa\", columnName: \"ProductType\", attrType: \"standard\", class: \"default\"},\n\n            {validationValue:\"\", value: `33'' H x 74'' W x 29'' D`, columnName: \"Overall\", attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallDepth\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallHeight\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallLength\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `\"21\" H x 77\" W x 22\" D\"`, columnName: \"Seat\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ArmHeightFloorToArm\", value: `25\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"BackHeightSeatToTopOfBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"FullyReclinedDepthFrontToBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"LegHeightTopToBottom\", value: `5.63\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ClearanceFromFloorToBottomOfSofa\",value: `3\"`,  attrType: \"user-gen\", class: \"sofa\"},\n        ],\n        [\n            { validationValue:\"\", columnName: \"uniqueID\", value: \"000001\", attrType: \"hidden\", class: \"default\"},\n\n            {   validationValue:\"\",\n                value: \"https://secure.img1-fg.wfcdn.com/im/46577228/resize-h800-w800%5Ecompr-r85/8736/87366205/Fallinerlea+Indoor/Outdoor+Throw+Pilow.jpg\",\n                columnName: \"ReferenceImage\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {validationValue:\"\", columnName: \"PartNumber\",  value: \"sof-121-111\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", columnName: \"ProductGroup\", value: \"Rosina\",  attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", columnName: \"ProductName\", value: \"Rosina classic convertible sofa\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", columnName: \"Class\", value: \"Sofas\",  attrType: \"required\", class: \"default\"},\n            {validationValue:\"\", columnName: \"ProductType\", value: \"Sofa\",  attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", columnName: \"OverallDimensions\",  value: `33'' H x 74'' W x 29'' D`, attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", columnName: \"OverallDepth\", value: `42\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"OverallHeight\", value: `42\"`,  attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"OverallLength\", value: `42\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"Seat\",value: `\"21\" H x 77\" W x 22\" D\"`,  attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", columnName: \"ArmHeightFloorToArm\", value: `25\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"BackHeightSeatToTopOfBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"FullyReclinedDepthFrontToBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"LegHeightTopToBottom\", value: `5.63\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ClearanceFromFloorToBottomOfSofa\",value: `3\"`,  attrType: \"user-gen\", class: \"sofa\"},\n\n        ],\n        [\n            {validationValue:\"\", value: \"000002\", columnName: \"uniqueID\", attrType: \"hidden\", class: \"default\"},\n            {\n                validationValue:\"\",\n                value: \"https://secure.img1-fg.wfcdn.com/im/89777776/resize-h800-w800%5Ecompr-r85/6623/66233441/Marcela+Geometric+Links+Accent+Decorative+18%2522+Square+Pillow+Cover.jpg\",\n                columnName: \"ReferenceImage\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {validationValue:\"\" , value: \"sof-121-112\", columnName: \"PartNumber\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\" , value: \"Rosina\", columnName: \"ProductGroup\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina classic convertible sofa\", columnName: \"ProductName\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofas\", columnName: \"Class\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofa\", columnName: \"ProductType\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: `33'' H x 74'' W x 29'' D`, columnName: \"Overall\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallDepth\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallHeight\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallLength\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `\"21\" H x 77\" W x 22\" D\"`, columnName: \"Seat\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ArmHeightFloorToArm\", value: `25\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"BackHeightSeatToTopOfBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"FullyReclinedDepthFrontToBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"LegHeightTopToBottom\", value: `5.63\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ClearanceFromFloorToBottomOfSofa\",value: `3\"`,  attrType: \"user-gen\", class: \"sofa\"}\n        ],\n        [\n            {validationValue:\"\", value: \"000003\", columnName: \"uniqueID\", attrType: \"hidden\", class: \"default\"},\n            {\n                validationValue:\"\",\n                value: \"https://secure.img1-fg.wfcdn.com/im/09257425/resize-h800-w800%5Ecompr-r85/9445/94458967/Besmira+Square+Pillow+Cover.jpg\",\n                columnName: \"ReferenceImage\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {validationValue:\"\", value: \"sof-121-113\", columnName: \"PartNumber\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina\", columnName: \"ProductGroup\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina classic convertible sofa\", columnName: \"ProductName\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofas\", columnName: \"Class\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofa\", columnName: \"ProductType\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: `33'' H x 74'' W x 29'' D`, columnName: \"Overall\", attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallDepth\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallHeight\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallLength\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `\"21\" H x 77\" W x 22\" D\"`, columnName: \"Seat\", attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", columnName: \"ArmHeightFloorToArm\", value: `25\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"BackHeightSeatToTopOfBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"FullyReclinedDepthFrontToBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"LegHeightTopToBottom\", value: `5.63\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ClearanceFromFloorToBottomOfSofa\",value: `3\"`,  attrType: \"user-gen\", class: \"sofa\"},\n        ],\n        [\n            {validationValue:\"\", value: \"000004\", columnName: \"uniqueID\", attrType: \"hidden\", class: \"default\"},\n            {\n                validationValue:\"\",\n                value: \"https://secure.img1-fg.wfcdn.com/im/09257425/resize-h800-w800%5Ecompr-r85/9445/94458967/Besmira+Square+Pillow+Cover.jpg\",\n                columnName: \"ReferenceImage\",\n                attrType: \"standard\",\n                class: \"default\"\n            },\n            {validationValue:\"\", value: \"sof-121-114\", columnName: \"PartNumber\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina\", columnName: \"ProductGroup\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Rosina classic convertible sofa\", columnName: \"ProductName\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofas\", columnName: \"Class\", attrType: \"standard\", class: \"default\"},\n            {validationValue:\"\", value: \"Sofa\", columnName: \"ProductType\", attrType: \"standard\", class: \"default\"},\n\n            {validationValue:\"\", value: `33'' H x 74'' W x 29'' D`, columnName: \"Overall\", attrType: \"user-gen\", class: \"sofa\"},\n\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallDepth\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallHeight\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `42\"`, columnName: \"OverallLength\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", value: `\"21\" H x 77\" W x 22\" D\"`, columnName: \"Seat\", attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ArmHeightFloorToArm\", value: `25\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"BackHeightSeatToTopOfBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"FullyReclinedDepthFrontToBack\", value: `11\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"LegHeightTopToBottom\", value: `5.63\"`, attrType: \"user-gen\", class: \"sofa\"},\n            {validationValue:\"\", columnName: \"ClearanceFromFloorToBottomOfSofa\",value: `3\"`,  attrType: \"user-gen\", class: \"sofa\"},\n        ]\n\n    ];\n};\n\nexport let catmanData = new ProductsData();","import * as React from \"react\";\n\n//Configuration data:\n\nimport {iDataGridItem} from \"../../../_catman-data-types\";\nimport {toolTipContent} from \"../../tool-tip-content/content-tool-tips\";\nimport {CatmanIcon} from \"../../../svg/icons/icons\";\nimport AppButton from \"../../../view-components/button/app-button\";\n\n//icons and illustrations\nimport tempChart from \"../../../images/SVG/done-pie-chart.svg\"\nimport {StandardTextInput} from \"../../../view-components/text-input/standard-text-input\";\n\ninterface iPROPS  {\n    uniqueID: string;\n    productData : iDataGridItem[][];\n    closeSingleProduct : Function;\n}\n\ninterface iSTATE{\n    editMode : boolean;\n}\n\nexport class CatalogSingleProduct extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n        this.state = {\n            editMode : false\n        };\n        this.productData = this.singleProductData(this.props.uniqueID);\n    }\n    productData : iDataGridItem[];\n\n    singleProductData = (uniqueID : string):iDataGridItem[]=>{\n        let product : iDataGridItem[] = [{\n            validationValue : \"\",\n            value : \"string\",\n            columnName : \"string\",\n            attrType : \"user-gen\",\n            class : \"default\"\n        }];\n        for(let i=0; i < this.props.productData.length; i++){\n            for(let j=0; j < this.props.productData[i].length; j++){\n                if( this.props.productData[i][j].columnName === \"uniqueID\" && this.props.productData[i][j].value === uniqueID){\n                    product = this.props.productData[i];\n                }\n            }\n        }\n\n        return product;\n    };\n\n    getAttribute(name : string){\n        for(let i = 0; i < this.productData.length; i++){\n            if(this.productData[i].columnName === name){\n                return this.productData[i].value;\n\n            }\n        }\n    }\n\n    manageEditMode(){\n        this.setState({editMode : !this.state.editMode})\n    }\n\n    getDataArea(){\n\n        if(this.state.editMode === false){\n            return(\n                <div className=\"content-area\">\n                    <div className=\"single-prod-dash-area\">\n                        <div className=\"image-thumb\">\n                            <img className=\"preview-image\" src={'https://secure.img1-fg.wfcdn.com/im/46577228/resize-h800-w800%5Ecompr-r85/8736/87366205/Fallinerlea+Indoor/Outdoor+Throw+Pilow.jpg'}/>\n                            <div className=\"data-header\">\n                                <div className=\"data-chunk data-section-readonly part-number  \">\n                                    <h1 className=\"data-value \">\n                                        109-thr-pil-1098a\n                                    </h1>\n                                    <p className=\"tiny-label\">Besmira Square Pillow Cover (Set of 2)</p>\n                                </div>\n                                <div className=\"data-chunk data-section-readonly\">\n                                    <p className=\"tiny-label\">Product Type: </p>\n                                    <div className=\"data-value\">\n                                        Pillow\n                                    </div>\n                                </div>\n                                <div className=\"data-chunk data-section-readonly\">\n                                    <p className=\"tiny-label\">Source: </p>\n                                    <div className=\"data-value\">\n                                        M1-123-111\n                                    </div>\n                                </div>\n                                <div className=\"data-chunk data-section-readonly\">\n                                    <p className=\"tiny-label\">Manufacturer Contact: </p>\n                                    <div className=\"data-value\">\n                                        1-(212)-331-3000 ext 45\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                        <div className=\"single-general-data\">\n                            <img className=\"temp-chart\" src={tempChart} />\n                        </div>\n                    </div>\n\n                    <div className=\"product-card\">\n\n                        <h3>Weight & Dimensions</h3>\n                        <div className=\"data-container\">\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Overall</div>\n                                <div className={\"data-value\"}>20'' H x 20'' W x 5'' D </div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Height</div>\n                                <div className={\"data-value\"}>3.5 lb.</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Width </div>\n                                <div className={\"data-value\"}>20''</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Depth </div>\n                                <div className={\"data-value\"}>5''</div>\n                            </div>\n                        </div>\n                        <AppButton\n                            classes={\"hi-contrast primary\"}\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"edit\"\n                            OnClick={()=>this.manageEditMode()}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.singleProductSwitchToEditMode()}\n                            toolTipTimeOutInMS={10000}\n                            tooltipXOffset={0}\n                            tooltipYOffset={20}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName={`icon-edit`}\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                    </div>\n\n                    <div className=\"product-card\">\n                        <h3>Material</h3>\n                        <div className=\"data-container\">\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Outer Material</div>\n                                <div className={\"data-value\"}>Polyester/Polyester blend</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Outer Material Details</div>\n                                <div className={\"data-value\"}>Polyester/Polyester blend</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Insert Included </div>\n                                <div className={\"data-value\"}>Yes</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Fill Material </div>\n                                <div className={\"data-value\"}>Polyester/Polyfill</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Insert Included? </div>\n                                <div className={\"data-value\"}>No</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Inner Material Details </div>\n                                <div className={\"data-value\"}>Felt</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Reverse Material </div>\n                                <div className={\"data-value\"}>Imitation Velvet</div>\n                            </div>\n                        </div>\n                        <footer>\n                            <AppButton\n                                classes={\"hi-contrast primary\"}\n                                buttonType={\"secondary-action\"}\n                                buttonLabel=\"edit\"\n                                OnClick={()=>this.manageEditMode()}\n                                tooltipType=\"custom\"\n                                tooltip={toolTipContent.singleProductSwitchToEditMode()}\n                                toolTipTimeOutInMS={10000}\n                                tooltipXOffset={0}\n                                tooltipYOffset={20}\n                                iconLeft={\n                                    <CatmanIcon\n                                        iconName={`icon-edit`}\n                                        classes=\" \"\n                                        height=\"100%\"\n                                        width=\"100%\"\n                                    />\n                                }\n                            />\n                        </footer>\n                    </div>\n\n                    <div className=\"product-card\">\n                        <h3>Shipping</h3>\n                        <div className=\"data-container\">\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Number of Pieces Included</div>\n                                <div className={\"data-value\"}>2</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Pieces Included</div>\n                                <div className={\"data-value\"}>2 Pillow cases </div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Double Cap? </div>\n                                <div className={\"data-value\"}>Yes</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Reverse Cap?  </div>\n                                <div className={\"data-value\"}>No</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Add-Ons  </div>\n                                <div className={\"data-value\"}>No Decorative Addition</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Storage </div>\n                                <div className={\"data-value\"}>Drawstring Bag</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"product-card\">\n                        <h3>Set Related</h3>\n                        <div className=\"data-container\">\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Number of Cartons</div>\n                                <div className={\"data-value\"}>1</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Warehouses</div>\n                                <div className={\"data-value\"}>Dockerville, Decatur</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Warehouse Contact Person</div>\n                                <div className={\"data-value\"}>John Trivaliago</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Warehouse Contact Number</div>\n                                <div className={\"data-value\"}>1-(231)-972-1300</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Packing Material </div>\n                                <div className={\"data-value\"}>Dust protector</div>\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <div className={\"tiny-label\"}>Include in package</div>\n                                <div className={\"data-value\"}>Care instructions id 32a</div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            );\n        }else{\n            return(\n                <div className=\"content-area\">\n                    <div className=\"single-prod-dash-area\">\n                        <div className=\"image-thumb\">\n                            <img className=\"preview-image\" src={'https://secure.img1-fg.wfcdn.com/im/46577228/resize-h800-w800%5Ecompr-r85/8736/87366205/Fallinerlea+Indoor/Outdoor+Throw+Pilow.jpg'}/>\n                            <div className=\"data-header\">\n                                <div className=\"data-chunk data-section-readonly part-number  \">\n\n                                    <StandardTextInput\n                                        label={\"Part Number\"}\n                                        currentValue={\"109-thr-pil-1098a\"}\n                                        onChangeAction={()=>{}}\n                                    />\n                                    <StandardTextInput\n                                        label={\"Product Name\"}\n                                        currentValue={\"Besmira Square Pillow Cover (Set of 2)\"}\n                                        onChangeAction={()=>{}}\n                                    />\n                                </div>\n\n                                <div className=\"data-chunk data-section-readonly\">\n                                    <StandardTextInput\n                                        label={\"Product Type:\"}\n                                        currentValue={\"Pillow\"}\n                                        onChangeAction={()=>{}}\n                                    />\n                                </div>\n                                <div className=\"data-chunk data-section-readonly\">\n                                    <StandardTextInput\n                                        label={\"Source\"}\n                                        currentValue={\"M1-123-111\"}\n                                        onChangeAction={()=>{}}\n                                    />\n\n                                </div>\n                                <div className=\"data-chunk data-section-readonly\">\n                                    <StandardTextInput\n                                        label={\"Manufacturer Contact\"}\n                                        currentValue={\"1-(212)-331-3000 ext 45\"}\n                                        onChangeAction={()=>{}}\n                                    />\n                                </div>\n\n                            </div>\n                        </div>\n                        <div className=\"single-general-data\">\n                            <img className=\"temp-chart\" src={tempChart} />\n                        </div>\n                    </div>\n\n                    <div className=\"product-card\">\n                        <h3>Weight & Dimensions</h3>\n                        <div className=\"data-container\">\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Overall\"}\n                                    currentValue={\"20'' H x 20'' W x 5'' D\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Height\"}\n                                    currentValue={\"3.5 lb.\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Width\"}\n                                    currentValue={\"20''\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Depth\"}\n                                    currentValue={\"5''\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"product-card\">\n                        <h3>Material</h3>\n                        <div className=\"data-container\">\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Outer Material\"}\n                                    currentValue={\"Polyester/Polyester blend\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Outer Material Details\"}\n                                    currentValue={\"Polyester/Polyester blend\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Insert Included\"}\n                                    currentValue={\"Yes\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n\n\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Fill Material\"}\n                                    currentValue={\"Polyester/Polyfill\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Insert Included?\"}\n                                    currentValue={\"No\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Inner Material Details\"}\n                                    currentValue={\"Felt\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Reverse Material\"}\n                                    currentValue={\"Imitation Velvet\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"product-card\">\n                        <h3>Shipping</h3>\n                        <div className=\"data-container\">\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Number of Pieces Included\"}\n                                    currentValue={\"2\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Pieces Included\"}\n                                    currentValue={\"2 Pillow cases\"}\n                                    onChangeAction={()=>{}}\n                                />\n\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Double Cap?\"}\n                                    currentValue={\"Yes\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Reverse Cap?\"}\n                                    currentValue={\"No\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Add-Ons\"}\n                                    currentValue={\"Add-Ons\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Storage\"}\n                                    currentValue={\"Drawstring Bag\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"product-card\">\n                        <h3>Set Related</h3>\n                        <div className=\"data-container\">\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Number of Cartons\"}\n                                    currentValue={\"1\"}\n                                    onChangeAction={()=>{}}\n                                />\n\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Warehouses\"}\n                                    currentValue={\"Dockerville, Decatur\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Warehouse Contact Person\"}\n                                    currentValue={\"John Trivaliago\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Warehouse Contact Number\"}\n                                    currentValue={\"1-(231)-972-1300\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Packing Material\"}\n                                    currentValue={\"Dust protector\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n                            <div className=\"data-section-readonly\">\n                                <StandardTextInput\n                                    label={\"Include in package\"}\n                                    currentValue={\"Care instructions id 32a\"}\n                                    onChangeAction={()=>{}}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            );\n        }\n\n    }\n\n    getProductPage(){\n        let myProduct = this.singleProductData(this.props.uniqueID);\n\n        let editLabel = (valueCheck : boolean)=>{\n            if(valueCheck === false){\n                return \"Edit Mode\"\n            }else{\n                return \"Read Mode\"\n            }\n        };\n\n        let editIcon = (valueCheck : boolean)=>{\n            if(valueCheck == false){\n                return \"icon-edit\"\n            }else{\n                return \"icon-read-mode\"\n            }\n        };\n\n        let modeToolTip = (valueCheck : boolean) =>{\n            if(valueCheck == false){\n                return toolTipContent.singleProductSwitchToEditMode();\n            }else{\n                return toolTipContent.singleProductSwitchToReadMode();\n            }\n        };\n\n        let introArea = (\n            <div className=\"single-product-view\">\n                <div className=\"single-prod-menu\">\n                    <div>\n                        <AppButton\n                            buttonType=\"nav-link\"\n                            classes=\"single-product-back\"\n                            buttonLabel={\"Back\"}\n                            navPath={`/catalog/spreadsheet`}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.goBackToSpreadsheet()}\n                            OnClick={()=>this.props.closeSingleProduct()}\n                            iconLeft={(\n                                <CatmanIcon\n                                    iconName=\"go-back-arrow\"\n                                    width=\"1rem\"\n                                    height=\"100%\"\n                                />\n                            )}\n                        />\n                    </div>\n                    <AppButton\n                        classes={\"hi-contrast primary\"}\n                        buttonType={\"secondary-action\"}\n                        buttonLabel={editLabel(this.state.editMode)}\n                        OnClick={()=>this.manageEditMode()}\n                        tooltipType=\"custom\"\n                        tooltip={modeToolTip(this.state.editMode)}\n                        toolTipTimeOutInMS={10000}\n                        tooltipXOffset={0}\n                        tooltipYOffset={20}\n                        iconLeft={\n                            <CatmanIcon\n                                iconName={`${editIcon(this.state.editMode)}`}\n                                classes=\" \"\n                                height=\"100%\"\n                                width=\"100%\"\n                            />\n                        }\n                    />\n                    <div className=\"menu-area\">\n\n                        <ul>\n                            <li>General Info</li>\n                            <li>Weight & Dimensions</li>\n                            <li>Material</li>\n                            <li>Set Related</li>\n                            <li>Shipping</li>\n                            <li>Romance Copy</li>\n                            <li>Notes</li>\n                        </ul>\n                        <ul>\n                            <li>Variants Group</li>\n                            <li>Related Products</li>\n                        </ul>\n                        <ul>\n                            <li>Pricing</li>\n                            <li>other Integrations</li>\n                            <li>Another Integration</li>\n                        </ul>\n\n                    </div>\n                </div>\n                <div className=\"spacer\"></div>\n\n                {this.getDataArea()}\n            </div>\n        );\n\n        return(<>{introArea}</>)\n    }\n\n\n    render(){\n        return (\n            <>\n                {this.getProductPage()}\n            </>\n        )\n    }\n}\n","import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport {StandardTextInput} from \"../text-input/standard-text-input\";\nimport AppButton from \"../button/app-button\";\nimport {toolTipContent} from \"../../views/tool-tip-content/content-tool-tips\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport {TitleArea} from \"../title-area/title-area\";\n\n\n\ninterface iSTATE{\n    currentStep : number;\n}\n\nexport interface iWizardStep{\n    titleHeader : string;\n    instructionText : string;\n    panel : ReactElement;\n    winCondition : boolean;\n}\n\ninterface iPROPS {\n    stepTitle : string;\n    stepSubTitle : string;\n    wizardButtons : ReactElement;\n    sentenceInputs : ReactElement;\n    classes? : string;\n}\n\n\nexport class Wizard extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n        this.state = {\n            currentStep : 0\n        }\n    }\n\n    getWizard(){\n        return (\n            <div className={`wizard-content ${this.props.classes}`}>\n\n                <TitleArea\n                    mainTitle={this.props.stepTitle}\n                    subTitle={this.props.stepSubTitle}\n                    titleType=\"subtitle-below\"\n                />\n                <div className={\"interaction-area\"}>\n                    <div className=\"vert-center-area\">\n                        {this.props.sentenceInputs}\n                    </div>\n                    <div className=\"footer-btn-bar catman-footer\">\n                        {this.props.wizardButtons}\n                    </div>\n                </div>\n            </div>\n            );\n\n    }\n\n    render(){\n        return (<>{this.getWizard()}</>)\n    }\n}","import * as React from \"react\";\nimport {iWizardStep, Wizard} from \"../../../view-components/wizard/wizard\";\nimport {ReactElement} from \"react\";\nimport {toolTipContent} from \"../../tool-tip-content/content-tool-tips\";\nimport {CatmanIcon} from \"../../../svg/icons/icons\";\nimport AppButton from \"../../../view-components/button/app-button\";\nimport {dataManagerMain} from \"../../../index\";\nimport {iDataGridItem} from \"../../../_catman-data-types\";\nimport {StandardTextInput} from \"../../../view-components/text-input/standard-text-input\";\nimport {DataGrid} from \"../../../view-components/data-grid/data-grid\";\nimport {DataGridWithEditDrawer} from \"../../../view-components/data-grid/data-grid-with-edit-drawer\";\n\ninterface iPROPS{\n    addAction : Function\n    selectedCheckBoxes? : number[];\n    groups : string[];\n    manageModal : Function;\n}\n\ntype addVariantWizardNav = \"closed\" | \"start\" | \"staging-area\" | \"upload-3\";\n\ninterface iSTATE{\n    wizardPanel : addVariantWizardNav;\n}\n\nexport class AddVariantsWizard extends React.Component<iPROPS, iSTATE>{\n\n    constructor(props:iPROPS) {\n        super(props);\n        this.state={\n            wizardPanel : \"start\"\n        }\n    }\n    stagingAreaProducts : iDataGridItem[][] = [];\n    numberOfVariants = 1;\n\n    addVariantsStaging(){\n        console.log(\"selected checkboxes: \", this.props.selectedCheckBoxes);\n        console.log(\"selected checkboxes: \", this.props.selectedCheckBoxes);\n        let newItems : iDataGridItem[][] = [];\n        let newItem : iDataGridItem[] = [];\n\n        if(this.props.selectedCheckBoxes !== undefined){\n            if(this.props.selectedCheckBoxes.length === 1){\n                newItem = JSON.parse(JSON.stringify(dataManagerMain.productData[ this.props.selectedCheckBoxes[0]]) );\n\n                for(let i=0; i < this.numberOfVariants; i++){\n                    newItems.push( JSON.parse(JSON.stringify(newItem)) );\n                }\n                this.stagingAreaProducts = newItems;\n\n\n            }else{\n\n            }\n        }\n\n        return newItems;\n        console.log(\"added variant\",dataManagerMain.productData);\n       // this.props.manageModal();\n    }\n\n    acceptVariants(){\n        if(this.props.selectedCheckBoxes != null){\n            dataManagerMain.productData.splice(this.props.selectedCheckBoxes[0], 0,...this.stagingAreaProducts);\n        }\n        this.props.manageModal();\n    }\n\n    getInputValue = (row:number, cell:number, value:string )=>{\n        console.log(\"input value\", row, \" \", cell, \" \", value);\n        this.numberOfVariants = parseInt(value);\n    };\n\n    wizardNavigation(panelName : addVariantWizardNav){\n        this.setState({wizardPanel : panelName});\n        switch (panelName) {\n            case \"staging-area\":\n                this.addVariantsStaging();\n                break;\n        }\n    }\n\n    manageModal(){\n        if(this.props.manageModal !== undefined){\n            this.props.manageModal();\n        }\n    }\n\n    elements(){\n        switch (this.state.wizardPanel) {\n            case \"start\":\n                const startButtons = (\n                    <>\n                        <AppButton\n                            buttonType=\"secondary-action\"\n                            buttonLabel=\"Cancel\"\n                            OnClick={ ()=>this.manageModal() }\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.closeModal()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"cancel\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Continue\"\n                            OnClick={()=>this.wizardNavigation(\"staging-area\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.continueWizard()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"continue\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                    </>\n                );\n\n                const startSentences = (\n                    <div className=\"sentence-input\">\n                        <p>Add</p>\n                        <StandardTextInput\n                            controlType=\"no-label\"\n                            label={\"Number of variants\"}\n                            onChangeAction={this.getInputValue}\n                            currentValue={\"1\"}\n                        />\n                        <p>New blank product stubs as variants: </p>\n\n                    </div>\n                );\n                return(\n                    <Wizard\n                        stepTitle={\"Add Products Variants\"}\n                        stepSubTitle={\"Variants can be used to quickly set up different colors and sizes of your products.\"}\n                        wizardButtons={startButtons}\n                        sentenceInputs={startSentences}\n                    />\n                );\n            case \"staging-area\":\n                const stagingButtons = (\n                    <>\n                        <AppButton\n                            buttonType=\"secondary-action\"\n                            buttonLabel=\"Back\"\n                            OnClick={ ()=>this.wizardNavigation(\"start\") }\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.goBackWizard()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"cancel\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            buttonType=\"secondary-action\"\n                            buttonLabel=\"Delete Selected\"\n                            OnClick={ ()=>this.wizardNavigation(\"start\") }\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerDelete()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-delete\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Confirm & Add to Catalog\"\n                            OnClick={()=>this.acceptVariants()}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.insertFromStagingArea()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-add\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                    </>\n                );\n\n                const bla = (\n                    <DataGrid\n                        data={this.stagingAreaProducts}\n                        manageParentViews={()=>{}}\n                        columnsData={dataManagerMain.getProductColumns()}\n                        addAction={()=>{}}\n                        hasDetailsActionButton={true}\n                    />\n\n                );\n\n                let stagingSentences = (\n                    <DataGridWithEditDrawer\n                        gridData={this.stagingAreaProducts}\n                        columnsData={dataManagerMain.getProductColumns()}\n                        dataManager={dataManagerMain}\n                        targetDataSet={\"custom-data\"}\n                        gridHasDetailsButton={false}\n                    />\n                );\n                return(<Wizard\n                    stepTitle={\"Confirm Variants\"}\n                    stepSubTitle={\"Verify and make changes before adding new product variants to your catalog\"}\n                    wizardButtons={stagingButtons}\n                    sentenceInputs={stagingSentences}\n                    classes=\"expand-size\"\n                />)\n        }\n    }\n\n    render(){\n        return(this.elements())\n    }\n}\n\n","import * as React from \"react\";\nimport {iWizardStep} from \"../../../view-components/wizard/wizard\";\nimport {ReactElement} from \"react\";\nimport {toolTipContent} from \"../../tool-tip-content/content-tool-tips\";\nimport {CatmanIcon} from \"../../../svg/icons/icons\";\nimport AppButton from \"../../../view-components/button/app-button\";\nimport {DividerLine} from \"../../../view-components/divider-line/divider-line\";\nimport {TextInput} from \"../../../view-components/text-input/text-input\";\nimport {Illustration} from \"../../../svg/illustrations/illustrations\";\nimport {dataManagerMain} from \"../../../index\";\nimport {iDataGridItem} from \"../../../_catman-data-types\";\nimport {RefObject} from \"react\";\nimport {StandardTextInput} from \"../../../view-components/text-input/standard-text-input\";\n\ninterface iPROPS{\n    addAction : Function\n    selectedCheckBoxes? : number[];\n    groups : string[];\n    manageModal : Function;\n}\n\ntype productGroupNavDT = \"closed\" | \"start\" | \"staging-area\" | \"upload-3\";\n\ninterface iSTATE{\n    wizardPanel : productGroupNavDT\n}\n\nexport class CreateProductGroupWizard extends React.Component<iPROPS, iSTATE>{\n\n    constructor(props:iPROPS) {\n        super(props);\n        this.state={\n            wizardPanel : \"start\"\n        }\n    }\n\n    groupNameValue : string = \"\";\n\n    groupNameRef:RefObject<StandardTextInput> = React.createRef<StandardTextInput>();\n\n    createVariantGroup(){\n\n        if(this.props.selectedCheckBoxes != null){\n            for(let i=0; i < this.props.selectedCheckBoxes.length; i++){\n                let currentCheckIndex : number = this.props.selectedCheckBoxes[i];\n                for(let j=0; j < dataManagerMain.productData[currentCheckIndex].length; j++){\n                    if(dataManagerMain.productData[currentCheckIndex][j].columnName === \"ProductGroup\" ){\n                        dataManagerMain.productData[currentCheckIndex][j].value = this.groupNameValue;\n                    }\n                }\n            }\n        }\n        console.log(dataManagerMain.productData);\n\n        this.props.manageModal();\n    }\n\n    getInputValue = (row:number, cell:number, value:string )=>{\n         console.log(\"input value\", row, \" \", cell, \" \", value);\n        this.groupNameValue = value;\n    };\n\n    wizardNavigation(panelName : productGroupNavDT){\n        this.setState({wizardPanel : panelName})\n    }\n\n    element(){\n        switch (this.state.wizardPanel) {\n            case \"closed\":\n                return(<></>);\n            case \"start\":\n                return(\n                    <div className=\"wizard-content\">\n                        <h3>Create Product Group from Selection</h3>\n                        <div className={\"interaction-area\"}>\n                            <p>Add</p>\n                            <StandardTextInput\n                                label={\"Variant Group Name\"}\n                                currentValue={\"\"}\n                                onChangeAction={this.getInputValue}\n                                row={0}\n                                cell={0}\n                            />\n                            <p>Name Product Group: </p>\n\n                            <div className=\"footer-btn-bar catman-footer\">\n                                <AppButton\n                                    buttonType=\"secondary-action\"\n                                    buttonLabel=\"Cancel\"\n                                    OnClick={ ()=>{} }\n                                    tooltipType=\"custom\"\n                                    tooltip={toolTipContent.footerCancel()}\n                                    toolTipTimeOutInMS={10000}\n                                    iconLeft={\n                                        <CatmanIcon\n                                            iconName=\"cancel\"\n                                            classes=\" \"\n                                            height=\"100%\"\n                                            width=\"100%\"\n                                        />\n                                    }\n                                />\n\n                                <AppButton\n                                    buttonType={\"secondary-action\"}\n                                    buttonLabel=\"Continue\"\n                                    OnClick={()=>this.wizardNavigation(\"staging-area\")}\n                                    tooltipType=\"custom\"\n                                    tooltip={toolTipContent.footerDelete()}\n                                    toolTipTimeOutInMS={10000}\n                                    iconLeft={\n                                        <CatmanIcon\n                                            iconName=\"icon-delete\"\n                                            classes=\" \"\n                                            height=\"100%\"\n                                            width=\"100%\"\n                                        />\n                                    }\n                                />\n\n                            </div>\n                        </div>\n                    </div>\n                );\n            case \"staging-area\":\n                return(<>\n                    <div className=\"wizard-content\">\n                        <h3 className=\"true-header\">This is Your new Product Group </h3>\n                        <div className=\"interaction-area\">\n                            <p>Add</p>\n                            <StandardTextInput\n                                label={\"Variant Group Name\"}\n                                currentValue={\"\"}\n                                onChangeAction={this.getInputValue}\n                                row={0}\n                                cell={0}\n                            />\n                            <p>Name Product Group: </p>\n                            <AppButton\n                                buttonType={\"secondary-action\"}\n                                buttonLabel=\"Go\"\n                                OnClick={()=>this.createVariantGroup()}\n                                tooltipType=\"custom\"\n                                tooltip={toolTipContent.addBlankStubs()}\n                                toolTipTimeOutInMS={10000}\n                                tooltipXOffset={0}\n                                tooltipYOffset={20}\n                                iconLeft={\n                                    <CatmanIcon\n                                        iconName=\"icon-add-invert\"\n                                        classes=\"reverse\"\n                                        height=\"100%\"\n                                        width=\"100%\"\n                                    />\n                                }\n                            />\n\n                            <div className=\"footer-btn-bar catman-footer\">\n                                <AppButton\n                                    buttonType={\"secondary-action\"}\n                                    buttonLabel=\"Back\"\n                                    OnClick={()=>this.wizardNavigation(\"start\")}\n                                    tooltipType=\"custom\"\n                                    tooltip={toolTipContent.footerCancel()}\n                                    toolTipTimeOutInMS={10000}\n                                    iconLeft={\n                                        <CatmanIcon\n                                            iconName=\"cancel\"\n                                            classes=\" \"\n                                            height=\"100%\"\n                                            width=\"100%\"\n                                        />\n                                    }\n                                />\n                                <AppButton\n                                    buttonType={\"secondary-action\"}\n                                    buttonLabel=\"Confirm & Add\"\n                                    OnClick={()=>this.createVariantGroup()}\n                                    tooltipType=\"custom\"\n                                    tooltip={toolTipContent.footerDelete()}\n                                    toolTipTimeOutInMS={10000}\n                                    iconLeft={\n                                        <CatmanIcon\n                                            iconName=\"icon-delete\"\n                                            classes=\" \"\n                                            height=\"100%\"\n                                            width=\"100%\"\n                                        />\n                                    }\n                                />\n                            </div>\n                        </div>\n\n\n                    </div>\n\n                </>)\n        }\n    }\n\n    render(){\n        return(this.element())\n    }\n}\n\n// export let uploadWizard : iWizardStep[] = [\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard  wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     }\n// ];","import * as React from \"react\";\nimport {Navigation} from \"../../../view-components/list-menu/intra-app-navigation\";\nimport {MainHeaderArea} from \"../../_common/main-header-area/main-header-area\";\n\n//Configuration data:\nimport {mainNavConfig} from \"../../_catman-configuration/common-app-configuration\";\nimport {CatmanIcon} from \"../../../svg/icons/icons\";\nimport {ToolTipContent} from \"../../../view-components/heru-tool-tip/tool-tip-content\";\nimport {DataGrid, selectionObject} from \"../../../view-components/data-grid/data-grid\";\nimport {catmanData} from \"../../../_sample-data/products-data\";\nimport {TitleArea} from \"../../../view-components/title-area/title-area\";\nimport {Route, RouteComponentProps, Switch, useRouteMatch} from \"react-router-dom\";\nimport StickyThing from \"../../../view-components/sticky-panel/sticky-panel\";\nimport {ReactElement} from \"react\";\nimport {iDataGridItem} from \"../../../_catman-data-types\";\nimport {toolTipContent} from \"../../tool-tip-content/content-tool-tips\";\nimport AppButton from \"../../../view-components/button/app-button\";\nimport {iColumn} from \"../../../_catman-data-types\";\nimport {CatalogSingleProduct} from \"./single-product-view\";\nimport {TextInput} from \"../../../view-components/text-input/text-input\";\n\nimport {DataManager, dataSetType, iUpdateSet} from \"../../../data-components/data-manager/data-manager\";\nimport {ModalView} from \"../../../view-components/modal/modal\";\nimport {AddVariantsWizard} from \"../../wizards/create-product-group/add-variants-wizard\";\nimport {dataManagerMain} from \"../../../index\";\n\nimport {CreateProductGroupWizard} from \"../../wizards/create-product-group/create-product-group-wizard\";\nimport {DataGridWithEditDrawer} from \"../../../view-components/data-grid/data-grid-with-edit-drawer\";\n\n\ninterface iPROPS   {\n    message: string;\n    query:string | null;\n    gridData : DataManager;\n    columnsData : DataManager;\n    targetDataSet : dataSetType;\n}\n\nexport type modalStateType = \"closed\" | \"add-to-product-group\" | \"create-product-group\" | \"delete-confirmation\";\n//TODO need to make these types into a definitions file\nexport type focusInputType = { row : number, cell : number, editDrawerOpen : boolean};\n\ninterface iSTATE{\n    productViewOpen : boolean;\n    editDrawerOpen : boolean;\n    editDrawerMaximized : boolean;\n    modalState : modalStateType;\n    footerOpen : boolean;\n    footerMode : \"default\" | \"has-group\" | \"no-group\" | \"multiple-selected\" ;\n    selectionSet : selectionObject[];\n    workingData : iDataGridItem[][];\n    columnsData : iColumn[];\n    focusedInput : focusInputType;\n}\n\nexport class CatalogDetailsView extends React.Component<iPROPS, iSTATE>{\n     constructor(props:iPROPS) {\n         super(props);\n         this.columns = this.props.columnsData.getProductColumns();\n         this.state = {\n             workingData : this.props.gridData.getProductData(),\n             columnsData : this.props.columnsData.getProductColumns(),\n             productViewOpen : false,\n             editDrawerOpen : false,\n             editDrawerMaximized : false,\n             footerOpen : false,\n             footerMode : \"default\",\n             selectionSet : [],\n             modalState : \"closed\",\n             focusedInput : { row:0, cell:0, editDrawerOpen : false}\n         };\n\n         this.workingDataSet = this.props.gridData.getProductData();\n     }\n     workingDataSet : iDataGridItem[][];\n     //just for the fist launch of checkbox editing\n     initialized:boolean = false;\n     dataGridRef = React.createRef<DataGridWithEditDrawer>();\n     editDrawerRef = React.createRef<StickyThing>();\n     editDrawer : ReactElement = (<></>);\n     selectionSet : selectionObject[] = [];\n     columns : iColumn[];\n     //manage selection in the drawer\n     drawerFirstOpen = false;\n     drawerInputsLength = 0;\n     inputsControls: any;\n\n\n    getCheckBoxesSelection(){\n        if(this.dataGridRef.current !== null && this.dataGridRef.current !== undefined){\n            return this.dataGridRef.current.getCheckedRows();\n        }\n    }\n\n     closeSingleProductEdit = ()=>{\n        window.history.back();\n    };\n\n     getProductViewDrawer( ){\n         if(this.props.query != \"none\" && this.props.query != null && this.props.query != undefined ){\n\n             return(\n                 <StickyThing\n                     enterFromThisSide=\"right\"\n                     lastResortClasses={\"product-view\"}\n                     animateIn={true}\n                     heightIncludeUnits=\"100vh\"\n                     widthIncludeUnits={\"100vw\"}\n                     stickyOpen={true}\n                     bgColor={\"#CECECE\"}\n                     doAnimation={true}\n                 >\n                    <CatalogSingleProduct\n                        uniqueID={this.props.query}\n                        productData={this.state.workingData}\n                        closeSingleProduct={this.closeSingleProductEdit}\n                    />\n\n                 </StickyThing>\n             )\n         }\n     }\n\n     getColumnLabel(colName : string) : string{\n         //utility method for getting column data obj from\n         let columnLabel = \"\";\n         for(let i = 0; i < this.columns.length; i++){\n             if(this.columns[i].columnName === colName){\n                 columnLabel = this.columns[i].columnLabel;\n             }\n         }\n         return columnLabel;\n     }\n\n     updateValues=(row : number, cell:number, value:string, colName : string)=>{\n         if(this.dataGridRef.current != null && this.dataGridRef.current != undefined ){\n             this.selectionSet = this.dataGridRef.current.selectionSet;\n             console.log(\"cat details view selection set: \", this.selectionSet)\n         }\n         console.log(\"inside drawer\", value, \" col name:\", colName);\n         //the minus 2 is the offset for the extra columns checkbox and edit\n         for(let i =0; i < this.selectionSet.length; i++){\n             if(this.selectionSet[i].columnName === colName){\n                 let myRow = this.selectionSet[i].row-2;\n                 let myCell = this.selectionSet[i].cell-2;\n\n                 //this.workingDataSet[ myRow-2][myCell-2].value = value;\n                 const updateSet : iUpdateSet = { row:myRow ,cell:myCell, newData:value }\n                 //this.props.gridData.setProductData = updateSet\n                 this.props.gridData.setData(\"product-data\", updateSet)\n             }\n\n         }\n\n         //TODO remove all of these .getProductData() and replace with generic version\n         this.setState({workingData : this.props.gridData.getProductData()});\n         console.log( \"working data set:\", this.state.workingData );\n     };\n\n     inputFocusAction=(row : number, cell:number)=>{\n         //console.log(\"row: \", row, \" cell:\", cell);\n         if(this.state.editDrawerOpen === true){\n             this.setState({focusedInput : { row : row, cell : cell, editDrawerOpen: this.state.editDrawerOpen}})\n         }\n     };\n\n     //TODO this should be a generic method\n     shiftFocus(shiftIndex: number){\n\n         console.log(\"shifted focus: \", shiftIndex);\n             let inputs: HTMLCollection = document.getElementsByClassName(\"InputBox\");\n             if(inputs[0] != undefined){\n                 if(shiftIndex === inputs.length-1){\n                     console.log(\"shifted focus on end\");\n                     // @ts-ignore\n                     inputs[0].focus();\n                     // @ts-ignore\n                     inputs[0].select();\n                 }\n         }\n     };\n\n     getEditDrawer():ReactElement{\n\n         if(this.state.editDrawerOpen === false){\n             return(<></>);\n         }\n\n         if(this.dataGridRef.current != null && this.dataGridRef.current != undefined ){\n             this.selectionSet = this.dataGridRef.current.selectionSet;\n            // console.log(\"cat details view selection set: \", this.selectionSet)\n         }\n\n         let inputs : ReactElement[] = [];\n         let selectedItems : iDataGridItem[] = [];\n\n         //Create list of selection items that need inputs (i.e. one input per column)\n        i: for(let i=0; i < this.selectionSet.length; i++){\n           j: for(let j=0; j < selectedItems.length; j++){\n                if(this.selectionSet[i].columnName === selectedItems[j].columnName){\n                    continue i;\n                }\n            }\n                 let row = this.selectionSet[i].row;\n                 let cell = this.selectionSet[i].cell;\n                 //TODO this needs to be genericized\n                 //let productDataItem = catmanData.productData[row-2][cell-2];\n                 let productDataItem = catmanData.productData[row-2][cell-2];\n                 selectedItems.push(productDataItem);\n        }\n\n        //Store number of inputs for later use\n         this.drawerInputsLength = selectedItems.length;\n\n         for( let i=0; i < selectedItems.length; i++){\n             let input = (\n                 <TextInput\n                     row={this.selectionSet[i].row}\n                     cell={this.selectionSet[i].cell}\n                     columnName={this.selectionSet[i].columnName}\n                     label={this.getColumnLabel( selectedItems[i].columnName )}\n                     currentValue={ selectedItems[i].value}\n                     onChangeAction={this.updateValues}\n                     onFocusAction={this.inputFocusAction}\n                     onBlurActions={[ ()=>this.shiftFocus(i) ]}\n                 />\n             );\n             inputs.push(input)\n         }\n\n        let maximize = (valueCheck : boolean)=>{\n             if(valueCheck === true){\n                 return \"maximized\"\n             }else{\n                 return \"catman-edit-default restored\"\n             }\n        };\n\n         let restoreAndMaximizeTooltip = (valueCheck : boolean)=>{\n            if(valueCheck === false){\n                return toolTipContent.maximizeDrawer();\n            }else{\n                return toolTipContent.restoreDrawer();\n            }\n         };\n\n         let restoreAndMaximizeBtnIcon = (valueCheck : boolean)=>{\n             if(valueCheck === false){\n                 return \"icon-maximize\"\n             }else{\n                 return \"icon-restore-btn\"\n             }\n         }\n\n\n         let drawer = (<></>);\n             if(this.state.editDrawerOpen === true){\n                 drawer = (\n                     <>\n                         <StickyThing\n                             ref = {this.editDrawerRef}\n                             enterFromThisSide=\"bottom\"\n                             lastResortClasses={`catman-edit-drawer ${maximize(this.state.editDrawerMaximized)}`}\n                             animateIn={true}\n                             heightIncludeUnits=\"\"\n                             widthIncludeUnits={\"\"}\n                             stickyOpen={true}\n                             bgColor={\"#CECECE\"}\n                             doAnimation={true}\n                             toolBar=\"none\"\n                         >\n                             <div className={\"tool-bar\"}>\n                                 <div></div>\n                                 <div className=\"drawer-controls\">\n                                      <AppButton\n                                         buttonType={\"secondary-action\"}\n                                         buttonLabel=\"\"\n                                         OnClick={()=>this.maximizeEditDrawer()}\n                                         tooltipType=\"custom\"\n                                         tooltip={restoreAndMaximizeTooltip(this.state.editDrawerMaximized)}\n                                         toolTipTimeOutInMS={10000}\n                                         classes=\"tool-bar-btn icon-only-btn\"\n                                         iconLeft={\n                                             <CatmanIcon\n                                                 iconName={`${restoreAndMaximizeBtnIcon(this.state.editDrawerMaximized)}`}\n                                                 classes=\" \"\n                                                 height=\"100%\"\n                                                 width=\"100%\"\n                                             />\n                                         }\n                                     />\n                                     <AppButton\n                                         buttonType={\"secondary-action\"}\n                                         buttonLabel=\"\"\n                                         OnClick={()=>this.closeEditDrawer()}\n                                         tooltipType=\"custom\"\n                                         tooltip={toolTipContent.closeDrawer()}\n                                         toolTipTimeOutInMS={10000}\n                                         classes=\"icon-only-btn\"\n                                         iconLeft={\n                                             <CatmanIcon\n                                                 iconName=\"icon-close\"\n                                                 classes=\" \"\n                                                 height=\"100%\"\n                                                 width=\"100%\"\n                                             />\n                                         }\n                                     />\n\n                                 </div>\n                             </div>\n\n                             <div className=\"drawer-edit-area\">\n                                 {inputs}\n                             </div>\n                         </StickyThing>\n                     </>\n                 );\n             }\n         return drawer;\n     }\n\n     maximizeEditDrawer(){\n         this.setState({editDrawerMaximized : !this.state.editDrawerMaximized})\n     }\n\n     closeEditDrawer(){\n         this.setState({\n             editDrawerOpen : false,\n             editDrawerMaximized : false,\n             focusedInput : {row:0, cell:0, editDrawerOpen:false}\n         });\n         if(this.dataGridRef.current != null && this.dataGridRef.current != undefined){\n             this.dataGridRef.current.clearSelection();\n         }\n         this.drawerFirstOpen = false;\n     }\n\n     openEditDrawer( ){\n         this.drawerFirstOpen = true;\n         this.setState({editDrawerOpen : true});\n     }\n\n     //FOOTER RELATED\n     getFooterMenu(){\n        let footer = (<></>);\n        let buttons = (<></>);\n\n        switch(this.state.footerMode){\n            case \"default\":\n                buttons = (\n                    <div className=\"footer-btn-bar catman-footer\">\n                        <AppButton\n                            classes={\"separate-left\"}\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Edit Selected\"\n                            OnClick={()=>this.switchToEditMode()}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerEditSelection()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-edit\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            classes={\" \"}\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Add Variant\"\n                            OnClick={()=>this.manageModals(\"add-to-product-group\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerAddVariant()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-add\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Clear Selection\"\n                            OnClick={()=>this.footerActions(\"cancel\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.clearSelection()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"clear\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Delete Selected\"\n                            OnClick={()=>this.footerActions(\"cancel\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerDelete()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-delete\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n\n\n                    </div>\n                );\n                break;\n\n            case \"multiple-selected\":\n                buttons = (\n                    <div className=\"footer-btn-bar catman-footer\">\n                        <AppButton\n                            classes={\"\"}\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Edit Selected\"\n                            OnClick={()=>this.switchToEditMode()}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerEditSelection()}\n                            toolTipTimeOutInMS={10000}\n                            tooltipXOffset={0}\n                            tooltipYOffset={20}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-edit\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            classes={\" \"}\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Make Into a Variant Group\"\n                            OnClick={()=>this.manageModals(\"create-product-group\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerCreateVariant()}\n                            toolTipTimeOutInMS={10000}\n                            tooltipXOffset={0}\n                            tooltipYOffset={20}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-add\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Clear Selection\"\n                            OnClick={()=>this.footerActions(\"cancel\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.clearSelection()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"clear\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Delete Selected\"\n                            OnClick={()=>this.footerActions(\"cancel\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerDelete()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-delete\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                    </div>\n                );\n                break;\n\n            case \"has-group\":\n                buttons = (<AppButton\n                    buttonType={\"secondary-action\"}\n                    buttonLabel=\"catalog manager\"\n                    OnClick={()=>this.footerActions(\"cancel\")}\n                    tooltipType=\"custom\"\n                    tooltip={toolTipContent.mainNav()}\n                    toolTipTimeOutInMS={10000}\n                    iconRight={\n                        <CatmanIcon\n                            iconName=\"down-arrow\"\n                            classes=\"ui-icon\"\n                            height=\"100%\"\n                            width=\"100%\"\n                        />\n                    }\n                />)\n        }\n\n        if(this.state.footerOpen === true){\n\n            let buttonBar : ReactElement = (<>\n            </>);\n\n            footer = (\n                <>\n                    <StickyThing\n                        enterFromThisSide=\"bottom\"\n                        lastResortClasses={\"catman-footer-container\"}\n                        animateIn={true}\n                        heightIncludeUnits=\"3.75rem\"\n                        widthIncludeUnits={\"100%\"}\n                        stickyOpen={true}\n                        bgColor={\"rgba(0,0,0,0)\"}\n                        doAnimation={true}\n                    >\n                        {buttons}\n                    </StickyThing>\n                </>\n            );\n        }\n        return footer;\n    }\n\n     footerActions(action : \"cancel\" | \"add-group\" | \"edit\"){\n         switch (action) {\n\n             case \"cancel\":\n                 this.setState({footerOpen : false});\n                 this.initialized = false;\n                 if(this.dataGridRef.current !== null && this.dataGridRef.current !== undefined){\n                     this.dataGridRef.current.clearSelection();\n                 }\n                 break;\n             case \"add-group\":\n\n                 break;\n             case \"edit\":\n                 this.setState({footerOpen : false});\n                 this.initialized = false;\n\n                 break;\n         }\n     }\n\n     addAction(addType:string){\n         console.log(\"added item or items: \", addType );\n         switch (addType) {\n             case \"add-attribute\":\n\n                 return(<></>);\n             case \"add-products\":\n\n                 return(<></>);\n\n\n\n         }\n     }\n\n        //FOOTER ACTIONS\n     switchToEditMode(){\n         if(this.dataGridRef.current !== null && this.dataGridRef.current !== undefined){\n             this.dataGridRef.current.switchToEditMode();\n         }\n     }\n\n     //MODALS modalStateType = \"closed\" | \"add-to-product-group\" | \"create-product-group\" | \"delete-confirmation\";\n    manageModals(modalState : modalStateType){\n         console.log(\"close the dang modal!!!!\", modalState);\n          this.setState({modalState : modalState});\n    }\n\n     getModals(){\n\n         switch(this.state.modalState){\n             case \"add-to-product-group\":\n                 return(\n                 <>\n                     <ModalView\n                         closeModalFunc={()=>this.manageModals(\"closed\")}\n                         modalTitle=\"\"\n                     >\n                        <AddVariantsWizard\n                            addAction={dataManagerMain.addToProductGroup}\n                            groups={dataManagerMain.getGroups()}\n                            selectedCheckBoxes={this.getCheckBoxesSelection()}\n                            manageModal = {()=>this.manageModals(\"closed\")}\n                        />\n\n                     </ModalView>\n                 </>\n\n                     );\n             case \"create-product-group\":\n                 return(\n                     <>\n                         <ModalView\n                             closeModalFunc={()=>this.manageModals(\"closed\")}\n                             modalTitle=\"\"\n                         >\n                             <CreateProductGroupWizard\n                                 addAction={dataManagerMain.addToProductGroup}\n                                 groups={dataManagerMain.getGroups()}\n                                 selectedCheckBoxes={this.getCheckBoxesSelection()}\n                                 manageModal = {()=>this.manageModals(\"closed\")}\n                             />\n\n                         </ModalView>\n                     </>\n\n                  )\n         }\n     }\n\n     //SELECTION ACTIONS from grid\n    openFooter = ()=>\n    {\n\n        if(this.dataGridRef.current != undefined)\n        {\n            let checkedCount : number = 0;\n\n\n            if(this.dataGridRef.current.getCheckedRows() != undefined && this.dataGridRef.current != undefined ){\n                // @ts-ignore\n                checkedCount = this.dataGridRef.current.getCheckedRows().length;\n            }\n            if\n            (checkedCount > 0)\n            {\n                console.log(\"checked from selection Actions: \", checkedCount);\n                this.setState({footerOpen : true});\n            }\n            else if\n            (checkedCount === 0)\n            {\n                this.setState({footerOpen : false});\n            }\n        }\n    };\n\n     //RENDERING AND PORTALS\n\n\n    render(){\n         return (\n             <>\n                 <DataGridWithEditDrawer\n                     gridData={dataManagerMain.getProductData()}\n                     columnsData={dataManagerMain.getProductColumns()}\n                     dataManager={dataManagerMain}\n                     targetDataSet={\"product-data\"}\n                     selectionActions={[ this.openFooter ]}\n                     ref={this.dataGridRef}\n                     gridHasDetailsButton={true}\n                 />\n                 {this.getEditDrawer() }\n                 {this.getFooterMenu() }\n                 {this.getProductViewDrawer()}\n                 {this.getModals()}\n                 {/*<button onClick={()=>this.switchToEditMode()}>Switch</button>*/}\n             </>\n         )\n     }\n}\n","import * as React from \"react\";\nimport {Navigation} from \"../../../view-components/list-menu/intra-app-navigation\";\nimport {MainHeaderArea} from \"../../_common/main-header-area/main-header-area\";\n\n//Configuration data:\nimport {mainNavConfig} from \"../../_catman-configuration/common-app-configuration\";\n\ninterface iPROPS {\n    message: string;\n}\n\ninterface iSTATE{\n\n}\n\nexport class CatalogDashboardView extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n    }\n\n    render(){\n        return (\n            <>\n                <MainHeaderArea\n                    addItemAction={()=>{}}\n                    sectionTitle=\"Landing Page\"\n                    mainButtonLabel=\"Add Products\"\n                    navigationElement={<Navigation menuHelpStyle=\"panel\" navElements={mainNavConfig} />}\n                />\n                <h2>Catalog Dashboard</h2>\n                <h3>{this.props.message}</h3>\n            </>\n            )\n    }\n}\n","import React, {ReactElement, useState} from \"react\";\nimport {\n    Switch,\n    Route,\n    Link,\n    useRouteMatch,\n    useParams, useLocation\n} from \"react-router-dom\";\n\nimport {mainNavConfig} from \"../../_catman-configuration/common-app-configuration\";\n\nimport {MainHeaderArea} from \"../../_common/main-header-area/main-header-area\";\nimport {Navigation} from \"../../../view-components/list-menu/intra-app-navigation\";\nimport {CatalogOverviewView} from \"../catalog-overview/catalog-overview-view\";\nimport {CatalogDetailsView} from \"../catalog-details/catalog-details-view\";\nimport {CatalogDashboardView} from \"../catalog-dashboard/catalog-dashboard-view\";\nimport {LandingPageView} from \"../../landing-page/landing-page-view\";\nimport {ToggleMenu} from \"../../../view-components/toggle-menu/toggle-component\";\nimport {CatalogSingleProduct} from \"../catalog-details/single-product-view\";\nimport {catmanData} from \"../../../_sample-data/products-data\";\nimport {dataManagerMain} from \"../../../index\";\n\ninterface iPROPS {\n    message: string;\n}\n\ninterface iSTATE{\n\n}\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport function CatalogLanding() {\n    let match = useRouteMatch();\n\n    //TODO this will manage the grid\n    let manageGridData = ()=>{\n        console.log(\"manage grid data\")\n    };\n\n    return(\n       <>\n           <MainHeaderArea\n               addItemAction={manageGridData}\n               sectionTitle=\"Landing Page\"\n               mainButtonLabel=\"Add Products\"\n               navigationElement={\n                   <Navigation\n                       menuHelpStyle=\"panel\"\n                       navElements={mainNavConfig}\n                   />}\n           />\n\n           <Switch>\n               <Route path={`${match.path}/:bla`}>\n                   <ProductViews />\n               </Route>\n           </Switch>\n       </>\n    )\n}\n\ninterface iProdView{\n\n}\n\nexport function ProductViews(props : iProdView) {\n\n    let { bla } = useParams();\n    let query = useQuery();\n\n    let productID = ()=>{\n      if(query !== null){\n          let q = query.get(\"product\");\n          return(q)\n      }else{\n          return \"none\"\n      }\n    };\n\n    switch(bla){\n        case \"overview\":\n            return (<CatalogOverviewView message=\"this is the overviews page\" />);\n\n        case \"dashboard\":\n            return (<CatalogDashboardView message=\"this is the dashboards view\" />);\n\n        case \"spreadsheet\":\n            return (\n                <CatalogDetailsView\n                    columnsData={dataManagerMain}\n                    gridData={dataManagerMain}\n                    query={productID()}\n                    targetDataSet=\"product-data\"\n                    message={bla}/>)\n    }\n\n    return (<h3>Requested topic ID: {bla}</h3>);\n}\n\n","import * as React from \"react\";\nimport {ReactElement} from \"react\";\n\n//**** This will jut be responsible for\n\ninterface iPROPS{\n    cards : ReactElement;\n    containerClasses?:string;\n}\n\ninterface iSTATE{\n\n}\n\nexport class CardArea extends React.Component<iPROPS, iSTATE>{\n    constructor(props : iPROPS) {\n        super(props);\n    }\n\n    getCardArea(){\n        return (\n            <div className={`card-area ${this.props.containerClasses}`}>\n                {this.props.cards}\n            </div>\n        )\n    }\n\n    render(){\n\n        return (<>{this.getCardArea()}</>)\n    }\n}","import * as React from \"react\";\nimport {mediaObject} from \"../../_sample-data/media-library\";\nimport {ReactElement} from \"react\";\nimport {toolTipContent} from \"../../views/tool-tip-content/content-tool-tips\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport AppButton from \"../button/app-button\";\n\n\ninterface iPROPS{\n    cardType : \"media\" | \"product\";\n    mediaData? : mediaObject[];\n    getDetailsFunctions? : Function;\n    actionToolTip : ReactElement;\n}\n\ninterface iSTATE{\n    selectionSet : number[];\n}\n\nexport class Card extends React.Component<iPROPS, iSTATE>{\n    constructor(props : iPROPS) {\n        super(props);\n        this.state = {\n            selectionSet : []\n        }\n    }\n\n    manageDetails(mediaIndex:number){\n        if(this.props.getDetailsFunctions !== undefined){\n            this.props.getDetailsFunctions(mediaIndex);\n        }\n    }\n\n    getCard( cardTitle : string,\n             thumbImageUrl : string,\n             assignedToTheseProducts : string,\n             mediaResolution : string,\n             shotType : string,\n             index : number\n    ):ReactElement{\n\n        switch(this.props.cardType){\n            case \"media\":\n                return(\n                    <div className=\"card media-card\">\n                        <header>\n                            <div className=\"card-header-menu\">\n                                <div className=\"overflow\">\n                                    <div className=\"name\">{cardTitle}</div>\n                                </div>\n                                <AppButton\n                                    OnClick={()=>{}}\n                                    buttonType=\"transparent-bg\"\n                                    tooltipType=\"custom\"\n                                    tooltip={this.props.actionToolTip}\n                                    classes={` `}\n                                    iconCenter={(\n                                        <CatmanIcon\n                                            iconName={`checkbox-unchecked`}\n                                            width=\"1rem\"\n                                            height=\"100%\"\n                                        />\n                                    )}\n                                />\n                            </div>\n                        </header>\n                        <div\n                            className=\"thumbnail-image\"\n                            style={{backgroundImage : `url(${thumbImageUrl})`}}\n                        >\n                         <div className=\"thumb-type\">{shotType}</div>\n                        </div>\n                        <div className=\"data-area\">\n                                <ul className=\"data\">\n                                    <li>Assigned to <span className=\"emphasize\">{assignedToTheseProducts.length.toString()}</span> </li>\n                                    <li>Media resolution: {mediaResolution} </li>\n                                    <li>date uploaded: June 6 2020</li>\n                                </ul>\n                        </div>\n                        <footer>\n                            <div></div>\n                            <AppButton\n                                OnClick={()=>this.manageDetails(index)}\n                                buttonType=\"transparent-bg\"\n                                tooltipType=\"custom\"\n                                tooltip={this.props.actionToolTip}\n                                classes={` `}\n                                iconCenter={(\n                                    <CatmanIcon\n                                        iconName={`go-arrow`}\n                                        width=\"2rem\"\n                                        height=\"1rem\"\n                                    />\n                                )}\n                            />\n                        </footer>\n                    </div>\n\n                );\n            case \"product\":\n                return(<></>);\n        }\n    }\n\n    getMediaCards(){\n        let cardsCollections : ReactElement[] = [];\n        if(this.props.mediaData !== undefined){\n            for(let i=0; i < this.props.mediaData.length; i++){\n                cardsCollections.push(\n                    this.getCard(\n                        this.props.mediaData[i].mediaName,\n                        this.props.mediaData[i].mediaPath,\n                        this.props.mediaData[i].productAssociations,\n                        this.props.mediaData[i].resolution,\n                        this.props.mediaData[i].shotType,\n                        i\n                    ));\n            }\n        }\n        return cardsCollections;\n    }\n\n\n    render(){\n\n        switch (this.props.cardType) {\n            case \"media\":\n                return (<>{this.getMediaCards()}</>)\n        }\n        return (<></>)\n    }\n}","import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport AppButton from \"../button/app-button\";\n\n\nexport interface iToggleItem{\n    elements : ReactElement[]\n}\n\ninterface iPROPS {\n    buttons: iToggleMenuItem[];\n    containerClasses : string;\n}\n\ninterface iSTATE{\n    menuType : \"nav\";\n    currentActive : number;\n}\n\nexport interface iToggleMenuItem{\n    element : ReactElement;\n    label : string;\n    toggleItemType : \"nav\" | \"static\";\n    function? : Function;\n    icon? : ReactElement;\n    classes? : string;\n    toolTip : ReactElement;\n}\n\nexport class ToggleMenu extends React.Component<iPROPS, iSTATE>{\n    constructor(props : iPROPS) {\n        super(props);\n        this.state = {\n            menuType : \"nav\",\n            currentActive : 0\n        }\n    }\n\n    checkActive(index : number){\n        if (index === this.state.currentActive){\n            return \"active\";\n        }else {\n            return \"\";\n        }\n    }\n\n    actions(index : number){\n        this.setState({currentActive : index});\n\n        if(this.props.buttons[index].function != undefined){\n            // @ts-ignore\n            this.props.buttons[index].function();\n        }\n    }\n\n    createButtonBar():ReactElement{\n        let buttons : ReactElement[] = [];\n\n        for(let i=0; i < this.props.buttons.length; i++){\n             let newButton = (\n                 <AppButton\n                     OnClick={()=>this.actions(i)}\n                     buttonType=\"transparent-bg\"\n                     buttonLabel={this.props.buttons[i].label}\n                     tooltipType=\"custom\"\n                     tooltip={this.props.buttons[i].toolTip}\n                     classes={`${this.checkActive(i)} ${this.props.buttons[i].classes}`}\n                     iconCenter={this.props.buttons[i].icon}\n                 />\n             );\n             buttons.push(newButton);\n        }\n        return <div className=\"button-bar\">{buttons}</div>;\n    }\n\n    render(){\n        return(\n            <div className=\"toggle-container\">\n                {this.createButtonBar()}\n            </div>\n        );\n    }\n}","import React, {ReactElement} from \"react\";\nimport {MainHeaderArea} from \"../_common/main-header-area/main-header-area\";\nimport {Navigation} from \"../../view-components/list-menu/intra-app-navigation\";\nimport {mainNavConfig} from \"../_catman-configuration/common-app-configuration\";\nimport {toolTipContent} from \"../tool-tip-content/content-tool-tips\";\nimport {TitleArea} from \"../../view-components/title-area/title-area\";\nimport {CardArea} from \"../../view-components/cards-area/card-area\";\nimport {Card} from \"../../view-components/card/card\";\nimport {dataManagerMain} from \"../../index\";\nimport StickyThing from \"../../view-components/sticky-panel/sticky-panel\";\nimport {SingleMediaDetailsView} from \"./media-details-view\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport AppButton from \"../../view-components/button/app-button\";\nimport {DataGrid, selectionObject} from \"../../view-components/data-grid/data-grid\";\nimport {iDataGridItem} from \"../../_catman-data-types\";\nimport {DataManager, iUpdateSet} from \"../../data-components/data-manager/data-manager\";\nimport {iColumn} from \"../../_catman-data-types\";\nimport {focusInputType} from \"../catalog-views/catalog-details/catalog-details-view\";\nimport {TextInput} from \"../../view-components/text-input/text-input\";\nimport {dataSetType} from \"../../data-components/data-manager/data-manager\";\nimport {dataAttributeColumns} from \"../../_sample-data/attributes-data-and-columns\";\nimport {DataGridWithEditDrawer} from \"../../view-components/data-grid/data-grid-with-edit-drawer\";\nimport {iToggleMenuItem, ToggleMenu} from \"../../view-components/toggle-menu/toggle-component\";\n\n\ntype viewState = \"cards-view\" | \"grid-view\" | \"mosaic-view\";\n\n\ninterface iPROPS {\n    message?: string;\n    gridData : iDataGridItem[][];\n    columnsData : iColumn[];\n    dataManager : DataManager;\n    targetDataSet : dataSetType;\n}\n\ninterface iSTATE{\n    mediaDetailsOpen : boolean;\n    viewMode : viewState;\n    editDrawerOpen : boolean;\n    workingData : iDataGridItem[][];\n    columnsData : iColumn[];\n    focusedInput : focusInputType;\n    footerOpen : boolean;\n    footerMode : \"default\" | \"has-group\" | \"no-group\" | \"multiple-selected\" ;\n    editDrawerMaximized : boolean;\n}\n\nexport class MediaLibraryView extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n        this.columnDefs = this.props.columnsData;\n        this.state={\n            mediaDetailsOpen : false,\n            viewMode : \"grid-view\",\n            editDrawerOpen : false,\n            //TODO need to adjust data manager\n            columnsData : this.props.columnsData,\n            workingData : this.props.gridData,\n            focusedInput : { row:0, cell:0, editDrawerOpen : false},\n            footerOpen : false,\n            footerMode : \"default\",\n            editDrawerMaximized : false\n        }\n    }\n    selectedMediaIndex : number = 0;\n    dataGridRef = React.createRef<DataGrid>();\n    editDrawerRef = React.createRef<StickyThing>();\n    drawerFirstOpen : boolean = false;\n    //COLUMN DEFINITIONS:\n    columnDefs : iColumn[];\n\n    //just for the fist launch of checkbox editing\n    initialized : boolean = false;\n\n    selectionSet : selectionObject[] = [];\n    drawerInputsLength = 0;\n\n    manageMediaDetailsPage=(mediaIndex : number)=>{\n        console.log(\"mediaIndex\", mediaIndex );\n        this.selectedMediaIndex = mediaIndex;\n        this.setState({mediaDetailsOpen : !this.state.mediaDetailsOpen})\n    };\n\n    manageViewModes(desiredState : viewState){\n        this.setState({viewMode : desiredState});\n    }\n\n    getMediaDetailsView(){\n        if(this.state.mediaDetailsOpen === true){\n            return(\n                <StickyThing\n                    enterFromThisSide=\"right\"\n                    lastResortClasses={\"product-view\"}\n                    animateIn={true}\n                    heightIncludeUnits=\"100vh\"\n                    widthIncludeUnits={\"100vw\"}\n                    stickyOpen={true}\n                    bgColor={\"#CECECE\"}\n                    doAnimation={true}\n                >\n                    <SingleMediaDetailsView\n                        mediaData={dataManagerMain.getMediaObjectData()[this.selectedMediaIndex]}\n                        closeSingleMediaView={()=>this.manageMediaDetailsPage(0)}\n                    />\n                </StickyThing>\n            )\n        }\n    }\n\n    getCardArea() {\n        if (this.state.mediaDetailsOpen === false) {\n            return (<CardArea\n                containerClasses=\"catman-media-cards\"\n                cards={\n                    <Card\n                        cardType=\"media\"\n                        mediaData={dataManagerMain.getMediaObjectData()}\n                        getDetailsFunctions={this.manageMediaDetailsPage}\n                        actionToolTip={toolTipContent.mediaRelatedTooltips(\"media-details\")}\n                    />\n                }\n            />)\n        } else {\n            return (<></>)\n        }\n    }\n\n    getColumnLabel(colName : string) : string{\n        //utility method for getting column data obj from\n        let columnLabel = \"\";\n        for(let i = 0; i < this.columnDefs.length; i++){\n            if(this.columnDefs[i].columnName === colName){\n                columnLabel = this.columnDefs[i].columnLabel;\n            }\n        }\n        return columnLabel;\n    }\n\n    updateValues=(row : number, cell:number, value:string, colName : string)=>{\n        if(this.dataGridRef.current != null && this.dataGridRef.current != undefined ){\n            this.selectionSet = this.dataGridRef.current.selectionSet;\n            console.log(\"cat details view selection set: \", this.selectionSet)\n        }\n        console.log(\"inside drawer\", value, \" col name:\", colName);\n        //the minus 2 is the offset for the extra columns checkbox and edit\n        for(let i =0; i < this.selectionSet.length; i++){\n            if(this.selectionSet[i].columnName === colName){\n                let myRow = this.selectionSet[i].row-2;\n                let myCell = this.selectionSet[i].cell-2;\n\n                //this.workingDataSet[ myRow-2][myCell-2].value = value;\n                const updateSet : iUpdateSet = { row:myRow ,cell:myCell, newData:value };\n                this.props.dataManager.setData(\"media-data\", updateSet);\n            }\n        }\n\n        this.setState({workingData : this.props.dataManager.getProductData()});\n        console.log( \"working data set:\", this.state.workingData );\n    };\n\n    openEditDrawer( ){\n        this.drawerFirstOpen = true;\n        this.setState({editDrawerOpen : true});\n    }\n\n    //DRAWER RELATED\n    maximizeEditDrawer(){\n        this.setState({editDrawerMaximized : !this.state.editDrawerMaximized})\n    }\n\n    closeEditDrawer(){\n        this.setState({\n            editDrawerOpen : false,\n            editDrawerMaximized : false,\n            focusedInput : {row:0, cell:0, editDrawerOpen:false}\n        });\n        if(this.dataGridRef.current != null && this.dataGridRef.current != undefined){\n            this.dataGridRef.current.clearSelection();\n        }\n        this.drawerFirstOpen = false;\n    }\n\n    inputFocusAction=(row : number, cell:number)=>{\n        //console.log(\"row: \", row, \" cell:\", cell);\n        if(this.state.editDrawerOpen === true){\n            this.setState({focusedInput : { row : row, cell : cell, editDrawerOpen: this.state.editDrawerOpen}})\n        }\n    };\n\n    //MANAGE GRID\n    //GRID MANAGEMENT\n\n    conditionClasses(){\n        if(this.state.editDrawerOpen === true){\n            return \"drawer-open\";\n        }\n    }\n\n\n    getGridArea(){\n        return(\n            <DataGridWithEditDrawer\n                gridData={dataManagerMain.getMediaDataForGrid()}\n                columnsData={dataManagerMain.getMediaColumnsForGrid()}\n                dataManager={dataManagerMain}\n                targetDataSet={\"media-data\"}\n                gridHasDetailsButton={true}\n            />\n\n        );\n    }\n\n    getContentArea(){\n        switch (this.state.viewMode) {\n            case \"grid-view\":\n                return this.getGridArea();\n            case \"cards-view\":\n                return this.getCardArea();\n        }\n    }\n\n    getToggleBar(){\n\n        //determine class\n        const selectedClass = (stateName : viewState)=>{\n          if(stateName == this.state.viewMode)\n          {\n              return \"active\";\n          }\n          else\n          {\n              return \"\";\n          }\n        };\n\n        let bla = (\n            <div className=\"button-bar\">\n                <AppButton\n                    OnClick={()=>this.manageViewModes(\"grid-view\")}\n                    buttonType=\"transparent-bg\"\n                    tooltipType=\"custom\"\n                    tooltip={<div>Tooltip</div>}\n                    classes={`${selectedClass(\"grid-view\")}`}\n                    iconCenter={(\n                        <CatmanIcon\n                            iconName={`icon-list-view`}\n                            width=\"1rem\"\n                            height=\"100%\"\n                        />\n                    )}\n                />\n                <AppButton\n                    OnClick={()=>this.manageViewModes(\"cards-view\")}\n                    buttonType=\"transparent-bg\"\n                    tooltipType=\"custom\"\n                    tooltip={toolTipContent.goBackWizard()}\n                    classes={`${selectedClass(\"cards-view\")} `}\n                    iconCenter={(\n                        <CatmanIcon\n                            iconName={`icon-card-view`}\n                            width=\"1rem\"\n                            height=\"100%\"\n                        />\n                    )}\n                />\n                <AppButton\n                    OnClick={()=>this.manageViewModes(\"mosaic-view\")}\n                    buttonType=\"transparent-bg\"\n                    tooltipType=\"custom\"\n                    tooltip={ toolTipContent.goBackWizard()}\n                    classes={`${selectedClass(\"mosaic-view\")} `}\n                    iconCenter={(\n                        <CatmanIcon\n                            iconName={`icon-mosaic-view`}\n                            width=\"1rem\"\n                            height=\"100%\"\n                        />\n                    )}\n                />\n            </div>\n        );\n\n        let buttonBarConfig : iToggleMenuItem[] = [\n            {\n                element : <></>,\n                label : \"\",\n                toggleItemType : \"nav\",\n                function : ()=>this.manageViewModes(\"grid-view\"),\n                icon : (\n                    <CatmanIcon\n                        iconName={`icon-list-view`}\n                        width=\"1rem\"\n                        height=\"100%\"\n                    />\n                ),\n                toolTip : toolTipContent.mediaGridView(),\n                classes : \"\"\n            },\n            {\n                element : <></>,\n                label : \"\",\n                toggleItemType : \"nav\",\n                function : ()=>this.manageViewModes(\"cards-view\"),\n                toolTip : toolTipContent.mediaCardView(),\n                icon : (\n                    <CatmanIcon\n                        iconName={`icon-card-view`}\n                        width=\"1rem\"\n                        height=\"100%\"\n                    />\n                ),\n                classes : \"\"\n            },\n            {\n                element : <></>,\n                label : \"\",\n                toggleItemType : \"nav\",\n                function : ()=>this.manageViewModes(\"mosaic-view\"),\n                toolTip : toolTipContent.goBackWizard(),\n                icon : (\n                    <CatmanIcon\n                        iconName={`icon-mosaic-view`}\n                        width=\"1rem\"\n                        height=\"100%\"\n                    />\n                ),\n                classes : \"\"\n            }\n        ];\n\n        let buttonBar  = (\n            <ToggleMenu\n                buttons={buttonBarConfig}\n                containerClasses=\"view-switcher\"\n            />\n        );\n\n        return buttonBar;\n\n    }\n\n    render(){\n        return(\n            <>\n                <MainHeaderArea\n                    addItemAction={()=>{}}\n                    sectionTitle=\"Media Library\"\n                    mainButtonLabel=\"Add Media\"\n                    navigationElement={<Navigation menuHelpStyle=\"panel\" navElements={mainNavConfig} />}\n                />\n                <div className=\"base-grid-8 menu-area\">\n                    <TitleArea\n                        mainTitle=\"Media Library\"\n                        subTitle=\"Manage media to describe your products\"\n                        titleType=\"subtitle-above\"\n                    />\n                     {this.getToggleBar()}\n                </div>\n\n                {this.getContentArea()}\n                {this.getMediaDetailsView()}\n            </>\n        );\n    }\n}\n","import React from 'react';\nimport './App.scss';\nimport {LandingPageView} from \"./views/landing-page/landing-page-view\";\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport {CatalogOverviewView} from \"./views/catalog-views/catalog-overview/catalog-overview-view\";\nimport ManageAttributesView from \"./views/app-configuration-catman-views/manage-attributes/manage-attributes-view\";\nimport DataConfigManageAttributeGroups from \"./views/app-configuration-catman-views/manage-attribute-groups/data-config-manage-attribute-groups\";\nimport {AttributeGroupsView} from \"./views/app-configuration-catman-views/manage-attribute-groups/manage-attribute-groups-view\";\nimport {ManageAttributeMappingView} from \"./views/app-configuration-catman-views/manage-attribute-mappings/manage-attribute-mapping-view\";\nimport ManageClassesView from \"./views/app-configuration-catman-views/manage-classes/manage-classes-view\";\n\nimport {ToolTip, WindowLevelCapture} from \"./view-components/heru-tool-tip/tool-tip\";\nimport {navSettings} from \"./views/_common/nav-settings\";\nimport {dataManagerMain, win} from \"./index\";\nimport {CatalogLanding } from \"./views/catalog-views/main-catalog/main-catalog\";\nimport {CatalogDetailsView} from \"./views/catalog-views/catalog-details/catalog-details-view\";\nimport {CatalogDashboardView} from \"./views/catalog-views/catalog-dashboard/catalog-dashboard-view\";\n\nimport {ProductViews} from \"./views/catalog-views/main-catalog/main-catalog\";\nimport {CatalogSingleProduct} from \"./views/catalog-views/catalog-details/single-product-view\";\nimport {MediaLibraryView} from \"./views/media-library/media-library\";\n\ninterface iSTATE{\n    appmode : | 'material' | 'wayfair' | 'heru'\n}\n\ninterface iPROPS {\n    mousePos : {x:number, y: number}\n}\n\nclass App extends React.Component<iPROPS, iSTATE>{\n\n    constructor(props:iPROPS) {\n        super(props);\n\n    }\n\n\n  render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n      return (\n          <>\n              <Router>\n                  <Switch>\n                      <Route exact path={navSettings.catalog} component={ ()=> <CatalogLanding/>} />\n\n                      <Route path=\"/catalog\">\n                          <CatalogLanding/>\n                      </Route>\n\n                      <Route exact path={navSettings.manageAttributes} component={ ()=><ManageAttributesView message={\"managing attributes\"}/> }/>\n\n                      {/*ATTRIBUTE GROUPS*/}\n                      <Route exact path={navSettings.manageAttributeGroups}\n                             component={ ()=><AttributeGroupsView\n                                 message={\"manage attributes groups view test\"}\n                             />\n                             }\n                      />\n\n                      {/*ATTRIBUTE MAPPINGS*/}\n                      <Route exact path={navSettings.manageAttributeMappings}\n                             component={ ()=><ManageAttributeMappingView\n                                 message={\"manage attribute mappings\"}\n                             />}\n                      />\n\n                      {/*MEDIA LIBRARY*/}\n                      <Route exact path={navSettings.mediaLibrary}\n                             component={ ()=><MediaLibraryView\n                                 targetDataSet={\"media-data\"}\n                                 message={\"manage media library\"}\n                                 columnsData={dataManagerMain.getMediaColumnsForGrid()}\n                                 gridData={dataManagerMain.getMediaDataForGrid()}\n                                 dataManager={dataManagerMain}\n                             /> }/>\n\n                      <Route exact path=\"/manage-classes\" component={ ()=><ManageClassesView message={\"attribute mappings\"}/> }/>\n\n                      <Route exact path=\"/\" component={ ()=><LandingPageView message={\"this is the landing page\"}/> }/>\n                  </Switch>\n              </Router>\n          </>\n\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {iDataGridItem} from \"../_catman-data-types\";\n\nexport interface mediaObject {\n    id : string;\n    mediaPath : string;\n    mediaName : string;\n    description : string;\n    shotType : shotType;\n    productAssociations : string;\n    classesAssociated : string;\n    mediaAssociations : string;\n    resolution : string;\n}\n\nexport type shotType =\n    | \"front\"\n    | \"back\"\n    | \"left\"\n    | \"right\"\n    | \"top\"\n    | \"bottom\"\n    | \"lifestyle\"\n    | \"custom\"\n    | \"dimensions\"\n    | \"overview\"\n    | \"closeup\";\n\nexport let mediaLibraryData : iDataGridItem[][]=[\n    [\n        {   validationValue:\"\",\n            value: \"00001\",\n            columnName: \"uniqueID\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"https://secure.img1-ag.wfcdn.com/im/10739304/resize-h600-w600%5Ecompr-r85/1184/118483853/Logan+Cotton+Reclining+88%2522+Square+Arm+Sofa.jpg\",\n            columnName: \"mediaPath\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"Logan Cotton Reclining 88\\\" Square Arm Sofa\",\n            columnName: \"mediaName\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"\",\n            columnName: \"description\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"front\",\n            columnName: \"shotType\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"productAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"mediaAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"classesAssociated\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"1200x1200\",\n            columnName: \"resolution\",\n            attrType: \"standard\",\n            class: \"default\"\n        }\n    ],\n    [\n        {   validationValue:\"\",\n            value: \"00002\",\n            columnName: \"uniqueID\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"https://secure.img1-fg.wfcdn.com/im/00684050/resize-h600-w600%5Ecompr-r85/8398/83985507/Joy+77%2522+Round+Arm+Sleeper.jpg\",\n            columnName: \"mediaPath\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"Joy 77 round arm - FOLDED POSITION\",\n            columnName: \"mediaName\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"\",\n            columnName: \"description\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"front\",\n            columnName: \"shotType\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"productAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"mediaAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"classesAssociated\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"1200x1200\",\n            columnName: \"resolution\",\n            attrType: \"standard\",\n            class: \"default\"\n        }\n    ],\n    [\n        {   validationValue:\"\",\n            value: \"00003\",\n            columnName: \"uniqueID\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"https://secure.img1-fg.wfcdn.com/im/71424978/resize-h600-w600%5Ecompr-r85/8398/83985514/Joy+77%2522+Round+Arm+Sleeper.jpg\",\n            columnName: \"mediaPath\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"Joy 77 round arm - Close up armrest\",\n            columnName: \"mediaName\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"\",\n            columnName: \"description\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"front\",\n            columnName: \"shotType\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"productAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"mediaAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"classesAssociated\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"1200x1200\",\n            columnName: \"resolution\",\n            attrType: \"standard\",\n            class: \"default\"\n        }\n    ],\n    [\n        {   validationValue:\"\",\n            value: \"00003\",\n            columnName: \"uniqueID\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"https://secure.img1-fg.wfcdn.com/im/71424978/resize-h600-w600%5Ecompr-r85/8398/83985514/Joy+77%2522+Round+Arm+Sleeper.jpg\",\n            columnName: \"mediaPath\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"Joy 77 round arm - Close up armrest\",\n            columnName: \"mediaName\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"\",\n            columnName: \"description\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"front\",\n            columnName: \"shotType\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"productAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"mediaAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"classesAssociated\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"1200x1200\",\n            columnName: \"resolution\",\n            attrType: \"standard\",\n            class: \"default\"\n        }\n    ],\n    [\n        {   validationValue:\"\",\n            value: \"00004\",\n            columnName: \"uniqueID\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"https://secure.img1-fg.wfcdn.com/im/12191405/resize-h600-w600%5Ecompr-r85/8398/83985513/Joy+77%2522+Round+Arm+Sleeper.jpg\",\n            columnName: \"mediaPath\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"Joy 77 round arm - Rear\",\n            columnName: \"mediaName\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"\",\n            columnName: \"description\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"front\",\n            columnName: \"shotType\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"productAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"mediaAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"classesAssociated\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"1200x1200\",\n            columnName: \"resolution\",\n            attrType: \"standard\",\n            class: \"default\"\n        }\n    ],\n    [\n        {   validationValue:\"\",\n            value: \"00005\",\n            columnName: \"uniqueID\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"https://secure.img1-fg.wfcdn.com/im/78138666/resize-h600-w600%5Ecompr-r85/8398/83985510/Joy+77%2522+Round+Arm+Sleeper.jpg\",\n            columnName: \"mediaPath\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"Joy 77 round arm - Side\",\n            columnName: \"mediaName\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"\",\n            columnName: \"description\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"right\",\n            columnName: \"shotType\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"productAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"mediaAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"classesAssociated\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"1200x1200\",\n            columnName: \"resolution\",\n            attrType: \"standard\",\n            class: \"default\"\n        }\n    ],\n    [\n        {   validationValue:\"\",\n            value: \"00006\",\n            columnName: \"uniqueID\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"https://secure.img1-fg.wfcdn.com/im/14362037/resize-h800-w800%5Ecompr-r85/6556/65560147/STL_Eclectic+Living+Room+Design_65560147.jpg\",\n            columnName: \"mediaPath\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"Joy 77 round arm - Lifestyle\",\n            columnName: \"mediaName\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"\",\n            columnName: \"description\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"lifestyle\",\n            columnName: \"shotType\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"productAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"mediaAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"classesAssociated\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"1200x1200\",\n            columnName: \"resolution\",\n            attrType: \"standard\",\n            class: \"default\"\n        }\n    ],\n    [\n        {   validationValue:\"\",\n            value: \"00007\",\n            columnName: \"uniqueID\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"https://secure.img1-fg.wfcdn.com/im/69740176/resize-h600-w600%5Ecompr-r85/8992/89925901/Joy+77%2522+Round+Arm+Sleeper.jpg\",\n            columnName: \"mediaPath\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"Joy 77 round arm - DIMENSIONS\",\n            columnName: \"mediaName\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"\",\n            columnName: \"description\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"lifestyle\",\n            columnName: \"shotType\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"productAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"mediaAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"classesAssociated\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"1200x1200\",\n            columnName: \"resolution\",\n            attrType: \"standard\",\n            class: \"default\"\n        }\n    ],\n    [\n        {   validationValue:\"\",\n            value: \"00007\",\n            columnName: \"uniqueID\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"https://secure.img1-fg.wfcdn.com/im/69740176/resize-h600-w600%5Ecompr-r85/8992/89925901/Joy+77%2522+Round+Arm+Sleeper.jpg\",\n            columnName: \"mediaPath\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"Joy 77 round arm - DIMENSIONS\",\n            columnName: \"mediaName\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"\",\n            columnName: \"description\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"dimensions\",\n            columnName: \"shotType\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"productAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"mediaAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"classesAssociated\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"1200x1200\",\n            columnName: \"resolution\",\n            attrType: \"standard\",\n            class: \"default\"\n        }\n    ],\n    [\n        {   validationValue:\"\",\n            value: \"00008\",\n            columnName: \"uniqueID\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"https://secure.img1-ag.wfcdn.com/im/42439378/resize-h600-w600%5Ecompr-r85/1021/102195993/Garren+75.6%2522+Square+Arm+Sofa.jpg\",\n            columnName: \"mediaPath\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"Joy 77 round arm - DIMENSIONS\",\n            columnName: \"mediaName\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"\",\n            columnName: \"description\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"overview\",\n            columnName: \"shotType\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"productAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"mediaAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"classesAssociated\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"1200x1200\",\n            columnName: \"resolution\",\n            attrType: \"standard\",\n            class: \"default\"\n        }\n    ],\n    [\n        {   validationValue:\"\",\n            value: \"00009\",\n            columnName: \"uniqueID\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"https://secure.img1-fg.wfcdn.com/im/93980883/resize-h600-w600%5Ecompr-r85/7267/72677904/Dawna+85%2522+Rolled+Arms+Sofa.jpg\",\n            columnName: \"mediaPath\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"Dawna 85\\\" Rolled Arms Sofa - OVERVIEW\",\n            columnName: \"mediaName\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"\",\n            columnName: \"description\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"overview\",\n            columnName: \"shotType\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"productAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"mediaAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"classesAssociated\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"1200x1200\",\n            columnName: \"resolution\",\n            attrType: \"standard\",\n            class: \"default\"\n        }\n    ],\n    [\n        {   validationValue:\"\",\n            value: \"00010\",\n            columnName: \"uniqueID\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"https://secure.img1-fg.wfcdn.com/im/99944912/resize-h600-w600%5Ecompr-r85/7079/70796967/Dawna+85%2522+Rolled+Arms+Sofa.jpg\",\n            columnName: \"mediaPath\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"Dawna 85\\\" Rolled Arms Sofa - CLOSEUP\",\n            columnName: \"mediaName\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"\",\n            columnName: \"description\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"overview\",\n            columnName: \"shotType\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"productAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"mediaAssociations\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"[]\",\n            columnName: \"classesAssociated\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"1200x1200\",\n            columnName: \"resolution\",\n            attrType: \"standard\",\n            class: \"default\"\n        }\n    ]\n];\n\nexport let mediaLibraryDataMediaObjects : mediaObject[] = [\n    {\n        id:\"00001\",\n        mediaPath : \"https://secure.img1-ag.wfcdn.com/im/10739304/resize-h600-w600%5Ecompr-r85/1184/118483853/Logan+Cotton+Reclining+88%2522+Square+Arm+Sofa.jpg\",\n        mediaName : \"Logan Cotton Reclining 88\\\" Square Arm Sofa\",\n        description : \"\",\n        shotType : \"front\",\n        productAssociations : \"\",\n        mediaAssociations : \"[]\",\n        classesAssociated : \"[]\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00002\",\n        mediaPath : \"https://secure.img1-fg.wfcdn.com/im/00684050/resize-h600-w600%5Ecompr-r85/8398/83985507/Joy+77%2522+Round+Arm+Sleeper.jpg\",\n        mediaName : \"Joy 77 round arm - FOLDED POSITION\",\n        description : \"\",\n        shotType : \"front\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00003\",\n        mediaPath : \"https://secure.img1-fg.wfcdn.com/im/71424978/resize-h600-w600%5Ecompr-r85/8398/83985514/Joy+77%2522+Round+Arm+Sleeper.jpg\",\n        mediaName : \"Joy 77 round arm - Close up armrest\",\n        description : \"\",\n        shotType : \"front\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00004\",\n        mediaPath : \"https://secure.img1-fg.wfcdn.com/im/12191405/resize-h600-w600%5Ecompr-r85/8398/83985513/Joy+77%2522+Round+Arm+Sleeper.jpg\",\n        mediaName : \"Joy 77 round arm - Rear\",\n        description : \"\",\n        shotType : \"front\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00005\",\n        mediaPath : \"https://secure.img1-fg.wfcdn.com/im/78138666/resize-h600-w600%5Ecompr-r85/8398/83985510/Joy+77%2522+Round+Arm+Sleeper.jpg\",\n        mediaName : \"Joy 77 round arm - Side\",\n        description : \"\",\n        shotType : \"right\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00006\",\n        mediaPath : \"https://secure.img1-fg.wfcdn.com/im/14362037/resize-h800-w800%5Ecompr-r85/6556/65560147/STL_Eclectic+Living+Room+Design_65560147.jpg\",\n        mediaName : \"Joy 77 round arm - Lifestyle\",\n        description : \"\",\n        shotType : \"lifestyle\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00007\",\n        mediaPath : \"https://secure.img1-fg.wfcdn.com/im/69740176/resize-h600-w600%5Ecompr-r85/8992/89925901/Joy+77%2522+Round+Arm+Sleeper.jpg\",\n        mediaName : \"Joy 77 round arm - DIMENSIONS\",\n        description : \"\",\n        shotType : \"dimensions\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00008\",\n        mediaPath : \"https://secure.img1-ag.wfcdn.com/im/42439378/resize-h600-w600%5Ecompr-r85/1021/102195993/Garren+75.6%2522+Square+Arm+Sofa.jpg\",\n        mediaName : \"Joy 77 round arm - DIMENSIONS\",\n        description : \"\",\n        shotType : \"overview\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00009\",\n        mediaPath : \"https://secure.img1-fg.wfcdn.com/im/93980883/resize-h600-w600%5Ecompr-r85/7267/72677904/Dawna+85%2522+Rolled+Arms+Sofa.jpg\",\n        mediaName : \"Dawna 85\\\" Rolled Arms Sofa - OVERVIEW\",\n        description : \"\",\n        shotType : \"overview\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00010\",\n        mediaPath : \"https://secure.img1-fg.wfcdn.com/im/99944912/resize-h600-w600%5Ecompr-r85/7079/70796967/Dawna+85%2522+Rolled+Arms+Sofa.jpg\",\n        mediaName : \"Dawna 85\\\" Rolled Arms Sofa - CLOSEUP\",\n        description : \"\",\n        shotType : \"closeup\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00011\",\n        mediaPath : \"https://secure.img1-fg.wfcdn.com/im/09067153/resize-h600-w600%5Ecompr-r85/1174/117414677/Dawna+85%2522+Rolled+Arms+Sofa.jpg\",\n        mediaName : \"Dawna 85\\\" Rolled Arms Sofa - DIMENSIONS\",\n        description : \"\",\n        shotType : \"closeup\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00012\",\n        mediaPath : \"https://secure.img1-fg.wfcdn.com/im/01328246/resize-h600-w600%5Ecompr-r85/7267/72677918/Dawna+85%2522+Rolled+Arms+Sofa.jpg\",\n        mediaName : \"Dawna 85\\\" Rolled Arms Sofa - DIMENSIONS\",\n        description : \"\",\n        shotType : \"dimensions\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00013\",\n        mediaPath : \"\",\n        mediaName : \"\",\n        description : \"\",\n        shotType : \"closeup\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00014\",\n        mediaPath : \"\",\n        mediaName : \"\",\n        description : \"\",\n        shotType : \"closeup\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00015\",\n        mediaPath : \"\",\n        mediaName : \"\",\n        description : \"\",\n        shotType : \"closeup\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00016\",\n        mediaPath : \"\",\n        mediaName : \"\",\n        description : \"\",\n        shotType : \"closeup\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00017\",\n        mediaPath : \"\",\n        mediaName : \"\",\n        description : \"\",\n        shotType : \"closeup\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00018\",\n        mediaPath : \"\",\n        mediaName : \"\",\n        description : \"\",\n        shotType : \"closeup\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00019\",\n        mediaPath : \"\",\n        mediaName : \"\",\n        description : \"\",\n        shotType : \"closeup\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00020\",\n        mediaPath : \"\",\n        mediaName : \"\",\n        description : \"\",\n        shotType : \"closeup\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    },\n    {\n        id:\"00021\",\n        mediaPath : \"\",\n        mediaName : \"\",\n        description : \"\",\n        shotType : \"closeup\",\n        productAssociations : \"\",\n        mediaAssociations : \"\",\n        classesAssociated : \"\",\n        resolution : \"1200x1200\"\n    }\n\n\n];","import {iColumn, iDataGridItem} from \"../_catman-data-types\";\nimport * as React from \"react\";\n\n\nexport let attributeGroupsLibraryColumns : iColumn[] = [\n    {\n        validationAction : [],\n        columnName : \"uniqueID\",\n        columnLabel : \" \",\n        columnMenu : <></>,\n        columnType : \"standard\",\n        control : \"text-input\",\n        tooltipType : \"custom\",\n        toolTip : \"this is non-editable unique id\"\n    },\n    {\n        validationAction : [],\n        columnName : \"attributeGroupsName\",\n        columnLabel : \"Attribute Group Name\",\n        columnMenu : <></>,\n        columnType : \"standard\",\n        control : \"text-input\",\n        tooltipType : \"custom\",\n        toolTip : \"this is your internal name for the attribute/column-head\"\n    },\n    {\n        validationAction : [],\n        columnName : \"columnLabel\",\n        columnLabel : \"Column Label\",\n        columnMenu : <></>,\n        columnType : \"standard\",\n        control : \"text-input\",\n        tooltipType : \"custom\",\n        toolTip : \"this is your internal name for the attribute/column-head\"\n    },\n\n];\n\nexport let attributeGroupsLibrary : iDataGridItem[][] = [\n\n    [\n        { validationValue:\"\",\n            columnName: \"uniqueID\",\n            value: \"100001\",\n            attrType: \"hidden\",\n            class: \"default\"\n        },\n\n        {   validationValue:\"\",\n            value: \"Group Name\",\n            columnName: \"groupName\",\n            attrType: \"standard\",\n            class: \"default\"\n        },\n        {   validationValue:\"\",\n            value: \"Attributes In Group\",\n            columnName: \"columnLabel\",\n            attrType: \"standard\",\n            class: \"default\"\n        }\n    ],\n];","import * as React from \"react\";\nimport {iDataGridItem} from \"../../_catman-data-types\";\nimport {iColumn} from \"../../_catman-data-types\";\nimport {toolTipContent} from \"../../views/tool-tip-content/content-tool-tips\";\nimport {mediaLibraryData, mediaLibraryDataMediaObjects, mediaObject, shotType} from \"../../_sample-data/media-library\";\nimport {dataAttributesLibrary, standardAttributes} from \"../../_sample-data/attributes-data-and-columns\";\nimport {attributeGroupsLibrary, attributeGroupsLibraryColumns} from \"../../_sample-data/attribute-groups-library\";\nimport {classesLibrary} from \"../../_sample-data/classes-library\";\n\nexport type dataSetType =\n    | \"media-data\"\n    | \"media-grid-data\"\n    | \"product-data\"\n    | \"product-grid-data\"\n    | \"attributes-data\"\n    | \"custom-data\"\n    | \"attribute-groups-data\"\n    | \"classes-data\";\n\nexport type validationActions = \"required\" | \"custom\" | \"no-duplicates\";\n\ninterface iDataManager {\n    productData : iDataGridItem[][];\n}\n\nexport type iUpdateSet = {row : number, cell : number, newData:string}\n\nexport class DataManager implements iDataManager{\n    productData : iDataGridItem[][];\n    customGridData : iDataGridItem[][] | undefined;\n\n    constructor(productData : iDataGridItem[][], customGridData? : iDataGridItem[][] | undefined ) {\n        this.productData = productData;\n         this.customGridData = customGridData;\n    }\n    //Main genericized methods\n    setData(targetDataSet : dataSetType, updatePackage : iUpdateSet, customGridData? : iDataGridItem[][]){\n        console.log(\"setData, updatePackag:\",  updatePackage, \"target data type: \", targetDataSet);\n        switch (targetDataSet) {\n            case \"media-data\":\n                this.setMediaData(updatePackage);\n                break;\n            case \"product-data\":\n                this.setProductData(updatePackage);\n                break;\n            case \"attributes-data\":\n                console.log(\"attributes-data\", dataAttributesLibrary);\n                this.setAttributesData(updatePackage);\n                break;\n\n            case \"attribute-groups-data\":\n                this.setAttributeGroupsData(updatePackage);\n                break;\n\n            case \"classes-data\":\n                console.log(\"attributes-data\", dataAttributesLibrary);\n                this.setCustomData(updatePackage, customGridData);\n                break;\n\n            case \"custom-data\":\n                console.log(\"attributes-data\", dataAttributesLibrary);\n                this.setCustomData(updatePackage, customGridData);\n                break;\n\n\n        }\n    }\n\n    getData(targetDataSet:dataSetType){\n        switch (targetDataSet) {\n            case \"media-data\":\n                return this.getMediaObjectData();\n            case \"media-grid-data\":\n                return this.getMediaDataForGrid();\n            case \"product-grid-data\":\n                return this.getProductData();\n        }\n    }\n\n    //CLASSSES\n    getClassesData(){\n        return classesLibrary;\n    }\n\n    setClassesData(updatePackage : iUpdateSet){\n        classesLibrary[updatePackage.row][updatePackage.cell].value = updatePackage.newData;\n        console.log(\"setAttributesData\", attributeGroupsLibrary);\n    }\n\n    //PRODUCT DATA\n    getProductColumns():iColumn[]{\n        let testMenu = (<div style={{backgroundColor : \"#cecece\"}}>Menu</div>);\n\n        return [\n            {\n                validationAction : [],\n                columnName : \"uniqueID\",\n                columnLabel : \" \",\n                columnMenu : testMenu,\n                columnType : \"hidden\",\n                control : \"hidden\",\n                tooltipType : \"custom\",\n                toolTip : \"this is non-editable unique id\"\n            },\n            {\n                validationAction : [],\n                columnName : \"ReferenceImage\",\n                columnLabel : \"Reference Image\",\n                columnMenu : testMenu,\n                columnType : \"standard\",\n                control : \"media\",\n                tooltipType : \"custom\",\n                toolTip : toolTipContent.columnHeaderToolTips(\"ReferenceImage\")\n            },\n            {\n                validationAction : [\"no-duplicates\", \"required\"],\n                columnName : \"PartNumber\",\n                columnLabel : \"Part Number \",\n                columnMenu : testMenu,\n                columnType : \"required\",\n                control : \"text-input\",\n                tooltipType : \"custom\",\n                toolTip : toolTipContent.columnHeaderToolTips(\"PartNumber\")\n            },\n            {\n                validationAction : [],\n                columnName : \"ProductGroup\",\n                columnLabel : \"Product Group\",\n                columnMenu : testMenu,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"custom\",\n                toolTip : toolTipContent.columnHeaderToolTips(\"ProductGroup\")\n            },\n            {\n                validationAction : [],\n                columnName : \"ProductName\",\n                columnLabel : \"Product Name\",\n                columnMenu : testMenu,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"custom\",\n                toolTip : toolTipContent.columnHeaderToolTips(\"ProductName\")\n            },\n            {\n                validationAction : [],\n                columnName : \"Class\",\n                columnLabel : \"Class\",\n                columnMenu : testMenu,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"custom\",\n                toolTip : toolTipContent.columnHeaderToolTips(\"Class\")\n            },\n            {\n                validationAction : [],\n                columnName : \"ProductType\",\n                columnLabel : \"Product Type\",\n                columnMenu : testMenu,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"OverallDimensions\",\n                columnLabel : \"Overall Dimensions\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"OverallDepth\",\n                columnLabel : \"Overall Depth\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"OverallHeight\",\n                columnLabel : \"Overall Height\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"OverallLength\",\n                columnLabel : \"Overall Length\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"Seat\",\n                columnLabel : \"Seat\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"ArmHeightFloorToArm\",\n                columnLabel : \"Arm Height - Floor to Arm\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"BackHeightSeatToTopOfBack\",\n                columnLabel : \"Back Height - Seat to Top of Back\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"FullyReclinedDepthFrontToBack\",\n                columnLabel : \"Fully Reclined Depth - Front to Back\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"LegHeightTopToBottom\",\n                columnLabel : \"Leg Height - Top to Bottom\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"ClearanceFromFloorToBottomOfSofa\",\n                columnLabel : \"Clearance from Floor to Bottom of Sofa\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            }\n        ]\n    }\n\n    getProductData():iDataGridItem[][]{\n        return this.productData;\n    }\n\n    //ATTRIBUTES\n    getAttributesData():iDataGridItem[][]{\n        return dataAttributesLibrary;\n    }\n\n    //ATTRIBUTE GROUPS\n    getAttributeGroupsData():iDataGridItem[][]{\n        return attributeGroupsLibrary;\n    }\n    getAttributeGroupsColumns():iColumn[]{\n        return attributeGroupsLibraryColumns;\n    }\n\n    setAttributeGroupsData(updatePackage : iUpdateSet){\n        attributeGroupsLibrary[updatePackage.row][updatePackage.cell].value = updatePackage.newData;\n        console.log(\"setAttributesData\", attributeGroupsLibrary);\n    }\n\n    setAttributesData(updatePackage : iUpdateSet){\n        dataAttributesLibrary[updatePackage.row][updatePackage.cell].value = updatePackage.newData;\n        console.log(\"setAttributesData\", dataAttributesLibrary);\n    }\n\n    //update package is type iUpdateSet = {row : number, cell : number, newData:string}\n    setProductData(updatePackage : iUpdateSet){\n        this.productData[updatePackage.row][updatePackage.cell].value = updatePackage.newData;\n    }\n\n    setCustomData(updatePackage : iUpdateSet, customGridData? : iDataGridItem[][]){\n        if(customGridData != undefined){\n            customGridData[updatePackage.row][updatePackage.cell].value = updatePackage.newData;\n        }\n    }\n\n    setMediaData(updatePackage : iUpdateSet){\n        console.log(\"update package: \", updatePackage);\n        mediaLibraryData[updatePackage.row][updatePackage.cell].value = updatePackage.newData;\n    }\n\n\n\n//CONVERT DATAGRID OBJECTS INTO MEDIA GRID OBJECTS\n    getMediaObjectData():mediaObject[]{\n        //TODO replace this with a proper data service\n\n        let mediaObjects : mediaObject[] = [];\n        let mediaGridObjects : iDataGridItem[][] = this.getMediaDataForGrid();\n\n        const findColVal = ( row : number, colName : string ):string =>{\n            for(let i=0; i < mediaGridObjects[row].length; i++){\n                if(mediaGridObjects[row][i].columnName == colName){\n                   return mediaGridObjects[row][i].value;\n                }\n            }\n\n            return \"\";\n        };\n\n        for(let i = 0; i < mediaGridObjects.length; i++ ){\n            let mediaObject : mediaObject = {\n                id: findColVal(i, \"uniqueID\"),\n                mediaPath : findColVal(i,\"mediaPath\"),\n                mediaName : findColVal(i, \"mediaName\"),\n                description : findColVal(i, \"description\"),\n                shotType : findColVal(i, \"shotType\") as shotType,\n                productAssociations : findColVal(i, \"productAssociations\"),\n                mediaAssociations : findColVal(i, \"mediaAssociations\"),\n                classesAssociated : findColVal(i, \"classesAssociated\"),\n                resolution : findColVal(i, \"resolution\")\n            };\n\n            mediaObjects.push(mediaObject);\n        }\n        return mediaLibraryDataMediaObjects;\n    }\n\n    getMediaColumnsForGrid():iColumn[]{\n\n        let mediaColumns : iColumn[] = [\n            {\n                validationAction : [],\n                columnName : \"uniqueId\",\n                columnLabel : \"Unique ID\",\n                columnMenu : <></>,\n                columnType : \"hidden\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"mediaPath\",\n                columnLabel : \"Media Path\",\n                columnMenu : <></>,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"mediaName\",\n                columnLabel : \"Media Name\",\n                columnMenu : <></>,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"description\",\n                columnLabel : \"Description\",\n                columnMenu : <></>,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"shotType\",\n                columnLabel : \"Shot Type\",\n                columnMenu : <></>,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"productAssociations\",\n                columnLabel : \"Product Associations\",\n                columnMenu : <></>,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"mediaAssociations\",\n                columnLabel : \"Media Associations\",\n                columnMenu : <></>,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"classesAssociated\",\n                columnLabel : \"Classes Associated\",\n                columnMenu : <></>,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"resolution\",\n                columnLabel : \"Resolution\",\n                columnMenu : <></>,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n\n\n        ];\n\n        return mediaColumns;\n\n    }\n\n    getMediaDataForGrid():iDataGridItem[][]{\n\n        return mediaLibraryData;\n    }\n\n    addToProductGroup(){\n        let stub = this.productData[0];\n        this.productData.push(stub);\n    }\n\n    getGroups():string[]{\n        let groupsAll : string[] = [];\n\n        //first walk is extract all the product groups, then we'll remove duplicates\n        i: for( let i=0; i < this.productData.length; i++){\n                for(let j=0; j < this.productData[i].length; j++){\n                    if(this.productData[i][j].columnName === \"ProductGroup\"){\n                        groupsAll.push(this.productData[i][j].value);\n                        continue i;\n                    }\n                }\n            }\n\n        //second walk over groups to remove duplicates\n        let finalGroups = [];\n        i: for(let i=0; i < groupsAll.length; i++){\n            if(i===0){\n                finalGroups.push(groupsAll[i]);\n                continue i;\n            }\n\n            for(let j=0; j < finalGroups.length; j++){\n                if( finalGroups[j] === groupsAll[i]){\n                    continue i;\n                }\n                if( j === finalGroups.length - 1){\n                    finalGroups.push(groupsAll[i])\n                }\n            }\n        }\n\n        console.log(finalGroups);\n            return finalGroups;\n    }\n\n\n\n}","import {iDataGridItem} from \"../_catman-data-types\";\n\nimport {ProductsData} from \"../_sample-data/products-data\";\nimport {ReactElement} from \"react\";\nimport {toolTipType} from \"../view-components/heru-tool-tip/tool-tip\";\n\ninterface iProductDataService{\n    productData? : iDataGridItem[][];\n}\n\n\n\nexport class ProductDataService implements iProductDataService{\n    productData : iDataGridItem[][] = [];\n    constructor(productData?: iDataGridItem[][]) {\n        if(productData != null){\n            this.productData = productData;\n        }\n    }\n\n    initialize(){\n        this.getProducts();\n        this.getColumns();\n    }\n\n     getProducts(){\n        let products = new ProductsData();\n        //replace with fetch later\n        this.productData =  products.productData;\n    }\n\n    getColumns(){\n        for(let i = 0; i < this.productData.length; i++ ){\n\n\n\n            if(i===0){\n\n            }\n        }\n    }\n}","import {iDataGridItem} from \"../../_catman-data-types\";\nimport {Worker} from \"worker_threads\";\n\ninterface iValidation {\n    dataSet : iDataGridItem[][];\n    validationRules : validationRule[];\n}\n\ntype validationRule = {\n    columnName : string;\n    validation : Function\n}\n\nexport class ValidationService implements iValidation{\n    constructor(dataSet : iDataGridItem[][], validationRules : validationRule[]) {\n        this.dataSet = dataSet;\n        this.validationRules = validationRules\n    }\n    dataSet : iDataGridItem[][];\n    validationRules : validationRule[];\n\n    initializeValidations(){\n        setTimeout(\n            ()=>this.doValidations(),\n            10000\n        )\n    }\n\n    validationChecks(dataGridItem : iDataGridItem){\n\n    }\n\n    doValidations(){\n        for(let i=0; i < this.dataSet.length; i++){\n            for(let j=0; j < this.dataSet[i].length; j++){\n              //  console.log(this.dataSet[i][j].columnName);\n                this.validationChecks(this.dataSet[i][j]);\n            }\n        }\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {WindowLevelCapture} from \"./view-components/heru-tool-tip/tool-tip\";\nimport {DataManager} from \"./data-components/data-manager/data-manager\";\n\nimport './fonts/proximanova-reg.woff';\nimport './fonts/sofia-bold.woff';\nimport './fonts/sofia-reg.woff';\nimport './fonts/sofia-bold.woff';\n\nimport {ProductDataService} from \"./services/product-data-service\";\nimport {catmanData} from \"./_sample-data/products-data\";\nimport {ValidationService} from \"./services/validations-service/validation\";\n\n//initialization\nexport let win = new WindowLevelCapture();\nwin.windowEvent();\n\nexport let dataManagerMain = new DataManager(catmanData.productData);\n//TODO need proper rules set\nexport let dataValidations = new ValidationService(dataManagerMain.productData, [])\ndataValidations.initializeValidations();\n\nlet productData = new ProductDataService();\nproductData.initialize();\n\nReactDOM.render(\n    <React.StrictMode>\n        <App mousePos={ {x:win.mousePos.x, y:win.mousePos.y}} />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}