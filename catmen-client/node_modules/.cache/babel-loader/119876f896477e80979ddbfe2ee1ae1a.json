{"ast":null,"code":"import _classCallCheck from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import{toolTipContent}from\"../../tool-tip-content/content-tool-tips\";import{CatmanIcon}from\"../../../svg/icons/icons\";import AppButton from\"../../../view-components/button/app-button\";import{DividerLine}from\"../../../view-components/divider-line/divider-line\";import{TextInput}from\"../../../view-components/text-input/text-input\";import{Illustration}from\"../../../svg/illustrations/illustrations\";export var UploadWizard=/*#__PURE__*/function(_React$Component){_inherits(UploadWizard,_React$Component);var _super=_createSuper(UploadWizard);function UploadWizard(props){var _this;_classCallCheck(this,UploadWizard);_this=_super.call(this,props);_this.state={wizardPanel:\"upload-1\"};return _this;}_createClass(UploadWizard,[{key:\"element\",value:function element(){var _this2=this;switch(this.state.wizardPanel){case\"upload-1\":return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(AppButton,{buttonType:\"drag-area-large\",buttonLabel:\"Drag Files Here\",tooltipType:\"custom\",classes:\"upload-files\",buttonHelp:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"p\",null,\"Upload Images, Excel Sheets, PDFs, and we will try to add them to existing products or create new products based.\")),tooltip:toolTipContent.dragUploadFiles(),toolTipTimeOutInMS:10000,OnClick:function OnClick(){return _this2.props.addAction;},iconLeft:/*#__PURE__*/React.createElement(Illustration,{illustrationName:\"illustration-upload\",specialClasses:\"\",heightWithUnits:\"100%\",widthWithUnits:\"100%\"}),iconRight:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-add-invert\",classes:\" \",height:\"100%\",width:\"5rem\"})}),/*#__PURE__*/React.createElement(DividerLine,{dividerType:\"labeled\",labelText:\"OR\",classes:\"upload-wizard-divider\"}),/*#__PURE__*/React.createElement(\"h3\",null,\"Add Products Manually\"),/*#__PURE__*/React.createElement(\"div\",{className:\"add-blank-stubs-area\"},/*#__PURE__*/React.createElement(\"p\",null,\"Add\"),/*#__PURE__*/React.createElement(TextInput,{label:\"\",currentValue:\"1\",onChangeAction:function onChangeAction(){}}),/*#__PURE__*/React.createElement(\"p\",null,\"new blank product stubs\"),/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"Go\",OnClick:function OnClick(){},tooltipType:\"custom\",tooltip:toolTipContent.addBlankStubs(),toolTipTimeOutInMS:10000,tooltipXOffset:0,tooltipYOffset:20,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-add-invert\",classes:\"reverse\",height:\"100%\",width:\"100%\"})})));case\"upload-2\":return/*#__PURE__*/React.createElement(React.Fragment,null);}}},{key:\"render\",value:function render(){return this.element();}}]);return UploadWizard;}(React.Component);// export let uploadWizard : iWizardStep[] = [\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard  wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     }\n// ];","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/wizards/upload-wizard/upload-wizard.tsx"],"names":["React","toolTipContent","CatmanIcon","AppButton","DividerLine","TextInput","Illustration","UploadWizard","props","state","wizardPanel","dragUploadFiles","addAction","addBlankStubs","element","Component"],"mappings":"gsBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAGA,OAAQC,cAAR,KAA6B,0CAA7B,CACA,OAAQC,UAAR,KAAyB,0BAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,4CAAtB,CACA,OAAQC,WAAR,KAA0B,oDAA1B,CACA,OAAQC,SAAR,KAAwB,gDAAxB,CACA,OAAQC,YAAR,KAA2B,0CAA3B,CAWA,UAAaC,CAAAA,YAAb,wHAEI,sBAAYC,KAAZ,CAA0B,8CACtB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAW,CACPC,WAAW,CAAG,UADP,CAAX,CAFsB,aAKzB,CAPL,kEASa,iBACL,OAAQ,KAAKD,KAAL,CAAWC,WAAnB,EACI,IAAK,UAAL,CACI,mBACQ,4CACI,oBAAC,SAAD,EACI,UAAU,CAAE,iBADhB,CAEI,WAAW,CAAC,iBAFhB,CAGI,WAAW,CAAC,QAHhB,CAII,OAAO,CAAE,cAJb,CAKI,UAAU,cACN,qDACI,iJADJ,CANR,CAWI,OAAO,CAAET,cAAc,CAACU,eAAf,EAXb,CAYI,kBAAkB,CAAE,KAZxB,CAaI,OAAO,CAAE,yBAAI,CAAA,MAAI,CAACH,KAAL,CAAWI,SAAf,EAbb,CAcI,QAAQ,cACJ,oBAAC,YAAD,EACI,gBAAgB,CAAE,qBADtB,CAEI,cAAc,CAAE,EAFpB,CAGI,eAAe,CAAE,MAHrB,CAII,cAAc,CAAE,MAJpB,EAfR,CAsBI,SAAS,cACL,oBAAC,UAAD,EACI,QAAQ,CAAC,iBADb,CAEI,OAAO,CAAC,GAFZ,CAGI,MAAM,CAAC,MAHX,CAII,KAAK,CAAC,MAJV,EAvBR,EADJ,cAgCI,oBAAC,WAAD,EACI,WAAW,CAAE,SADjB,CAEI,SAAS,CAAE,IAFf,CAGI,OAAO,CAAC,uBAHZ,EAhCJ,cAqCI,sDArCJ,cAsCI,2BAAK,SAAS,CAAE,sBAAhB,eACI,mCADJ,cAEI,oBAAC,SAAD,EACI,KAAK,CAAE,EADX,CAEI,YAAY,CAAE,GAFlB,CAGI,cAAc,CAAE,yBAAI,CAAE,CAH1B,EAFJ,cAOI,uDAPJ,cAQI,oBAAC,SAAD,EACI,UAAU,CAAE,kBADhB,CAEI,WAAW,CAAC,IAFhB,CAGI,OAAO,CAAE,kBAAI,CAAE,CAHnB,CAII,WAAW,CAAC,QAJhB,CAKI,OAAO,CAAEX,cAAc,CAACY,aAAf,EALb,CAMI,kBAAkB,CAAE,KANxB,CAOI,cAAc,CAAE,CAPpB,CAQI,cAAc,CAAE,EARpB,CASI,QAAQ,cACJ,oBAAC,UAAD,EACI,QAAQ,CAAC,iBADb,CAEI,OAAO,CAAC,SAFZ,CAGI,MAAM,CAAC,MAHX,CAII,KAAK,CAAC,MAJV,EAVR,EARJ,CAtCJ,CADR,CAqEJ,IAAK,UAAL,CACI,mBAAO,wCAAP,CAxER,CA0EH,CApFL,uCAsFY,CACJ,MAAO,MAAKC,OAAL,EAAP,CACH,CAxFL,0BAAkCd,KAAK,CAACe,SAAxC,EA2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import * as React from \"react\";\nimport {iWizardStep} from \"../../../view-components/wizard/wizard\";\nimport {ReactElement} from \"react\";\nimport {toolTipContent} from \"../../tool-tip-content/content-tool-tips\";\nimport {CatmanIcon} from \"../../../svg/icons/icons\";\nimport AppButton from \"../../../view-components/button/app-button\";\nimport {DividerLine} from \"../../../view-components/divider-line/divider-line\";\nimport {TextInput} from \"../../../view-components/text-input/text-input\";\nimport {Illustration} from \"../../../svg/illustrations/illustrations\";\n\n\ninterface iPROPS{\n    addAction : Function\n}\n\ninterface iSTATE{\n    wizardPanel : \"upload-1\" | \"upload-2\" | \"upload-3\";\n}\n\nexport class UploadWizard extends React.Component<iPROPS, iSTATE>{\n\n    constructor(props:iPROPS) {\n        super(props);\n        this.state={\n            wizardPanel : \"upload-1\"\n        }\n    }\n\n    element(){\n        switch (this.state.wizardPanel) {\n            case \"upload-1\":\n                return(\n                        <div>\n                            <AppButton\n                                buttonType={\"drag-area-large\"}\n                                buttonLabel=\"Drag Files Here\"\n                                tooltipType=\"custom\"\n                                classes={\"upload-files\"}\n                                buttonHelp={(\n                                    <>\n                                        <p>Upload Images, Excel Sheets, PDFs, and we will try to add them to existing products or\n                                            create new products based.</p>\n                                    </>\n                                )}\n                                tooltip={toolTipContent.dragUploadFiles()}\n                                toolTipTimeOutInMS={10000}\n                                OnClick={()=>this.props.addAction}\n                                iconLeft={\n                                    <Illustration\n                                        illustrationName={\"illustration-upload\"}\n                                        specialClasses={\"\"}\n                                        heightWithUnits={\"100%\"}\n                                        widthWithUnits={\"100%\"}\n                                        />\n                                    }\n                                iconRight={\n                                    <CatmanIcon\n                                        iconName=\"icon-add-invert\"\n                                        classes=\" \"\n                                        height=\"100%\"\n                                        width=\"5rem\"\n                                    />\n                                }\n                            />\n                            <DividerLine\n                                dividerType={\"labeled\"}\n                                labelText={\"OR\"}\n                                classes=\"upload-wizard-divider\"\n                            />\n                            <h3>Add Products Manually</h3>\n                            <div className={\"add-blank-stubs-area\"}>\n                                <p>Add</p>\n                                <TextInput\n                                    label={\"\"}\n                                    currentValue={\"1\"}\n                                    onChangeAction={()=>{}}\n                                />\n                                <p>new blank product stubs</p>\n                                <AppButton\n                                    buttonType={\"secondary-action\"}\n                                    buttonLabel=\"Go\"\n                                    OnClick={()=>{}}\n                                    tooltipType=\"custom\"\n                                    tooltip={toolTipContent.addBlankStubs()}\n                                    toolTipTimeOutInMS={10000}\n                                    tooltipXOffset={0}\n                                    tooltipYOffset={20}\n                                    iconLeft={\n                                        <CatmanIcon\n                                            iconName=\"icon-add-invert\"\n                                            classes=\"reverse\"\n                                            height=\"100%\"\n                                            width=\"100%\"\n                                        />\n                                    }\n                                />\n\n                            </div>\n                        </div>\n                );\n            case \"upload-2\":\n                return(<></>)\n        }\n    }\n\n    render(){\n        return(this.element())\n    }\n}\n\n// export let uploadWizard : iWizardStep[] = [\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard  wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     }\n// ];"]},"metadata":{},"sourceType":"module"}