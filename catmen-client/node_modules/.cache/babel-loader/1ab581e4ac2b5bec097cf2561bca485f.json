{"ast":null,"code":"import _classCallCheck from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import{toolTipContent}from\"../../../_common/tool-tip-content/content-tool-tips\";import{CatmanIcon}from\"../../../../svg/icons/icons\";import AppButton from\"../../../../view-components/button/app-button\";import{dataManagerMain}from\"../../../../index\";import{StandardTextInput}from\"../../../../view-components/text-input/standard-text-input\";export var AddVariantsWizard=/*#__PURE__*/function(_React$Component){_inherits(AddVariantsWizard,_React$Component);var _super=_createSuper(AddVariantsWizard);function AddVariantsWizard(props){var _this;_classCallCheck(this,AddVariantsWizard);_this=_super.call(this,props);_this.numberOfVariants=0;_this.getInputValue=function(row,cell,value){console.log(\"input value\",row,\" \",cell,\" \",value);_this.numberOfVariants=parseInt(value);};_this.state={wizardPanel:\"start\"};return _this;}_createClass(AddVariantsWizard,[{key:\"addVariants\",value:function addVariants(){console.log(this.props.selectedCheckBoxes);var newItem=[];if(this.props.selectedCheckBoxes!==undefined){if(this.props.selectedCheckBoxes.length===1){var _dataManagerMain$prod;newItem=JSON.parse(JSON.stringify(dataManagerMain.productData[this.props.selectedCheckBoxes[0]]));var newItems=[];for(var i=0;i<this.numberOfVariants-1;i++){newItems.push(JSON.parse(JSON.stringify(newItem)));}(_dataManagerMain$prod=dataManagerMain.productData).splice.apply(_dataManagerMain$prod,[this.props.selectedCheckBoxes[0],0].concat(newItems));}else{}}console.log(\"added variant\",dataManagerMain.productData);this.props.manageModal();}},{key:\"element\",value:function element(){var _this2=this;switch(this.state.wizardPanel){case\"closed\":return/*#__PURE__*/React.createElement(React.Fragment,null);case\"start\":return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Add Products Variants\"),/*#__PURE__*/React.createElement(\"div\",{className:\"add-blank-stubs-area\"},/*#__PURE__*/React.createElement(\"p\",null,\"Add\"),/*#__PURE__*/React.createElement(StandardTextInput,{label:\"Number of variants\",onChangeAction:this.getInputValue,currentValue:\"1\"}),/*#__PURE__*/React.createElement(\"p\",null,\"New blank product stubs as variants: \"),/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"Go\",OnClick:function OnClick(){return _this2.addVariants();},tooltipType:\"custom\",tooltip:toolTipContent.addBlankStubs(),toolTipTimeOutInMS:10000,tooltipXOffset:0,tooltipYOffset:20,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-add-invert\",classes:\"reverse\",height:\"100%\",width:\"100%\"})})));case\"upload-2\":return/*#__PURE__*/React.createElement(React.Fragment,null);}}},{key:\"render\",value:function render(){return this.element();}}]);return AddVariantsWizard;}(React.Component);// export let uploadWizard : iWizardStep[] = [\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard  wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     }\n// ];","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/_catman-configuration/wizards/create-product-group/add-variants-wizard.tsx"],"names":["React","toolTipContent","CatmanIcon","AppButton","dataManagerMain","StandardTextInput","AddVariantsWizard","props","numberOfVariants","getInputValue","row","cell","value","console","log","parseInt","state","wizardPanel","selectedCheckBoxes","newItem","undefined","length","JSON","parse","stringify","productData","newItems","i","push","splice","manageModal","addVariants","addBlankStubs","element","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {iWizardStep} from \"../../../../view-components/wizard/wizard\";\nimport {ReactElement} from \"react\";\nimport {toolTipContent} from \"../../../_common/tool-tip-content/content-tool-tips\";\nimport {CatmanIcon} from \"../../../../svg/icons/icons\";\nimport AppButton from \"../../../../view-components/button/app-button\";\nimport {DividerLine} from \"../../../../view-components/divider-line/divider-line\";\nimport {TextInput} from \"../../../../view-components/text-input/text-input\";\nimport {Illustration} from \"../../../../svg/illustrations/illustrations\";\nimport {dataManagerMain} from \"../../../../index\";\nimport {iDataGridItem} from \"../../../../view-components/data-grid/data-types-for-data-grid\";\nimport {StandardTextInput} from \"../../../../view-components/text-input/standard-text-input\";\n\ninterface iPROPS{\n    addAction : Function\n    selectedCheckBoxes? : number[];\n    groups : string[];\n    manageModal : Function;\n}\n\ninterface iSTATE{\n    wizardPanel : \"closed\" | \"start\" | \"upload-2\" | \"upload-3\";\n}\n\nexport class AddVariantsWizard extends React.Component<iPROPS, iSTATE>{\n\n    constructor(props:iPROPS) {\n        super(props);\n        this.state={\n            wizardPanel : \"start\"\n        }\n    }\n\n    numberOfVariants = 0;\n\n    addVariants(){\n        console.log(this.props.selectedCheckBoxes);\n        let newItem : iDataGridItem[] = [];\n        if(this.props.selectedCheckBoxes !== undefined){\n            if(this.props.selectedCheckBoxes.length === 1){\n                newItem = JSON.parse(JSON.stringify(dataManagerMain.productData[ this.props.selectedCheckBoxes[0]]) );\n                let newItems = [];\n\n                for(let i=0; i < this.numberOfVariants-1; i++){\n                    newItems.push( JSON.parse(JSON.stringify(newItem)) );\n\n                }\n\n                dataManagerMain.productData.splice(this.props.selectedCheckBoxes[0], 0,...newItems);\n            }else{\n\n            }\n        }\n        console.log(\"added variant\",dataManagerMain.productData);\n        this.props.manageModal();\n    }\n\n    getInputValue = (row:number, cell:number, value:string )=>{\n        console.log(\"input value\", row, \" \", cell, \" \", value);\n        this.numberOfVariants = parseInt(value);\n    };\n\n    element(){\n        switch (this.state.wizardPanel) {\n            case \"closed\":\n                return(<></>);\n            case \"start\":\n                return(\n                    <div>\n                        <h3>Add Products Variants</h3>\n                        <div className={\"add-blank-stubs-area\"}>\n                            <p>Add</p>\n                            <StandardTextInput\n                                label={\"Number of variants\"}\n                                onChangeAction={this.getInputValue}\n                                currentValue={\"1\"}\n                            />\n                            <p>New blank product stubs as variants: </p>\n                            <AppButton\n                                buttonType={\"secondary-action\"}\n                                buttonLabel=\"Go\"\n                                OnClick={()=>this.addVariants()}\n                                tooltipType=\"custom\"\n                                tooltip={toolTipContent.addBlankStubs()}\n                                toolTipTimeOutInMS={10000}\n                                tooltipXOffset={0}\n                                tooltipYOffset={20}\n                                iconLeft={\n                                    <CatmanIcon\n                                        iconName=\"icon-add-invert\"\n                                        classes=\"reverse\"\n                                        height=\"100%\"\n                                        width=\"100%\"\n                                    />\n                                }\n                            />\n                        </div>\n                    </div>\n                );\n            case \"upload-2\":\n                return(<></>)\n        }\n    }\n\n    render(){\n        return(this.element())\n    }\n}\n\n// export let uploadWizard : iWizardStep[] = [\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard  wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     }\n// ];"]},"metadata":{},"sourceType":"module"}