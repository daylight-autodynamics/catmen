{"ast":null,"code":"import _classCallCheck from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import AppButton from\"../button/app-button\";import{CatmanIcon}from\"../../svg/icons/icons\";import{Tile}from\"../tiles/tile-component\";import{toolTipContent}from\"../../views/tool-tip-content/content-tool-tips\";import{ToolTipContent}from\"../heru-tool-tip/tool-tip-content\";import ReactDOM from\"react-dom\";import{win}from\"../../index\";export var DataGrid=/*#__PURE__*/function(_React$Component){_inherits(DataGrid,_React$Component);var _super=_createSuper(DataGrid);function DataGrid(props){var _this;_classCallCheck(this,DataGrid);_this=_super.call(this,props);_this.selectionSet=[];_this.selectedCells=[];_this.numCols=void 0;_this.numRows=void 0;_this.startSelectionRow=void 0;_this.startSelectionCell=void 0;_this.root=function(){var root=document.getElementById(\"root\");if(root!=null){return root;}};_this.cellRange=void 0;_this._checkedRows=[];_this.iconForCheckBox=function(row){for(var i=0;i<_this.state.checkedRows.length;i++){if(row===_this.state.checkedRows[i]){return\"checkbox-checked\";}}return\"checkbox-unchecked\";};_this.updateSelectionState=function(){_this.setState({selectionSet:_this.selectionSet});};_this.columnHeadTooltip=function(tooltiptype,tooltip,header){switch(tooltiptype){case\"basic\":return/*#__PURE__*/React.createElement(ToolTipContent,{header:header,copy:tooltip,tooltipType:\"deluxe\",icon:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"info-icon-help\",classes:\"\",height:\"1.5rem\",width:\"1.5rem\"})});case\"custom\":return tooltip;}return/*#__PURE__*/React.createElement(React.Fragment,null);};_this.state={workingDataSet:_this.props.data,selectionSet:[],checkedRows:[],hoveredRow:\"\",mouseIsDown:false,mouseX:0,mouseY:0,initialMouseX:0,initialMouseY:0};_this.startSelectionRow=0;_this.startSelectionCell=0;_this.cellRange={startCell:0,endCell:0,startRow:0,endRow:0};_this.numCols=_this.getNumColumns();_this.numRows=_this.getNumRows();return _this;}_createClass(DataGrid,[{key:\"manageSelection\",value:function manageSelection(row,cell,columnName,clearSelection){if(clearSelection){this.selectionSet=[];this._checkedRows=[];}if(this.startSelectionRow>row){this.cellRange.startRow=row;this.cellRange.endRow=this.startSelectionRow;}else{this.cellRange.startRow=this.startSelectionRow;this.cellRange.endRow=row;}if(this.startSelectionCell>cell){this.cellRange.startCell=cell;this.cellRange.endCell=this.startSelectionCell;}else{this.cellRange.startCell=this.startSelectionCell;this.cellRange.endCell=cell;}if(row===this.startSelectionRow&&cell===this.startSelectionCell){this.selectionSet.push({row:row,cell:cell,selected:true,columnName:this.props.columnsData[cell-2].columnName//columnName : appColumns.getColumns[cell-2].columnName\n});}for(var i=this.cellRange.startRow;i<this.cellRange.endRow+1;i++){for(var j=this.cellRange.startCell;j<this.cellRange.endCell+1;j++){this.selectionSet.push({row:i,cell:j,selected:true,columnName:this.props.columnsData[j-2].columnName});}}// handle single cell as start and end\nconsole.log(\"@@@ this.selectionSet: \",this.selectionSet);console.log(\"*** this.state.selectionSet: \",this.state.selectionSet);if(this.selectionSet.length===2){if(this.selectionSet[0].row===this.selectionSet[1].row&&this.selectionSet[0].cell===this.selectionSet[1].cell){this.selectionSet.splice(1,1);}}this.setState({selectionSet:this.selectionSet,checkedRows:this._checkedRows});if(this.props.selectionCallback!==undefined&&this.props.selectionCallback!==null){var selectedItems=[];var lastRow=0;// work through the selection set to organize things\ni:for(var _i=0;_i<this.selectionSet.length;_i++){if(_i===0){//if it's the first one let's create a new entry\nlastRow=this.selectionSet[0].row;var newItem={row:lastRow,cells:[],productFields:[]};selectedItems.push(newItem);}//loop over the existing list of rows to create new ones\nif(this.selectionSet[_i].row===lastRow){//one more loop over the list to grab all the cells that belong to the row\nif(selectedItems[selectedItems.length-1].cells.length===0){for(var _j=0;_j<this.selectionSet.length;_j++){if(this.selectionSet[_j].row===lastRow){//if the row matches the last row, then push in the selected cell\nselectedItems[selectedItems.length-1].cells.push(this.selectionSet[_j].cell);}}}}else{lastRow=this.selectionSet[_i].row;var _newItem={row:lastRow,cells:[],productFields:[]};selectedItems.push(_newItem);}}for(var x=0;x<selectedItems.length;x++){for(var y=0;y<this.state.workingDataSet[selectedItems[x].row-2].length;y++){selectedItems[x].productFields.push(this.state.workingDataSet[selectedItems[x].row-2][y]);}}this.props.selectionCallback(selectedItems,this._checkedRows,\"standard-launch\");}}},{key:\"clearSelection\",value:function clearSelection(){this.setState({selectionSet:[],checkedRows:[]});this._checkedRows=[];this.selectionSet=[];}},{key:\"checkSelected\",value:function checkSelected(row,cell){for(var i=0;i<this.state.selectionSet.length;i++){if(this.state.selectionSet[i].row===row&&this.state.selectionSet[i].cell===cell){return\"selected\";}}//if nothing is found, return false because it isn't selected\nreturn\"\";}},{key:\"getNumColumns\",value:function getNumColumns(){//TODO swap this out to calculating total normalized columns\nreturn this.props.columnsData.length;}},{key:\"getNumRows\",value:function getNumRows(){if(this.state.workingDataSet.length>0){return this.state.workingDataSet.length;}else{return this.props.data.length;}}},{key:\"getProductUniqueID\",value:function getProductUniqueID(index){for(var j=0;j<this.state.workingDataSet[index].length;j++){if(this.state.workingDataSet[index][j].columnName===\"uniqueID\"){return this.state.workingDataSet[index][j].value;}}}},{key:\"mouseDownAction\",value:function mouseDownAction(row,cell){this.startSelectionCell=cell;this.startSelectionRow=row;this.setState({mouseIsDown:true,initialMouseX:win.mousePos.x,initialMouseY:win.mousePos.y});}},{key:\"mouseUpAction\",value:function mouseUpAction(row,cell,columnName){this.setState({mouseIsDown:false});this.manageSelection(row,cell,columnName,true);console.log(\"selection set: \",this.selectionSet);this.manageAppCues();}},{key:\"hoverRowAction\",value:function hoverRowAction(row){this.setState({hoveredRow:row.toString()});}},{key:\"mouseOutRowAction\",value:function mouseOutRowAction(){this.setState({hoveredRow:\"\"});}},{key:\"manageCheckbox\",value:function manageCheckbox(row){//find if this number is in the list\nvar found=false;console.log(\"@@ checked rows: \",row);for(var i=0;i<this._checkedRows.length;i++){if(this._checkedRows[i]===row){//if it is in the list remove it which unchecks\nthis._checkedRows.splice(i,1);this.setState({checkedRows:this._checkedRows});found=true;}}if(found===false){this._checkedRows.push(row);this.setState({checkedRows:this._checkedRows});}//handle selecting the checked\n//First reset the cell selection\nthis.selectionSet=[];for(var _i2=0;_i2<this._checkedRows.length;_i2++){for(var j=0;j<this.state.workingDataSet[this._checkedRows[_i2]].length;j++){var selectedCell={row:this._checkedRows[_i2]+2,cell:j+2,selected:true,columnName:this.props.columnsData[j].columnName};this.selectionSet.push(selectedCell);}}this.setState({selectionSet:this.selectionSet});if(this.props.selectionCallback!==undefined){this.props.selectionCallback(this.state.selectionSet,this.state.checkedRows,\"checkbox-launched\");}//once people use the tool, we can hide the tool tip\ntoolTipContent.showSelectRow=false;}},{key:\"switchToEditModeFromCheckBoxMode\",value:function switchToEditModeFromCheckBoxMode(){//handle switching from checkbox mode to cell selection mode\n//First reset the cell selection\nconsole.log(\"switch to edit mode\");this._checkedRows=[];this.setState({checkedRows:this._checkedRows});console.log(\"switch to edit mode\",this.selectionSet);console.log(\"switch to edit mode\",this.state.selectionSet);if(this.props.selectionCallback!==undefined){this.props.selectionCallback(this.state.selectionSet,this.state.checkedRows,\"checkbox-launched\");}}},{key:\"getGridItems\",value:function getGridItems(){var _this2=this;var cells=[];var _loop=function _loop(i){var _loop2=function _loop2(j){if(j===0){cells.push(/*#__PURE__*/React.createElement(\"div\",{id:\"row-\".concat(i+2,\"-start\"),className:\"cell checkbox-main \",style:{gridColumn:j+1,gridRow:i+2,zIndex:100+(_this2.numRows-i)}},/*#__PURE__*/React.createElement(AppButton,{OnClick:function OnClick(){return _this2.manageCheckbox(i);},hoverActions:[function(){return _this2.hoverRowAction(i+2);}],buttonType:\"transparent-bg\",tooltipType:\"custom\",tooltip:toolTipContent.selectRow(),classes:\"\".concat(_this2.iconForCheckBox(i)),iconCenter:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"\".concat(_this2.iconForCheckBox(i)),width:\"100%\",height:\"100%\"})}),/*#__PURE__*/React.createElement(CatmanIcon,{classes:\"shading-l-r\",iconName:\"fader-left-to-right\",width:\"0.5rem\",height:\"100%\"})));}var cell=/*#__PURE__*/React.createElement(\"div\",{className:\"cell row-\".concat(i+2),style:{gridColumn:j+2,gridRow:i+2}},/*#__PURE__*/React.createElement(Tile,{tileType:_this2.props.columnsData[j].control,tileLabel:_this2.state.workingDataSet[i][j].value,action:function action(){return _this2.clickCellsActions();},hoverActions:[function(){return _this2.hoverRowAction(i+2);}],mouseOutActions:[function(){return _this2.mouseOutRowAction();}],mouseDownActions:[function(){return _this2.mouseDownAction(i+2,j+2);}],mouseUpActions:[function(){return _this2.props.manageParentViews();},function(){return _this2.mouseUpAction(i+2,j+2,_this2.props.columnsData[j].columnName);}],selectedClass:_this2.checkSelected(i+2,j+2)}));if(_this2.props.columnsData[j].control!==\"hidden\"){cells.push(cell);}if(j===_this2.state.workingDataSet[i].length-1){cells.push(/*#__PURE__*/React.createElement(\"div\",{className:\"cell details\",style:{gridColumn:j+3,gridRow:i+2,zIndex:100+(_this2.numRows-i)}},/*#__PURE__*/React.createElement(AppButton,{buttonType:\"nav-link\",navPath:\"/catalog/spreadsheet?product=\".concat(_this2.getProductUniqueID(i)),tooltipType:\"custom\",tooltip:toolTipContent.singleProduct(),iconCenter:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"go-arrow\",width:\"1rem\",height:\"100%\"})}),/*#__PURE__*/React.createElement(CatmanIcon,{classes:\"shading\",iconName:\"fader-right-to-left\",width:\"0.5rem\",height:\"100%\"})));}};for(var j=0;j<_this2.state.workingDataSet[i].length;j++){_loop2(j);}};for(var i=0;i<this.state.workingDataSet.length;i++){_loop(i);}return cells;}},{key:\"getColumnHeaders\",value:function getColumnHeaders(){var _this3=this;var columnsHeads=[];//Header checkbox for \"select all\"\nvar _loop3=function _loop3(i){var _this3$props$focusedI2;if(i===0){columnsHeads.push(/*#__PURE__*/React.createElement(\"div\",{className:\"cell checkbox-main grid-header\",style:{gridColumn:i+1,gridRow:1,zIndex:120+_this3.numCols}},/*#__PURE__*/React.createElement(AppButton,{OnClick:function OnClick(){return _this3.manageCheckbox(i);},buttonType:\"transparent-bg\",tooltipType:\"custom\",tooltip:toolTipContent.selectRow(),classes:\" \",iconCenter:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"\".concat(_this3.iconForCheckBox(i)),width:\"0.5rem\",height:\"100%\"})})));}//Handling the something-in-column selected visual indicator\nvar columnActiveCheck=function columnActiveCheck(){var _this3$props$focusedI;if(((_this3$props$focusedI=_this3.props.focusedItem)===null||_this3$props$focusedI===void 0?void 0:_this3$props$focusedI.cell)===i+2&&_this3.props.focusedItem.editDrawerOpen===true){return{tileType:\"header-active\",cellClass:\"active\"};}else{return{tileType:\"column-header\",cellClass:\"\"};}};var columnHead=/*#__PURE__*/React.createElement(\"div\",{className:\"cell grid-header \".concat(columnActiveCheck().cellClass),style:{gridColumn:i+2,gridRow:1,zIndex:_this3.numRows+100+i}},/*#__PURE__*/React.createElement(Tile,{tileType:columnActiveCheck().tileType,tileLabel:_this3.props.columnsData[i].columnLabel,toolTip:_this3.columnHeadTooltip(_this3.props.columnsData[i].tooltipType,_this3.props.columnsData[i].toolTip,_this3.props.columnsData[i].columnLabel),toolTipTimeOut:30000,mouseDownActions:[],mouseUpActions:[function(){return _this3.props.manageParentViews();}],selectedClass:\"\"}));if(_this3.props.columnsData[i].control!=\"hidden\"){columnsHeads.push(columnHead);}//final column head action\nif(i===_this3.props.columnsData.length-1){columnsHeads.push(/*#__PURE__*/React.createElement(\"div\",{className:\"cell details grid-header\",style:{gridColumn:_this3.props.columnsData.length+2,gridRow:1,zIndex:200+_this3.numCols+2}},/*#__PURE__*/React.createElement(AppButton,{buttonType:\"button-custom\",classes:\"add-column\",navPath:\"/catalog/spreadsheet\",OnClick:function OnClick(){return _this3.props.addAction(\"add-attribute\");},tooltipType:\"custom\",tooltip:toolTipContent.insertColumn(),iconCenter:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-plus\",width:\"0.5rem\",height:\"100%\"})}),/*#__PURE__*/React.createElement(CatmanIcon,{classes:\"shading-l-r\",iconName:\"fader-right-to-left\",width:\"0.5rem\",height:\"100%\"})));}//create the selected overlay\nif(((_this3$props$focusedI2=_this3.props.focusedItem)===null||_this3$props$focusedI2===void 0?void 0:_this3$props$focusedI2.cell)===i+2&&_this3.props.focusedItem.editDrawerOpen===true){var selectedIndicator=/*#__PURE__*/React.createElement(\"div\",{className:\"cell selected-indicator\",style:{gridColumn:i+2,gridRowStart:_this3.cellRange.startRow,gridRowEnd:_this3.cellRange.endRow+1}});columnsHeads.push(selectedIndicator);}};for(var i=0;i<this.props.columnsData.length;i++){_loop3(i);}return columnsHeads;}//HOVER ROW STYLE\n},{key:\"gridStyles\",value:function gridStyles(){//This let's us have a hover row effect with css grid\n//This way we don't have to put containers around each row just for visual cue\nvar style=\"\\n            .row-\".concat(this.state.hoveredRow,\" {\\n                background-color: #f4f4f5;                \\n            }\\n            \\n            .row-\").concat(this.state.hoveredRow,\" .cell-editable{\\n                z-index:100;\\n            }\\n            \\n            .row-\").concat(this.state.hoveredRow,\" p{\\n                    color: #473F4A  ;\\n            }\\n            \");return/*#__PURE__*/React.createElement(\"style\",{dangerouslySetInnerHTML:{__html:\"\".concat(style)}});}},{key:\"clickCellsActions\",value:function clickCellsActions(){this.setState({mouseIsDown:false});}//DRAG AREA - create bounding box while dragging\n},{key:\"getDragArea\",value:function getDragArea(){var _this4=this;//Only run if mouse is down\nif(this.state.mouseIsDown===true){var calcStyles=function calcStyles(){//calculate where the drag area will draw\nvar coordinates={top:_this4.state.initialMouseY,bottom:win.windowSize().height-_this4.state.mouseY,left:_this4.state.initialMouseX,right:win.windowSize().width-_this4.state.mouseX};if(_this4.state.initialMouseY<=_this4.state.mouseY){coordinates.top=_this4.state.initialMouseY;coordinates.bottom=win.windowSize().height-_this4.state.mouseY;}else if(_this4.state.initialMouseY>=_this4.state.mouseY){coordinates.top=win.mousePos.y;coordinates.bottom=win.windowSize().height-_this4.state.initialMouseY;}if(_this4.state.mouseX>=_this4.state.initialMouseX){coordinates.left=_this4.state.initialMouseX;coordinates.right=win.windowSize().width-_this4.state.mouseX;}else if(_this4.state.mouseY>=_this4.state.initialMouseY){coordinates.left=win.mousePos.x;coordinates.right=win.windowSize().width-_this4.state.initialMouseX;}if(_this4.state.mouseX<=_this4.state.initialMouseX&&_this4.state.initialMouseY>=_this4.state.mouseY){coordinates.left=_this4.state.mouseX;coordinates.right=win.windowSize().width-_this4.state.initialMouseX;}return coordinates;};var dragArea=/*#__PURE__*/React.createElement(\"div\",{className:\"drag-area\",style:calcStyles()},/*#__PURE__*/React.createElement(\"div\",{className:\"drag-inner-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"tool-tip\"},toolTipContent.clickDragGrid())));return ReactDOM.createPortal(dragArea,this.root());}}//Mouse move, this is used for defining the drag area rectangle but could be used for other stuff\n},{key:\"mouseMoveActions\",value:function mouseMoveActions(){this.setState({mouseX:win.mousePos.x,mouseY:win.mousePos.y});}//APP CUES aka Super tooltips\n},{key:\"manageAppCues\",value:function manageAppCues(){console.log(\"selection set length\",this.selectionSet);if(this.selectionSet.length>1){toolTipContent.gridDragTutorial++;}console.log(\"grid tut \",toolTipContent.gridDragTutorial);}},{key:\"render\",value:function render(){var _this5=this;var columnHeaders=this.getColumnHeaders();var testTooltip=/*#__PURE__*/React.createElement(\"div\",{className:\"tool-tip\",style:{height:\"344px\"}},toolTipContent.clickDragGrid());var constructedGrid=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"data-grid \".concat(this.props.classes)},this.gridStyles(),/*#__PURE__*/React.createElement(\"div\",{className:\"viewport\",onMouseMove:function onMouseMove(){return _this5.mouseMoveActions();}},columnHeaders,this.getGridItems())),this.getDragArea());return constructedGrid;}}]);return DataGrid;}(React.Component);","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/data-grid/data-grid.tsx"],"names":["React","AppButton","CatmanIcon","Tile","toolTipContent","ToolTipContent","ReactDOM","win","DataGrid","props","selectionSet","selectedCells","numCols","numRows","startSelectionRow","startSelectionCell","root","document","getElementById","cellRange","_checkedRows","iconForCheckBox","row","i","state","checkedRows","length","updateSelectionState","setState","columnHeadTooltip","tooltiptype","tooltip","header","workingDataSet","data","hoveredRow","mouseIsDown","mouseX","mouseY","initialMouseX","initialMouseY","startCell","endCell","startRow","endRow","getNumColumns","getNumRows","cell","columnName","clearSelection","push","selected","columnsData","j","console","log","splice","selectionCallback","undefined","selectedItems","lastRow","newItem","cells","productFields","x","y","index","value","mousePos","manageSelection","manageAppCues","toString","found","selectedCell","showSelectRow","gridColumn","gridRow","zIndex","manageCheckbox","hoverRowAction","selectRow","control","clickCellsActions","mouseOutRowAction","mouseDownAction","manageParentViews","mouseUpAction","checkSelected","getProductUniqueID","singleProduct","columnsHeads","columnActiveCheck","focusedItem","editDrawerOpen","tileType","cellClass","columnHead","columnLabel","tooltipType","toolTip","addAction","insertColumn","selectedIndicator","gridRowStart","gridRowEnd","style","__html","calcStyles","coordinates","top","bottom","windowSize","height","left","right","width","dragArea","clickDragGrid","createPortal","gridDragTutorial","columnHeaders","getColumnHeaders","testTooltip","constructedGrid","classes","gridStyles","mouseMoveActions","getGridItems","getDragArea","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport {iDataGridItem} from \"./data-types-for-data-grid\";\nimport AppButton from \"../button/app-button\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport {selectedStateType, Tile} from \"../tiles/tile-component\";\nimport {toolTipContent} from \"../../views/tool-tip-content/content-tool-tips\";\nimport camelcase from \"camelcase\";\nimport {appColumns, iColumn} from \"../../_sample-data/columns\";\nimport {DataManager} from \"../../data-components/data-manager/data-manager\";\nimport classesIllustration from \"../../images/SVG/illustration-classes.svg\";\nimport {ToolTipContent} from \"../heru-tool-tip/tool-tip-content\";\nimport ReactDOM from \"react-dom\";\nimport {win} from \"../../index\";\nimport {focusInputType} from \"../../views/catalog-views/catalog-details/catalog-details-view\";\n\n//data grid data should be an array of arrays\n//each product is an array of attributes\ninterface iPROPS {\n    data : iDataGridItem[][];\n    manageParentViews : Function;\n    selectionCallback? : Function;\n    columnsData : iColumn[];\n    classes? : string;\n    addAction : Function;\n    focusedItem? : focusInputType;\n}\n\ninterface iSTATE {\n    selectionSet : selectionObject[];\n    checkedRows :number[];\n    workingDataSet : iDataGridItem[][];\n    hoveredRow : string;\n    mouseIsDown : boolean;\n    mouseX : number;\n    mouseY : number;\n    initialMouseX : number;\n    initialMouseY : number;\n}\n\nexport type selectionObject = {\n    row : number;\n    cell : number;\n    selected : boolean;\n    columnName : string;\n}\n\nexport class DataGrid extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n        this.state = {\n            workingDataSet : this.props.data,\n            selectionSet : [],\n            checkedRows : [],\n            hoveredRow : \"\",\n            mouseIsDown : false,\n            mouseX : 0,\n            mouseY : 0,\n            initialMouseX : 0,\n            initialMouseY : 0\n        };\n        this.startSelectionRow = 0;\n        this.startSelectionCell = 0;\n\n        this.cellRange = {\n            startCell : 0,\n            endCell : 0,\n            startRow : 0,\n            endRow : 0,\n        };\n\n        this.numCols = this.getNumColumns();\n        this.numRows = this.getNumRows();\n    }\n    selectionSet : selectionObject[] = [];\n    selectedCells : iDataGridItem[] = [];\n    numCols : number;\n    numRows: number;\n    startSelectionRow : number;\n    startSelectionCell : number;\n\n    //used root for portals for overlays\n    root = ()=>{\n        let root : any | HTMLElement = document.getElementById(\"root\");\n        if(root != null){\n            return root;\n        }\n    };\n\n    cellRange : any;\n    _checkedRows : number[] = [];\n\n    manageSelection(row:number, cell:number, columnName : string,  clearSelection : boolean){\n\n        if(clearSelection){\n            this.selectionSet = [];\n            this._checkedRows = [];\n        }\n\n        if(this.startSelectionRow > row){\n            this.cellRange.startRow = row;\n            this.cellRange.endRow = this.startSelectionRow\n        }else{\n            this.cellRange.startRow = this.startSelectionRow;\n            this.cellRange.endRow = row;\n        }\n\n        if(this.startSelectionCell > cell){\n            this.cellRange.startCell = cell;\n            this.cellRange.endCell = this.startSelectionCell;\n        }else {\n            this.cellRange.startCell = this.startSelectionCell;\n            this.cellRange.endCell = cell;\n        }\n\n        if(row === this.startSelectionRow && cell === this.startSelectionCell){\n            this.selectionSet.push(\n                {\n                    row: row,\n                    cell: cell,\n                    selected : true,\n                    columnName : this.props.columnsData[cell-2].columnName\n                    //columnName : appColumns.getColumns[cell-2].columnName\n                }\n            );\n        }\n\n        for( let i = this.cellRange.startRow; i < this.cellRange.endRow+1; i++){\n            for(let j= this.cellRange.startCell; j < this.cellRange.endCell+1; j++){\n                this.selectionSet.push(\n                    {\n                        row: i,\n                        cell: j,\n                        selected : true,\n                        columnName : this.props.columnsData[j-2].columnName\n                    }\n                );\n            }\n        }\n\n        // handle single cell as start and end\n\n        console.log(\"@@@ this.selectionSet: \", this.selectionSet);\n        console.log(\"*** this.state.selectionSet: \", this.state.selectionSet);\n\n        if(this.selectionSet.length === 2){\n            if( this.selectionSet[0].row === this.selectionSet[1].row && this.selectionSet[0].cell === this.selectionSet[1].cell  ){\n                this.selectionSet.splice(1,1);\n            }\n        }\n\n        this.setState({\n            selectionSet : this.selectionSet,\n            checkedRows : this._checkedRows\n        });\n\n\n        if(this.props.selectionCallback !== undefined && this.props.selectionCallback !== null){\n           type iSelectedItem = { row : number, cells : number[], productFields : iDataGridItem[] };\n            let selectedItems : iSelectedItem[] = [  ];\n            let lastRow : number = 0;\n\n            // work through the selection set to organize things\n\n           i: for(let i=0; i < this.selectionSet.length; i++){\n                if(i===0){\n                    //if it's the first one let's create a new entry\n                    lastRow = this.selectionSet[0].row;\n                    let newItem : iSelectedItem = { row : lastRow, cells:[], productFields : []};\n                    selectedItems.push(newItem);\n                }\n\n                //loop over the existing list of rows to create new ones\n                    if(this.selectionSet[i].row === lastRow){\n                        //one more loop over the list to grab all the cells that belong to the row\n                        if(selectedItems[selectedItems.length-1].cells.length === 0){\n                            for(let j=0; j < this.selectionSet.length; j++){\n                                if(this.selectionSet[j].row === lastRow){\n                                    //if the row matches the last row, then push in the selected cell\n                                    selectedItems[selectedItems.length-1].cells.push( this.selectionSet[j].cell );\n                                }\n                            }\n                        }\n                    }else{\n                        lastRow = this.selectionSet[i].row;\n                        let newItem : iSelectedItem = { row : lastRow, cells:[], productFields : []};\n                        selectedItems.push(newItem);\n                    }\n            }\n\n           for(let x=0; x < selectedItems.length; x++){\n                for(let y=0; y < this.state.workingDataSet[selectedItems[x].row-2].length; y++){\n                    selectedItems[x].productFields.push(this.state.workingDataSet[selectedItems[x].row-2][y] )\n                }\n\n           }\n\n\n            this.props.selectionCallback(selectedItems, this._checkedRows, \"standard-launch\");\n         }\n    }\n\n    clearSelection(){\n        this.setState({selectionSet:[], checkedRows:[]});\n        this._checkedRows = [];\n        this.selectionSet = [];\n    }\n\n    checkSelected(row:number, cell:number):selectedStateType{\n        for(let i=0; i<this.state.selectionSet.length; i++){\n            if( this.state.selectionSet[i].row === row && this.state.selectionSet[i].cell === cell){\n                return \"selected\";\n            }\n        }\n        //if nothing is found, return false because it isn't selected\n        return \"\";\n    }\n\n    getNumColumns(){\n        //TODO swap this out to calculating total normalized columns\n\n        return this.props.columnsData.length;\n    }\n\n    getNumRows(){\n       if(this.state.workingDataSet.length > 0){\n           return this.state.workingDataSet.length;\n       }else{\n           return this.props.data.length;\n       }\n    }\n\n    getProductUniqueID(index : number){\n\n        for(let j=0; j < this.state.workingDataSet[index].length; j++){\n            if(this.state.workingDataSet[index][j].columnName === \"uniqueID\"){\n                return this.state.workingDataSet[index][j].value;\n            }\n        }\n    }\n\n    mouseDownAction(row : number, cell:number){\n        this.startSelectionCell = cell;\n        this.startSelectionRow = row;\n        this.setState({\n            mouseIsDown : true,\n            initialMouseX : win.mousePos.x,\n            initialMouseY : win.mousePos.y\n        });\n    }\n\n    mouseUpAction(row:number, cell:number, columnName : string){\n        this.setState({mouseIsDown : false});\n        this.manageSelection(row, cell, columnName, true);\n        console.log(\"selection set: \", this.selectionSet);\n        this.manageAppCues();\n    }\n\n\n    hoverRowAction(row:number){\n        this.setState({hoveredRow : row.toString()});\n    }\n    mouseOutRowAction(){\n        this.setState({hoveredRow : \"\"});\n    }\n\n    manageCheckbox(row : number){\n\n        //find if this number is in the list\n        let found : boolean = false;\n\n        console.log(\"@@ checked rows: \",row);\n\n        for(let i=0; i < this._checkedRows.length; i++){\n            if(this._checkedRows[i] === row){\n                //if it is in the list remove it which unchecks\n                this._checkedRows.splice(i, 1);\n                this.setState({checkedRows : this._checkedRows});\n                found = true;\n            }\n        }\n        if(found === false){\n            this._checkedRows.push(row);\n            this.setState({checkedRows : this._checkedRows});\n\n        }\n\n        //handle selecting the checked\n        //First reset the cell selection\n        this.selectionSet = [];\n\n        for(let i=0; i < this._checkedRows.length; i++){\n            for(let j=0; j < this.state.workingDataSet[this._checkedRows[i]].length; j++ ){\n                let selectedCell : selectionObject = {\n                    row : this._checkedRows[i]+2,\n                    cell : j+2,\n                    selected : true,\n                    columnName : this.props.columnsData[j].columnName\n                };\n                this.selectionSet.push(selectedCell);\n            }\n        }\n\n\n        this.setState({selectionSet : this.selectionSet});\n        if(this.props.selectionCallback !== undefined){\n            this.props.selectionCallback(this.state.selectionSet, this.state.checkedRows, \"checkbox-launched\");\n        }\n        //once people use the tool, we can hide the tool tip\n        toolTipContent.showSelectRow = false;\n    }\n\n    switchToEditModeFromCheckBoxMode(){\n        //handle switching from checkbox mode to cell selection mode\n        //First reset the cell selection\n\n        console.log(\"switch to edit mode\");\n\n\n        this._checkedRows = [];\n        this.setState({\n            checkedRows : this._checkedRows\n        });\n        console.log(\"switch to edit mode\", this.selectionSet);\n        console.log(\"switch to edit mode\", this.state.selectionSet);\n        if(this.props.selectionCallback !== undefined){\n            this.props.selectionCallback(this.state.selectionSet, this.state.checkedRows, \"checkbox-launched\");\n        }\n    }\n\n    iconForCheckBox = (row : number):string=>{\n        for(let i=0; i < this.state.checkedRows.length; i++){\n            if(row === this.state.checkedRows[i]){\n                return \"checkbox-checked\"\n            }\n        }\n        return \"checkbox-unchecked\"\n    };\n\n    updateSelectionState = ()=>{\n        this.setState({selectionSet : this.selectionSet});\n\n    };\n\n    getGridItems(){\n        let cells : ReactElement[] = [];\n        for(let i=0; i < this.state.workingDataSet.length; i++){\n            for(let j=0; j < this.state.workingDataSet[i].length; j++){\n                if(j === 0){\n                    cells.push(\n                        <div id={`row-${i+2}-start`} className={`cell checkbox-main `} style={{gridColumn : j+1, gridRow : i+2, zIndex : 100 + (this.numRows - i) }}>\n                            <AppButton\n                                OnClick={()=>this.manageCheckbox(i)}\n                                hoverActions={[()=>this.hoverRowAction(i+2)]}\n                                buttonType=\"transparent-bg\"\n                                tooltipType=\"custom\"\n                                tooltip={toolTipContent.selectRow()}\n                                classes={`${this.iconForCheckBox(i)}`}\n                                iconCenter={(\n                                    <CatmanIcon\n                                        iconName={`${this.iconForCheckBox(i)}`}\n                                        width=\"100%\"\n                                        height=\"100%\"\n                                    />\n                                )}\n                            />\n                            <CatmanIcon\n                                classes={\"shading-l-r\"}\n                                iconName=\"fader-left-to-right\"\n                                width=\"0.5rem\"\n                                height=\"100%\"\n                            />\n                        </div>\n                    )\n                }\n\n                let cell = (\n                    <div className={`cell row-${i+2}`} style={{gridColumn : j+2, gridRow : i+2 }}>\n                        <Tile\n                            tileType={this.props.columnsData[j].control}\n                            tileLabel={this.state.workingDataSet[i][j].value}\n                            action={() => this.clickCellsActions()}\n                            hoverActions={[()=>this.hoverRowAction(i+2)]}\n                            mouseOutActions={[()=>this.mouseOutRowAction()]}\n                            mouseDownActions={\n                                [() => this.mouseDownAction(i+2,j+2)]\n                            }\n                            mouseUpActions={\n                                [\n                                    () => this.props.manageParentViews(),\n                                    () => this.mouseUpAction(i+2,j+2, this.props.columnsData[j].columnName)\n                                ]\n                            }\n                            selectedClass={this.checkSelected(i+2, j+2)}\n\n                        />\n\n                    </div>\n                );\n\n\n                if( this.props.columnsData[j].control !== \"hidden\"){\n                    cells.push(cell);\n                }\n\n                if(j === this.state.workingDataSet[i].length-1){\n                    cells.push(\n                        <div className=\"cell details\" style={{gridColumn : j+3, gridRow : i+2, zIndex : 100 + (this.numRows - i) }}>\n                            <AppButton\n                                buttonType=\"nav-link\"\n                                navPath={`/catalog/spreadsheet?product=${this.getProductUniqueID(i)}`}\n                                tooltipType=\"custom\"\n                                tooltip={toolTipContent.singleProduct()}\n                                iconCenter={(\n                                    <CatmanIcon\n                                        iconName=\"go-arrow\"\n                                        width=\"1rem\"\n                                        height=\"100%\"\n                                    />\n                                )}\n                            />\n                            <CatmanIcon\n                                classes={\"shading\"}\n                                iconName=\"fader-right-to-left\"\n                                width=\"0.5rem\"\n                                height=\"100%\"\n                            />\n\n                        </div>\n                    )\n                }\n            }\n        }\n\n        return cells;\n    }\n\n    columnHeadTooltip = (tooltiptype : \"custom\" | \"basic\", tooltip:ReactElement | string, header:string)=>{\n\n        switch (tooltiptype) {\n            case \"basic\":\n                return(<ToolTipContent\n                    header={header}\n                    copy={ tooltip }\n                    tooltipType=\"deluxe\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"info-icon-help\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />);\n            case \"custom\":\n                return tooltip;\n        }\n\n        return (<></>)\n    };\n\n    getColumnHeaders(){\n        let columnsHeads : ReactElement[] = [];\n\n        //Header checkbox for \"select all\"\n        for(let i=0; i < this.props.columnsData.length; i++ ){\n            if(i === 0){\n                columnsHeads.push(\n                    <div className=\"cell checkbox-main grid-header\" style={{gridColumn : i+1, gridRow : 1, zIndex : 120 + (this.numCols) }}>\n                        <AppButton\n                            OnClick={()=>this.manageCheckbox(i)}\n                            buttonType=\"transparent-bg\"\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.selectRow()}\n                            classes={` `}\n                            iconCenter={(\n                                <CatmanIcon\n                                    iconName={`${this.iconForCheckBox(i)}`}\n                                    width=\"0.5rem\"\n                                    height=\"100%\"\n                                />\n                            )}\n                        />\n                    </div>\n                )\n            }\n\n            //Handling the something-in-column selected visual indicator\n            const columnActiveCheck = ()=>{\n                if(this.props.focusedItem?.cell === (i+2) && this.props.focusedItem.editDrawerOpen === true){\n                    return {tileType:\"header-active\", cellClass:\"active\"};\n                }else{\n                    return {tileType:\"column-header\", cellClass:\"\"};\n                }\n            };\n\n\n            let columnHead = (\n                <div className={`cell grid-header ${columnActiveCheck().cellClass}`} style={{gridColumn : i+2, gridRow : 1, zIndex: this.numRows+100+i  }}>\n                    <Tile\n                        tileType={columnActiveCheck().tileType}\n                        tileLabel={this.props.columnsData[i].columnLabel}\n                        toolTip={ this.columnHeadTooltip(\n                            this.props.columnsData[i].tooltipType,\n                            this.props.columnsData[i].toolTip,\n                            this.props.columnsData[i].columnLabel\n                        )}\n                        toolTipTimeOut={30000}\n                        mouseDownActions={\n                            [ ]\n                        }\n                        mouseUpActions={\n                            [\n                                () => this.props.manageParentViews()\n                            ]\n                        }\n                        selectedClass={\"\"}\n                    />\n                </div>\n            );\n\n            if(this.props.columnsData[i].control != \"hidden\"){\n                columnsHeads.push(columnHead);\n            }\n\n            //final column head action\n            if(i === this.props.columnsData.length-1){\n                columnsHeads.push(\n                    <div className=\"cell details grid-header\"\n                         style={{gridColumn : this.props.columnsData.length+2, gridRow : 1, zIndex : (200 + this.numCols+2) }}\n                        >\n                        <AppButton\n                            buttonType=\"button-custom\"\n                            classes=\"add-column\"\n                            navPath={`/catalog/spreadsheet`}\n                            OnClick={()=>this.props.addAction(\"add-attribute\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.insertColumn()}\n                            iconCenter={(\n                                <CatmanIcon\n                                    iconName=\"icon-plus\"\n                                    width=\"0.5rem\"\n                                    height=\"100%\"\n                                />\n                            )}\n                        />\n                        <CatmanIcon\n                            classes={\"shading-l-r\"}\n                            iconName=\"fader-right-to-left\"\n                            width=\"0.5rem\"\n                            height=\"100%\"\n                        />\n                    </div>\n                )\n            }\n\n\n            //create the selected overlay\n            if(this.props.focusedItem?.cell === (i+2) && this.props.focusedItem.editDrawerOpen === true){\n                           let selectedIndicator = (\n                               <div className=\"cell selected-indicator\" style={{gridColumn : i+2, gridRowStart : this.cellRange.startRow, gridRowEnd:this.cellRange.endRow+1 }}>\n\n                               </div>\n                           );\n                columnsHeads.push(selectedIndicator)\n            }\n        }\n\n        return( columnsHeads );\n    }\n\n    //HOVER ROW STYLE\n    gridStyles(){\n        //This let's us have a hover row effect with css grid\n        //This way we don't have to put containers around each row just for visual cue\n            let style = `\n            .row-${this.state.hoveredRow} {\n                background-color: #f4f4f5;                \n            }\n            \n            .row-${this.state.hoveredRow} .cell-editable{\n                z-index:100;\n            }\n            \n            .row-${this.state.hoveredRow} p{\n                    color: #473F4A  ;\n            }\n            `;\n\n\n\n        return <style dangerouslySetInnerHTML={{ __html: `${style}` }} />\n    }\n\n    clickCellsActions(){\n        this.setState({mouseIsDown : false})\n    }\n\n    //DRAG AREA - create bounding box while dragging\n    getDragArea(){\n        //Only run if mouse is down\n        if(this.state.mouseIsDown === true){\n            let calcStyles =()=> {\n                //calculate where the drag area will draw\n                let coordinates = {\n                    top : this.state.initialMouseY,\n                    bottom : win.windowSize().height - this.state.mouseY,\n                    left : this.state.initialMouseX,\n                    right: win.windowSize().width - this.state.mouseX\n                };\n\n                if(this.state.initialMouseY <=  this.state.mouseY ){\n                    coordinates.top = this.state.initialMouseY;\n                    coordinates.bottom = win.windowSize().height - this.state.mouseY;\n                }else if(this.state.initialMouseY >= this.state.mouseY){\n                    coordinates.top = win.mousePos.y;\n                    coordinates.bottom = win.windowSize().height - this.state.initialMouseY;\n                }\n\n                if( this.state.mouseX >=  this.state.initialMouseX ){\n                    coordinates.left = this.state.initialMouseX;\n                    coordinates.right = win.windowSize().width - this.state.mouseX;\n                }else if( this.state.mouseY >= this.state.initialMouseY){\n                    coordinates.left = win.mousePos.x;\n                    coordinates.right = win.windowSize().width - this.state.initialMouseX;\n                }\n\n                if( this.state.mouseX <=  this.state.initialMouseX && this.state.initialMouseY >=  this.state.mouseY ){\n                    coordinates.left = this.state.mouseX;\n                    coordinates.right = win.windowSize().width - this.state.initialMouseX;\n                }\n                return coordinates;\n            };\n            let dragArea = (\n                <div\n                    className=\"drag-area\"\n                    style={ calcStyles() }\n                >\n                    <div className=\"drag-inner-container\">\n                        <div className=\"tool-tip\">\n                            {toolTipContent.clickDragGrid()}\n                        </div>\n                    </div>\n                </div>\n            );\n            return ReactDOM.createPortal(dragArea, this.root());\n        }\n    }\n\n    //Mouse move, this is used for defining the drag area rectangle but could be used for other stuff\n    mouseMoveActions(){\n        this.setState({mouseX : win.mousePos.x, mouseY : win.mousePos.y})\n    }\n\n    //APP CUES aka Super tooltips\n    manageAppCues(){\n        console.log(\"selection set length\", this.selectionSet);\n\n        if(this.selectionSet.length > 1){\n            toolTipContent.gridDragTutorial++;\n        }\n        console.log(\"grid tut \", toolTipContent.gridDragTutorial);\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n\n        let columnHeaders : ReactElement[] = this.getColumnHeaders();\n\n        let testTooltip : ReactElement = (\n            <div className=\"tool-tip\" style={{height : \"344px\"}}>\n                {toolTipContent.clickDragGrid()}\n            </div>\n        );\n\n        let constructedGrid : ReactElement = (\n            <>\n                <div className={`data-grid ${this.props.classes}`}>\n                    {this.gridStyles()}\n                    <div className=\"viewport\" onMouseMove={()=>this.mouseMoveActions()}>\n                        {columnHeaders}\n                        {this.getGridItems()}\n                    </div>\n                </div>\n                {this.getDragArea()}\n\n            </>\n        );\n\n        return constructedGrid;\n    }\n}"]},"metadata":{},"sourceType":"module"}