{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/divider-line/divider-line.tsx\";\nimport * as React from \"react\";\nexport class DividerLine extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getLine() {\n    switch (this.props.dividerType) {\n      case \"solid\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"divider-line\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }\n        }));\n\n      case \"labeled\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"divider-line\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"divider-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }\n        }, this.props.labelText), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"divider-right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }\n        })));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.getLine());\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/divider-line/divider-line.tsx"],"names":["React","DividerLine","Component","constructor","props","getLine","dividerType","labelText","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAYA,OAAO,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAAyD;AAC5DC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;AACH;;AAEDC,EAAAA,OAAO,GAAE;AACL,YAAQ,KAAKD,KAAL,CAAWE,WAAnB;AACI,WAAK,OAAL;AACI,4BACI,uDACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;;AAKJ,WAAK,SAAL;AACI,4BACI,uDACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsB,KAAKF,KAAL,CAAWG,SAAjC,CAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ,CADJ,CADJ;AARR;AAkBH;;AAEDC,EAAAA,MAAM,GAAsK;AACxK,wBAAQ,0CAAG,KAAKH,OAAL,EAAH,CAAR;AACH;;AA5B2D","sourcesContent":["import * as React from \"react\";\n\n\ninterface iPROPS {\n    dividerType : \"solid\" | \"labeled\";\n    labelText? : string\n}\n\ninterface iSTATE {\n\n}\n\nexport class DividerLine extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n    }\n\n    getLine(){\n        switch (this.props.dividerType) {\n            case \"solid\":\n                return(\n                    <>\n                        <div className=\"divider-line\"></div>\n                    </>\n                );\n            case \"labeled\":\n                return(\n                    <>\n                        <div className=\"divider-line\">\n                            <div className=\"divider-left\"></div>\n                            <p className=\"label\">{this.props.labelText}</p>\n                            <div className=\"divider-right\"></div>\n                        </div>\n                    </>\n                )\n        }\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (<>{this.getLine()}</>);\n    }\n}"]},"metadata":{},"sourceType":"module"}