{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/catalog-views/catalog-details/single-product-view.tsx\";\nimport * as React from \"react\"; //Configuration data:\n\nexport class CatalogSingleProduct extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.singleProductData = uniqueID => {\n      let product = [{\n        value: \"string\",\n        column: \"string\",\n        attrType: \"user-gen\",\n        class: \"default\"\n      }];\n\n      for (let i = 0; i < this.props.productData.length; i++) {\n        for (let j = 0; j < this.props.productData[i].length; j++) {\n          if (this.props.productData[i][j].column === \"uniqueID\" && this.props.productData[i][j].value === uniqueID) {\n            product = this.props.productData[i];\n          }\n        }\n      }\n\n      return product;\n    };\n  }\n\n  getProductPage() {\n    let myProduct = this.singleProductData(this.props.uniqueID);\n    console.clear();\n    console.log(\"product\", myProduct);\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.closeSingleProduct(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Back\"), this.props.uniqueID, this.getProductPage());\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/catalog-views/catalog-details/single-product-view.tsx"],"names":["React","CatalogSingleProduct","Component","constructor","props","singleProductData","uniqueID","product","value","column","attrType","class","i","productData","length","j","getProductPage","myProduct","console","clear","log","render","closeSingleProduct"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB,C,CAEA;;AAoBA,OAAO,MAAMC,oBAAN,SAAmCD,KAAK,CAACE,SAAzC,CAAkE;AACrEC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;;AADsB,SAG1BC,iBAH0B,GAGLC,QAAD,IAAqC;AAErD,UAAIC,OAAyB,GAAG,CAAC;AAC7BC,QAAAA,KAAK,EAAG,QADqB;AAE7BC,QAAAA,MAAM,EAAG,QAFoB;AAG7BC,QAAAA,QAAQ,EAAG,UAHkB;AAI7BC,QAAAA,KAAK,EAAG;AAJqB,OAAD,CAAhC;;AAMA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAG,KAAKR,KAAL,CAAWS,WAAX,CAAuBC,MAAxC,EAAgDF,CAAC,EAAjD,EAAoD;AAChD,aAAI,IAAIG,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAG,KAAKX,KAAL,CAAWS,WAAX,CAAuBD,CAAvB,EAA0BE,MAA3C,EAAmDC,CAAC,EAApD,EAAuD;AACnD,cAAI,KAAKX,KAAL,CAAWS,WAAX,CAAuBD,CAAvB,EAA0BG,CAA1B,EAA6BN,MAA7B,KAAwC,UAAxC,IAAsD,KAAKL,KAAL,CAAWS,WAAX,CAAuBD,CAAvB,EAA0BG,CAA1B,EAA6BP,KAA7B,KAAuCF,QAAjG,EAA0G;AACtGC,YAAAA,OAAO,GAAG,KAAKH,KAAL,CAAWS,WAAX,CAAuBD,CAAvB,CAAV;AAEH;AACJ;AACJ;;AAED,aAAOL,OAAP;AACH,KArByB;AAEzB;;AAqBDS,EAAAA,cAAc,GAAE;AACZ,QAAIC,SAAS,GAAG,KAAKZ,iBAAL,CAAuB,KAAKD,KAAL,CAAWE,QAAlC,CAAhB;AACAY,IAAAA,OAAO,CAACC,KAAR;AACAD,IAAAA,OAAO,CAACE,GAAR,CAAY,SAAZ,EAAuBH,SAAvB;AACA,wBAAO,yCAAP;AACH;;AAGDI,EAAAA,MAAM,GAAE;AACJ,wBACI,uDACI;AAAQ,MAAA,OAAO,EAAE,MAAI,KAAKjB,KAAL,CAAWkB,kBAAX,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKlB,KAAL,CAAWE,QAFhB,EAGK,KAAKU,cAAL,EAHL,CADJ;AAOH;;AAxCoE","sourcesContent":["import * as React from \"react\";\n\n//Configuration data:\n\nimport {DataGrid} from \"../../../view-components/data-grid/data-grid\";\nimport {catmanData} from \"../../../_sample-data/products-data\";\nimport {TitleArea} from \"../../../view-components/title-area/title-area\";\nimport StickyThing from \"../../../view-components/sticky-panel/sticky-panel\";\nimport {appColumns} from \"../../../_sample-data/columns\";\nimport {iDataGridItem} from \"../../../view-components/data-grid/data-types-for-data-grid\";\n\n\ninterface iPROPS  {\n    uniqueID: string;\n    productData : iDataGridItem[][];\n    closeSingleProduct : Function;\n}\n\ninterface iSTATE{\n\n}\n\nexport class CatalogSingleProduct extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n    }\n    singleProductData = (uniqueID : string):iDataGridItem[]=>{\n\n        let product : iDataGridItem[] = [{\n            value : \"string\",\n            column : \"string\",\n            attrType : \"user-gen\",\n            class : \"default\"\n        }];\n        for(let i=0; i < this.props.productData.length; i++){\n            for(let j=0; j < this.props.productData[i].length; j++){\n                if( this.props.productData[i][j].column === \"uniqueID\" && this.props.productData[i][j].value === uniqueID){\n                    product = this.props.productData[i];\n\n                }\n            }\n        }\n\n        return product;\n    };\n\n    getProductPage(){\n        let myProduct = this.singleProductData(this.props.uniqueID)\n        console.clear();\n        console.log(\"product\", myProduct)\n        return(<></>)\n    }\n\n\n    render(){\n        return (\n            <>\n                <button onClick={()=>this.props.closeSingleProduct()}>Back</button>\n                {this.props.uniqueID}\n                {this.getProductPage()}\n            </>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}