{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/heru-tool-tip/tool-tip.tsx\";\nimport * as React from \"react\";\nimport { win } from \"../../index\";\nexport class WindowLevelCapture {\n  constructor() {\n    this.mousePosition = void 0;\n    this.mousePosition = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  get mousePos() {\n    return this.mousePosition;\n  }\n\n  getMousePosition(evt) {\n    this.mousePosition = {\n      x: evt.clientX,\n      y: evt.clientY\n    }; //console.log(\"mouse position\", evt.clientX, evt.clientY);\n  }\n\n  windowEvent() {\n    window.addEventListener('mousemove', evt => this.getMousePosition(evt));\n  }\n\n}\nexport class ToolTip extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tooltipPosition: {\n        x: 0,\n        y: 0\n      }\n    };\n  }\n\n  updateMouePos() {\n    if (this.state.tooltipPosition.x !== win.mousePos.x && this.state.tooltipPosition.y !== win.mousePos.y) {\n      this.setState({\n        tooltipPosition: {\n          x: win.mousePos.x,\n          y: win.mousePos.y\n        }\n      });\n      console.log(\"state changed\");\n    }\n  }\n\n  componentDidMount() {\n    window.setInterval(() => this.updateMouePos(), 200);\n  }\n\n  render() {\n    let constructedToolTip = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, `x: ${this.state.tooltipPosition.x} y: ${this.state.tooltipPosition.y} `));\n    return constructedToolTip;\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/heru-tool-tip/tool-tip.tsx"],"names":["React","win","WindowLevelCapture","constructor","mousePosition","x","y","mousePos","getMousePosition","evt","clientX","clientY","windowEvent","window","addEventListener","ToolTip","Component","props","state","tooltipPosition","updateMouePos","setState","console","log","componentDidMount","setInterval","render","constructedToolTip"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AASA,SAAQC,GAAR,QAAkB,aAAlB;AAUA,OAAO,MAAMC,kBAAN,CAA2C;AAE9CC,EAAAA,WAAW,GAAG;AAAA,SADNC,aACM;AACV,SAAKA,aAAL,GAAqB;AAACC,MAAAA,CAAC,EAAC,CAAH;AAAKC,MAAAA,CAAC,EAAC;AAAP,KAArB;AACH;;AAED,MAAIC,QAAJ,GAAc;AACV,WAAO,KAAKH,aAAZ;AACH;;AAEDI,EAAAA,gBAAgB,CAACC,GAAD,EAAgB;AAC5B,SAAKL,aAAL,GAAqB;AAAEC,MAAAA,CAAC,EAAGI,GAAG,CAACC,OAAV;AAAmBJ,MAAAA,CAAC,EAAGG,GAAG,CAACE;AAA3B,KAArB,CAD4B,CAE5B;AAEH;;AAEDC,EAAAA,WAAW,GAAE;AACTC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EACKL,GAAD,IAAO,KAAKD,gBAAL,CAAsBC,GAAtB,CADX;AAEH;;AAnB6C;AAoClD,OAAO,MAAMM,OAAN,SAAsBf,KAAK,CAACgB,SAA5B,CAAqD;AACxDb,EAAAA,WAAW,CAACc,KAAD,EAAe;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,eAAe,EAAG;AAACd,QAAAA,CAAC,EAAC,CAAH;AAAMC,QAAAA,CAAC,EAAC;AAAR;AADV,KAAZ;AAGH;;AAEDc,EAAAA,aAAa,GAAE;AAEX,QAAG,KAAKF,KAAL,CAAWC,eAAX,CAA2Bd,CAA3B,KAAiCJ,GAAG,CAACM,QAAJ,CAAaF,CAA9C,IAAmD,KAAKa,KAAL,CAAWC,eAAX,CAA2Bb,CAA3B,KAAiCL,GAAG,CAACM,QAAJ,CAAaD,CAApG,EAAsG;AAClG,WAAKe,QAAL,CACI;AACIF,QAAAA,eAAe,EAAE;AACbd,UAAAA,CAAC,EAAEJ,GAAG,CAACM,QAAJ,CAAaF,CADH;AAEbC,UAAAA,CAAC,EAAEL,GAAG,CAACM,QAAJ,CAAaD;AAFH;AADrB,OADJ;AAOAgB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;AAEJ;;AAEDC,EAAAA,iBAAiB,GAAS;AACtBX,IAAAA,MAAM,CAACY,WAAP,CAAmB,MAAI,KAAKL,aAAL,EAAvB,EAA6C,GAA7C;AAEH;;AAEDM,EAAAA,MAAM,GAAsK;AACxK,QAAIC,kBAAkB,gBACpB,uDACI;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,MAAK,KAAKT,KAAL,CAAWC,eAAX,CAA2Bd,CAAE,OAAM,KAAKa,KAAL,CAAWC,eAAX,CAA2Bb,CAAE,GAA1E,CAFN,CADF;AAOA,WAAOqB,kBAAP;AACH;;AArCuD","sourcesContent":["import * as React from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {navSettings} from \"../../views/_common/nav-settings\";\nimport {CatalogOverviewView} from \"../../views/catalog-views/catalog-overview/catalog-overview-view\";\nimport ManageAttributesView from \"../../views/app-configuration-catman-views/manage-attributes/manage-attributes-view\";\nimport {ManageAttributeGroupsView} from \"../../views/app-configuration-catman-views/manage-attribute-groups/manage-attribute-groups-view\";\nimport {ManageAttributeMappingView} from \"../../views/app-configuration-catman-views/manage-attribute-mappings/manage-attribute-mapping-view\";\nimport ManageClassesView from \"../../views/app-configuration-catman-views/manage-classes/manage-classes-view\";\nimport {LandingPageView} from \"../../views/landing-page/landing-page-view\";\nimport {win} from \"../../index\";\n\ninterface iMousePos{\n    x:number;\n    y:number;\n}\n\ninterface iWindow{\n\n}\nexport class WindowLevelCapture implements iWindow{\n    private mousePosition : iMousePos;\n    constructor() {\n        this.mousePosition = {x:0,y:0};\n    }\n\n    get mousePos(){\n        return this.mousePosition;\n    }\n\n    getMousePosition(evt:MouseEvent){\n        this.mousePosition = { x : evt.clientX, y : evt.clientY};\n        //console.log(\"mouse position\", evt.clientX, evt.clientY);\n\n    }\n\n    windowEvent(){\n        window.addEventListener('mousemove',\n            (evt)=>this.getMousePosition(evt) )\n    }\n}\n\ninterface iPROPS{\n    toolTipPos : {\n        x : number,\n        y : number\n    }\n}\n\ninterface iSTATE {\n    tooltipPosition : {\n        x : number,\n        y : number\n    }\n}\n\nexport class ToolTip extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n        this.state ={\n            tooltipPosition : {x:0, y:0}\n        }\n    }\n\n    updateMouePos(){\n\n        if(this.state.tooltipPosition.x !== win.mousePos.x && this.state.tooltipPosition.y !== win.mousePos.y){\n            this.setState(\n                {\n                    tooltipPosition: {\n                        x: win.mousePos.x,\n                        y: win.mousePos.y\n                    }\n                });\n            console.log(\"state changed\");\n        }\n\n    }\n\n    componentDidMount(): void {\n        window.setInterval(()=>this.updateMouePos(), 200);\n\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        let constructedToolTip = (\n          <>\n              <div className=\"\"></div>\n                <p>{`x: ${this.state.tooltipPosition.x} y: ${this.state.tooltipPosition.y} `}</p>\n          </>\n        );\n\n        return constructedToolTip;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}