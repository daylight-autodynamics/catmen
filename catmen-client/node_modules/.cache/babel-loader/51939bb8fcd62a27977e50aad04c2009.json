{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/text-input/text-input.tsx\";\nimport * as React from \"react\";\nexport class TextInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.currentValue\n    };\n  }\n\n  onChangeActions(e) {\n    let keyVal = e.target;\n    console.log(\"inside input box\", keyVal.value); //this.setState({value : keyVal.value});\n\n    this.props.onChangeAction(this.props.row, this.props.cell, keyVal.value, this.props.columnName);\n  }\n\n  onFocusActions() {\n    if (this.props.onFocus !== undefined) {\n      this.props.onFocus(this.props.row, this.props.cell);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-TextInput-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-FloatLabel-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, this.props.label), /*#__PURE__*/React.createElement(\"input\", {\n      onFocus: () => this.onFocusActions(),\n      onChange: evt => this.onChangeActions(evt),\n      type: \"text\",\n      value: this.props.currentValue || '',\n      placeholder: \"\",\n      className: \"InputBox pl-TextInput-input has-text pl-FloatLabel-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/text-input/text-input.tsx"],"names":["React","TextInput","Component","constructor","props","state","value","currentValue","onChangeActions","e","keyVal","target","console","log","onChangeAction","row","cell","columnName","onFocusActions","onFocus","undefined","render","label","evt"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAkBA,OAAO,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAuD;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAiB;AACxB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAG,KAAKF,KAAL,CAAWG;AADV,KAAb;AAGH;;AAEDC,EAAAA,eAAe,CAACC,CAAD,EAAsB;AACjC,QAAIC,MAAM,GAAGD,CAAC,CAACE,MAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,MAAM,CAACJ,KAAvC,EAFiC,CAGjC;;AACA,SAAKF,KAAL,CAAWU,cAAX,CAA0B,KAAKV,KAAL,CAAWW,GAArC,EAA0C,KAAKX,KAAL,CAAWY,IAArD,EAA2DN,MAAM,CAACJ,KAAlE,EAAyE,KAAKF,KAAL,CAAWa,UAApF;AACH;;AAEDC,EAAAA,cAAc,GAAE;AACZ,QAAG,KAAKd,KAAL,CAAWe,OAAX,KAAuBC,SAA1B,EAAoC;AAChC,WAAKhB,KAAL,CAAWe,OAAX,CAAmB,KAAKf,KAAL,CAAWW,GAA9B,EAAmC,KAAKX,KAAL,CAAWY,IAA9C;AACH;AACJ;;AAEDK,EAAAA,MAAM,GAAsK;AACxK,wBACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqC,KAAKjB,KAAL,CAAWkB,KAAhD,CADJ,eAEI;AAAO,MAAA,OAAO,EAAE,MAAI,KAAKJ,cAAL,EAApB;AAA2C,MAAA,QAAQ,EAAGK,GAAD,IAAyB,KAAKf,eAAL,CAAqBe,GAArB,CAA9E;AAA+H,MAAA,IAAI,EAAC,MAApI;AAA2I,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWG,YAAX,IAA2B,EAA7K;AAAiL,MAAA,WAAW,EAAC,EAA7L;AAAgM,MAAA,SAAS,EAAC,0DAA1M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAOH;;AA7ByD","sourcesContent":["import * as React from \"react\";\nimport {ChangeEvent} from \"react\";\n\n\ninterface iPROPS {\n    label : string;\n    currentValue : string;\n    onChangeAction : Function\n    row? : number;\n    cell? : number;\n    columnName? : string;\n    onFocusAction? : Function;\n}\n\ninterface iSTATE{\n    value : string;\n}\n\nexport class TextInput extends React.Component<iPROPS, iSTATE>{\n    constructor(props : iPROPS) {\n        super(props);\n        this.state = {\n            value : this.props.currentValue\n        }\n    }\n\n    onChangeActions(e: React.ChangeEvent){\n        let keyVal = e.target as HTMLInputElement;\n        console.log(\"inside input box\", keyVal.value);\n        //this.setState({value : keyVal.value});\n        this.props.onChangeAction(this.props.row, this.props.cell, keyVal.value, this.props.columnName);\n    }\n\n    onFocusActions(){\n        if(this.props.onFocus !== undefined){\n            this.props.onFocus(this.props.row, this.props.cell);\n        }\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (\n            <div className=\"pl-TextInput-wrapper\" >\n                <div className=\"pl-FloatLabel-text\">{this.props.label}</div>\n                <input onFocus={()=>this.onFocusActions()} onChange={(evt:React.ChangeEvent)=>this.onChangeActions(evt as React.ChangeEvent)}  type=\"text\" value={this.props.currentValue || ''} placeholder=\"\" className=\"InputBox pl-TextInput-input has-text pl-FloatLabel-input\" />\n\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}