{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/_catman-configuration/upload-wizard.tsx\";\nimport * as React from \"react\";\nimport { toolTipContent } from \"../_common/tool-tip-content/content-tool-tips\";\nimport { CatmanIcon } from \"../../svg/icons/icons\";\nimport AppButton from \"../../view-components/button/app-button\";\nimport { DividerLine } from \"../../view-components/divider-line/divider-line\";\nimport { TextInput } from \"../../view-components/text-input/text-input\";\nexport class UploadWizard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wizardPanel: \"upload-1\"\n    };\n  }\n\n  element() {\n    switch (this.state.wizardPanel) {\n      case \"upload-1\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(AppButton, {\n          buttonType: \"drag-area-large\",\n          buttonLabel: \"Drag Files Here\",\n          tooltipType: \"custom\",\n          tooltip: toolTipContent.footerCancel(),\n          toolTipTimeOutInMS: 10000,\n          OnClick: () => this.props.addAction,\n          iconRight: /*#__PURE__*/React.createElement(CatmanIcon, {\n            iconName: \"icon-add-invert\",\n            classes: \" \",\n            height: \"100%\",\n            width: \"5rem\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(DividerLine, {\n          dividerType: \"labeled\",\n          labelText: \"OR\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }\n        }, \"Add Products Manually\"), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(TextInput, {\n          label: \"\",\n          currentValue: \"1\",\n          onChangeAction: () => {},\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }\n        })));\n\n      case \"upload-2\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  }\n\n  render() {\n    return this.element();\n  }\n\n} // export let uploadWizard : iWizardStep[] = [\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard  wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     }\n// ];","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/_catman-configuration/upload-wizard.tsx"],"names":["React","toolTipContent","CatmanIcon","AppButton","DividerLine","TextInput","UploadWizard","Component","constructor","props","state","wizardPanel","element","footerCancel","addAction","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,SAAQC,cAAR,QAA6B,+CAA7B;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AACA,SAAQC,WAAR,QAA0B,iDAA1B;AACA,SAAQC,SAAR,QAAwB,6CAAxB;AAYA,OAAO,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA0D;AAE7DC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,WAAW,EAAG;AADP,KAAX;AAGH;;AAEDC,EAAAA,OAAO,GAAE;AACL,YAAQ,KAAKF,KAAL,CAAWC,WAAnB;AACI,WAAK,UAAL;AACI,4BACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,SAAD;AACI,UAAA,UAAU,EAAE,iBADhB;AAEI,UAAA,WAAW,EAAC,iBAFhB;AAGI,UAAA,WAAW,EAAC,QAHhB;AAII,UAAA,OAAO,EAAEV,cAAc,CAACY,YAAf,EAJb;AAKI,UAAA,kBAAkB,EAAE,KALxB;AAMI,UAAA,OAAO,EAAE,MAAI,KAAKJ,KAAL,CAAWK,SAN5B;AAOI,UAAA,SAAS,eACL,oBAAC,UAAD;AACI,YAAA,QAAQ,EAAC,iBADb;AAEI,YAAA,OAAO,EAAC,GAFZ;AAGI,YAAA,MAAM,EAAC,MAHX;AAII,YAAA,KAAK,EAAC,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAiBI,oBAAC,WAAD;AAAa,UAAA,WAAW,EAAE,SAA1B;AAAqC,UAAA,SAAS,EAAE,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAjBJ,eAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAlBJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAE,EAAlB;AAAsB,UAAA,YAAY,EAAE,GAApC;AAAyC,UAAA,cAAc,EAAE,MAAI,CAAE,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAnBJ,CADR;;AAyBJ,WAAK,UAAL;AACI,4BAAO,yCAAP;AA5BR;AA8BH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WAAO,KAAKH,OAAL,EAAP;AACH;;AA5C4D,C,CA+CjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import * as React from \"react\";\nimport {iWizardStep} from \"../../view-components/wizard/wizard\";\nimport {ReactElement} from \"react\";\nimport {toolTipContent} from \"../_common/tool-tip-content/content-tool-tips\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport AppButton from \"../../view-components/button/app-button\";\nimport {DividerLine} from \"../../view-components/divider-line/divider-line\";\nimport {TextInput} from \"../../view-components/text-input/text-input\";\n\n\n\ninterface iPROPS{\n    addAction : Function\n}\n\ninterface iSTATE{\n    wizardPanel : \"upload-1\" | \"upload-2\" | \"upload-3\";\n}\n\nexport class UploadWizard extends React.Component<iPROPS, iSTATE>{\n\n    constructor(props:iPROPS) {\n        super(props);\n        this.state={\n            wizardPanel : \"upload-1\"\n        }\n    }\n\n    element(){\n        switch (this.state.wizardPanel) {\n            case \"upload-1\":\n                return(\n                        <div>\n                            <AppButton\n                                buttonType={\"drag-area-large\"}\n                                buttonLabel=\"Drag Files Here\"\n                                tooltipType=\"custom\"\n                                tooltip={toolTipContent.footerCancel()}\n                                toolTipTimeOutInMS={10000}\n                                OnClick={()=>this.props.addAction}\n                                iconRight={\n                                    <CatmanIcon\n                                        iconName=\"icon-add-invert\"\n                                        classes=\" \"\n                                        height=\"100%\"\n                                        width=\"5rem\"\n                                    />\n                                }\n                            />\n                            <DividerLine dividerType={\"labeled\"} labelText={\"OR\"} />\n                            <h3>Add Products Manually</h3>\n                            <div>\n                                <TextInput label={\"\"} currentValue={\"1\"} onChangeAction={()=>{}}/>\n                            </div>\n                        </div>\n                );\n            case \"upload-2\":\n                return(<></>)\n        }\n    }\n\n    render(){\n        return(this.element())\n    }\n}\n\n// export let uploadWizard : iWizardStep[] = [\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard  wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     }\n// ];"]},"metadata":{},"sourceType":"module"}