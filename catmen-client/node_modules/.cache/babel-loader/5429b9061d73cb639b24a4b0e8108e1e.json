{"ast":null,"code":"import _classCallCheck from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import AppButton from\"../button/app-button\";export var Navigation=/*#__PURE__*/function(_React$Component){_inherits(Navigation,_React$Component);var _super=_createSuper(Navigation);function Navigation(props){var _this;_classCallCheck(this,Navigation);_this=_super.call(this,props);_this.hoverActions=[];_this.state={infoPanelIndex:1,isHover:false};return _this;}_createClass(Navigation,[{key:\"sortNavItems\",value:function sortNavItems(){var groupedItems=[];groupedItems.push([this.props.navElements[0]]);//loop over each element and compare its group name to  , if not we'll create a new group\ni:for(var i=1;i<this.props.navElements.length;i++){//we'll start at one since we already pushed the first at zero\nh:for(var h=0;h<groupedItems.length;h++){if(groupedItems[h][0].presentationGroup===this.props.navElements[i].presentationGroup){groupedItems[h].push(this.props.navElements[i]);}else{//if we are at the end of both arrays then let's create a new group\nif(h===groupedItems.length-1){groupedItems.push([this.props.navElements[i]]);continue i;}}}}return groupedItems;}},{key:\"generateMenuBasedOnType\",value:function generateMenuBasedOnType(){switch(this.props.menuHelpStyle){case\"panel\":break;case\"searchable\":break;case\"no-help\":break;default:}}},{key:\"hoverInfoPanel\",value:function hoverInfoPanel(index){this.setState({infoPanelIndex:index,isHover:true});}},{key:\"hoverOutPanel\",value:function hoverOutPanel(){this.setState({isHover:false});}},{key:\"createElements\",value:function createElements(){var _this2=this;var itemGroups=this.sortNavItems();var constructedMenuItems=[];//let's keep track of all of the\nvar counter=0;//if the hovered index matches the current on-render index we'll store the info panel here\nvar infoPanel;for(var i=0;i<itemGroups.length;i++){//these are the actual buttons\nvar subMenuItems=[];//create an array of buttons that are part of that menu group\nvar _loop=function _loop(j){counter++;var count=counter;if(count===_this2.state.infoPanelIndex&&_this2.state.isHover===true){if(itemGroups[i][j].infoPanel!==undefined){infoPanel=itemGroups[i][j].infoPanel;}}var newButton=/*#__PURE__*/React.createElement(AppButton,{tooltipType:\"none\",tooltip:/*#__PURE__*/React.createElement(\"p\",null,\"menu tool tip\"),hoverActions:[function(){return _this2.hoverInfoPanel(count);}],key:\"\".concat(i+j).concat(i).concat(j),hoverLeaveActions:[function(){return _this2.hoverOutPanel();}],navPath:itemGroups[i][j].navPath,buttonType:\"nav-link\",buttonLabel:itemGroups[i][j].label,iconLeft:itemGroups[i][j].iconLeft,iconRight:itemGroups[i][j].iconRight,classes:\"main-nav-item\"});subMenuItems.push(newButton);};for(var j=0;j<itemGroups[i].length;j++){_loop(j);}//insert the created buttons into a group container\nvar subMenuGroup=/*#__PURE__*/React.createElement(\"div\",{key:\"\".concat(i),className:\"menu-sub-group\"},subMenuItems);constructedMenuItems.push(subMenuGroup);}var infoPanelFinal=/*#__PURE__*/React.createElement(React.Fragment,null);if(this.state.isHover===true){infoPanelFinal=/*#__PURE__*/React.createElement(\"div\",{className:\"info-panel\"},infoPanel);}//assemble those groups and put them in another main menu container\nvar finalMenu=/*#__PURE__*/React.createElement(\"div\",{key:0,className:\"menu-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"menu-main\"},constructedMenuItems),infoPanelFinal);return finalMenu;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,this.createElements());}}]);return Navigation;}(React.Component);","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/list-menu/intra-app-navigation.tsx"],"names":["React","AppButton","Navigation","props","hoverActions","state","infoPanelIndex","isHover","groupedItems","push","navElements","i","length","h","presentationGroup","menuHelpStyle","index","setState","itemGroups","sortNavItems","constructedMenuItems","counter","infoPanel","subMenuItems","j","count","undefined","newButton","hoverInfoPanel","hoverOutPanel","navPath","label","iconLeft","iconRight","subMenuGroup","infoPanelFinal","finalMenu","createElements","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport {iNavItem} from \"../_common/component-data-types\";\nimport AppButton from \"../button/app-button\";\n\nexport type menuFormatDataType = \"fly-out\" | \"slide-in\" | \"drop-down\";\nexport type menuHelpStyleDataType = \"panel\" | \"searchable\" | \"no-help\";\n\n\n\ninterface iPROPS {\n    navElements : iNavItem[];\n    menuHelpStyle : any;\n}\n\ninterface iSTATE{\n    infoPanelIndex : number;\n    isHover : boolean\n}\n\nexport class Navigation extends React.Component<iPROPS, iSTATE> {\n    constructor(props:iPROPS) {\n        super(props);\n        this.state ={\n            infoPanelIndex : 1,\n            isHover : false\n        }\n    }\n\n    hoverActions :any[] = [];\n    sortNavItems() : iNavItem[][]{\n        let groupedItems : iNavItem[][] = [];\n        groupedItems.push([this.props.navElements[0]]);\n\n        //loop over each element and compare its group name to  , if not we'll create a new group\n        i: for(let i=1; i < this.props.navElements.length; i++){\n            //we'll start at one since we already pushed the first at zero\n           h: for(let h=0; h < groupedItems.length; h++ ){\n                if( groupedItems[h][0].presentationGroup === this.props.navElements[i].presentationGroup ){\n                    groupedItems[h].push(this.props.navElements[i]);\n                }else{\n                    //if we are at the end of both arrays then let's create a new group\n                    if(h === groupedItems.length-1){\n                        groupedItems.push([this.props.navElements[i]]);\n                        continue i;\n                    }\n                }\n            }\n        }\n\n        return groupedItems;\n    }\n\n    generateMenuBasedOnType(){\n        switch (this.props.menuHelpStyle) {\n            case \"panel\":\n\n                break;\n            case \"searchable\":\n\n                break;\n            case \"no-help\":\n\n                break;\n\n            default:\n\n        }\n    }\n\n    hoverInfoPanel(index:number){\n        this.setState({\n            infoPanelIndex : index,\n            isHover : true\n        });\n\n    }\n\n    hoverOutPanel(){\n        this.setState({\n            isHover : false\n        });\n    }\n\n    createElements(){\n        let itemGroups = this.sortNavItems();\n        let constructedMenuItems : ReactElement[] = [];\n        //let's keep track of all of the\n        let counter : number =0;\n\n        //if the hovered index matches the current on-render index we'll store the info panel here\n        let infoPanel : any;\n\n        for(let i=0; i < itemGroups.length; i++ ){\n            //these are the actual buttons\n            let subMenuItems : ReactElement[] = [];\n\n            //create an array of buttons that are part of that menu group\n            for(let j=0; j < itemGroups[i].length; j++){\n                counter++;\n                let count = counter;\n                if(count === this.state.infoPanelIndex && this.state.isHover === true){\n                    if(itemGroups[i][j].infoPanel !== undefined){\n                        infoPanel = itemGroups[i][j].infoPanel;\n                    }\n                }\n\n                let newButton : ReactElement = (\n                    <AppButton\n                        tooltipType=\"none\"\n                        tooltip={<p>menu tool tip</p> }\n                        hoverActions={[()=>this.hoverInfoPanel(count)]} key={`${i+j}${i}${j}`}\n                        hoverLeaveActions={[()=>this.hoverOutPanel()]}\n                        navPath={itemGroups[i][j].navPath}\n                        buttonType=\"nav-link\"\n                        buttonLabel={itemGroups[i][j].label}\n                        iconLeft={itemGroups[i][j].iconLeft}\n                        iconRight={itemGroups[i][j].iconRight}\n                        classes=\"main-nav-item\"\n                    /> );\n                subMenuItems.push(newButton);\n            }\n\n            //insert the created buttons into a group container\n            let subMenuGroup : ReactElement = (<div key={`${i}`} className=\"menu-sub-group\">{subMenuItems}</div>);\n            constructedMenuItems.push(subMenuGroup);\n        }\n\n        let infoPanelFinal : ReactElement = (<></>);\n\n        if(this.state.isHover === true){\n            infoPanelFinal = (<div className=\"info-panel\">{infoPanel}</div>);\n        }\n\n        //assemble those groups and put them in another main menu container\n        let finalMenu : ReactElement = (\n            <div key={0} className=\"menu-container\">\n               <div className=\"menu-main\">{constructedMenuItems}</div>\n                {infoPanelFinal}\n            </div>);\n        return finalMenu;\n    }\n    render(){\n        return (<>\n            {this.createElements()}\n        </>);\n    }\n}"]},"metadata":{},"sourceType":"module"}