{"ast":null,"code":"import _toConsumableArray from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import{Wizard}from\"../../../view-components/wizard/wizard\";import{toolTipContent}from\"../../tool-tip-content/content-tool-tips\";import{CatmanIcon}from\"../../../svg/icons/icons\";import AppButton from\"../../../view-components/button/app-button\";import{dataManagerMain}from\"../../../index\";import{StandardTextInput}from\"../../../view-components/text-input/standard-text-input\";import{DataGrid}from\"../../../view-components/data-grid/data-grid\";import{DataGridWithEditDrawer}from\"../../../view-components/data-grid/data-grid-with-edit-drawer\";export var AddVariantsWizard=/*#__PURE__*/function(_React$Component){_inherits(AddVariantsWizard,_React$Component);var _super=_createSuper(AddVariantsWizard);function AddVariantsWizard(props){var _this;_classCallCheck(this,AddVariantsWizard);_this=_super.call(this,props);_this.stagingAreaProducts=[];_this.numberOfVariants=1;_this.getInputValue=function(row,cell,value){console.log(\"input value\",row,\" \",cell,\" \",value);_this.numberOfVariants=parseInt(value);};_this.state={wizardPanel:\"start\"};return _this;}_createClass(AddVariantsWizard,[{key:\"addVariantsStaging\",value:function addVariantsStaging(){console.log(\"selected checkboxes: \",this.props.selectedCheckBoxes);console.log(\"selected checkboxes: \",this.props.selectedCheckBoxes);var newItems=[];var newItem=[];if(this.props.selectedCheckBoxes!==undefined){if(this.props.selectedCheckBoxes.length===1){newItem=JSON.parse(JSON.stringify(dataManagerMain.productData[this.props.selectedCheckBoxes[0]]));for(var i=0;i<this.numberOfVariants;i++){newItems.push(JSON.parse(JSON.stringify(newItem)));}this.stagingAreaProducts=newItems;}else{}}return newItems;console.log(\"added variant\",dataManagerMain.productData);// this.props.manageModal();\n}},{key:\"acceptVariants\",value:function acceptVariants(){if(this.props.selectedCheckBoxes!=null){var _dataManagerMain$prod;(_dataManagerMain$prod=dataManagerMain.productData).splice.apply(_dataManagerMain$prod,[this.props.selectedCheckBoxes[0],0].concat(_toConsumableArray(this.stagingAreaProducts)));}this.props.manageModal();}},{key:\"wizardNavigation\",value:function wizardNavigation(panelName){this.setState({wizardPanel:panelName});switch(panelName){case\"staging-area\":this.addVariantsStaging();break;}}},{key:\"manageModal\",value:function manageModal(){if(this.props.manageModal!==undefined){this.props.manageModal();}}},{key:\"elements\",value:function elements(){var _this2=this;switch(this.state.wizardPanel){case\"start\":var startButtons=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"Cancel\",OnClick:function OnClick(){return _this2.manageModal();},tooltipType:\"custom\",tooltip:toolTipContent.closeModal(),toolTipTimeOutInMS:10000,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"cancel\",classes:\" \",height:\"100%\",width:\"100%\"})}),/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"Continue\",OnClick:function OnClick(){return _this2.wizardNavigation(\"staging-area\");},tooltipType:\"custom\",tooltip:toolTipContent.continueWizard(),toolTipTimeOutInMS:10000,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"continue\",classes:\" \",height:\"100%\",width:\"100%\"})}));var startSentences=/*#__PURE__*/React.createElement(\"div\",{className:\"sentence-input\"},/*#__PURE__*/React.createElement(\"p\",null,\"Add\"),/*#__PURE__*/React.createElement(StandardTextInput,{controlType:\"no-label\",label:\"Number of variants\",onChangeAction:this.getInputValue,currentValue:\"1\"}),/*#__PURE__*/React.createElement(\"p\",null,\"New blank product stubs as variants: \"));return/*#__PURE__*/React.createElement(Wizard,{stepTitle:\"Add Products Variants\",stepSubTitle:\"Variants can be used to quickly set up different colors and sizes of your products.\",wizardButtons:startButtons,sentenceInputs:startSentences});case\"staging-area\":var stagingButtons=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"Back\",OnClick:function OnClick(){return _this2.wizardNavigation(\"start\");},tooltipType:\"custom\",tooltip:toolTipContent.goBackWizard(),toolTipTimeOutInMS:10000,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"cancel\",classes:\" \",height:\"100%\",width:\"100%\"})}),/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"Delete Selected\",OnClick:function OnClick(){return _this2.wizardNavigation(\"start\");},tooltipType:\"custom\",tooltip:toolTipContent.footerDelete(),toolTipTimeOutInMS:10000,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-delete\",classes:\" \",height:\"100%\",width:\"100%\"})}),/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"Confirm & Add to Catalog\",OnClick:function OnClick(){return _this2.acceptVariants();},tooltipType:\"custom\",tooltip:toolTipContent.insertFromStagingArea(),toolTipTimeOutInMS:10000,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-add\",classes:\" \",height:\"100%\",width:\"100%\"})}));var bla=/*#__PURE__*/React.createElement(DataGrid,{data:this.stagingAreaProducts,manageParentViews:function manageParentViews(){},columnsData:dataManagerMain.getProductColumns(),addAction:function addAction(){},hasDetailsActionButton:true});var stagingSentences=/*#__PURE__*/React.createElement(DataGridWithEditDrawer,{gridData:this.stagingAreaProducts,columnsData:dataManagerMain.getProductColumns(),dataManager:dataManagerMain,targetDataSet:\"custom-data\",gridHasDetailsButton:false});return/*#__PURE__*/React.createElement(Wizard,{stepTitle:\"Confirm Variants\",stepSubTitle:\"Verify and make changes before adding new product variants to your catalog\",wizardButtons:stagingButtons,sentenceInputs:stagingSentences,classes:\"expand-size\"});}}},{key:\"render\",value:function render(){return this.elements();}}]);return AddVariantsWizard;}(React.Component);","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/wizards/create-product-group/add-variants-wizard.tsx"],"names":["React","Wizard","toolTipContent","CatmanIcon","AppButton","dataManagerMain","StandardTextInput","DataGrid","DataGridWithEditDrawer","AddVariantsWizard","props","stagingAreaProducts","numberOfVariants","getInputValue","row","cell","value","console","log","parseInt","state","wizardPanel","selectedCheckBoxes","newItems","newItem","undefined","length","JSON","parse","stringify","productData","i","push","splice","manageModal","panelName","setState","addVariantsStaging","startButtons","closeModal","wizardNavigation","continueWizard","startSentences","stagingButtons","goBackWizard","footerDelete","acceptVariants","insertFromStagingArea","bla","getProductColumns","stagingSentences","elements","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {iWizardStep, Wizard} from \"../../../view-components/wizard/wizard\";\nimport {ReactElement} from \"react\";\nimport {toolTipContent} from \"../../tool-tip-content/content-tool-tips\";\nimport {CatmanIcon} from \"../../../svg/icons/icons\";\nimport AppButton from \"../../../view-components/button/app-button\";\nimport {dataManagerMain} from \"../../../index\";\nimport {iDataGridItem} from \"../../../_catman-data-types\";\nimport {StandardTextInput} from \"../../../view-components/text-input/standard-text-input\";\nimport {DataGrid} from \"../../../view-components/data-grid/data-grid\";\nimport {DataGridWithEditDrawer} from \"../../../view-components/data-grid/data-grid-with-edit-drawer\";\n\ninterface iPROPS{\n    addAction : Function\n    selectedCheckBoxes? : number[];\n    groups : string[];\n    manageModal : Function;\n}\n\ntype addVariantWizardNav = \"closed\" | \"start\" | \"staging-area\" | \"upload-3\";\n\ninterface iSTATE{\n    wizardPanel : addVariantWizardNav;\n}\n\nexport class AddVariantsWizard extends React.Component<iPROPS, iSTATE>{\n\n    constructor(props:iPROPS) {\n        super(props);\n        this.state={\n            wizardPanel : \"start\"\n        }\n    }\n    stagingAreaProducts : iDataGridItem[][] = [];\n    numberOfVariants = 1;\n\n    addVariantsStaging(){\n        console.log(\"selected checkboxes: \", this.props.selectedCheckBoxes);\n        console.log(\"selected checkboxes: \", this.props.selectedCheckBoxes);\n        let newItems : iDataGridItem[][] = [];\n        let newItem : iDataGridItem[] = [];\n\n        if(this.props.selectedCheckBoxes !== undefined){\n            if(this.props.selectedCheckBoxes.length === 1){\n                newItem = JSON.parse(JSON.stringify(dataManagerMain.productData[ this.props.selectedCheckBoxes[0]]) );\n\n                for(let i=0; i < this.numberOfVariants; i++){\n                    newItems.push( JSON.parse(JSON.stringify(newItem)) );\n                }\n                this.stagingAreaProducts = newItems;\n\n\n            }else{\n\n            }\n        }\n\n        return newItems;\n        console.log(\"added variant\",dataManagerMain.productData);\n       // this.props.manageModal();\n    }\n\n    acceptVariants(){\n        if(this.props.selectedCheckBoxes != null){\n            dataManagerMain.productData.splice(this.props.selectedCheckBoxes[0], 0,...this.stagingAreaProducts);\n        }\n        this.props.manageModal();\n    }\n\n    getInputValue = (row:number, cell:number, value:string )=>{\n        console.log(\"input value\", row, \" \", cell, \" \", value);\n        this.numberOfVariants = parseInt(value);\n    };\n\n    wizardNavigation(panelName : addVariantWizardNav){\n        this.setState({wizardPanel : panelName});\n        switch (panelName) {\n            case \"staging-area\":\n                this.addVariantsStaging();\n                break;\n        }\n    }\n\n    manageModal(){\n        if(this.props.manageModal !== undefined){\n            this.props.manageModal();\n        }\n    }\n\n    elements(){\n        switch (this.state.wizardPanel) {\n            case \"start\":\n                const startButtons = (\n                    <>\n                        <AppButton\n                            buttonType=\"secondary-action\"\n                            buttonLabel=\"Cancel\"\n                            OnClick={ ()=>this.manageModal() }\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.closeModal()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"cancel\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Continue\"\n                            OnClick={()=>this.wizardNavigation(\"staging-area\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.continueWizard()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"continue\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                    </>\n                );\n\n                const startSentences = (\n                    <div className=\"sentence-input\">\n                        <p>Add</p>\n                        <StandardTextInput\n                            controlType=\"no-label\"\n                            label={\"Number of variants\"}\n                            onChangeAction={this.getInputValue}\n                            currentValue={\"1\"}\n                        />\n                        <p>New blank product stubs as variants: </p>\n\n                    </div>\n                );\n                return(\n                    <Wizard\n                        stepTitle={\"Add Products Variants\"}\n                        stepSubTitle={\"Variants can be used to quickly set up different colors and sizes of your products.\"}\n                        wizardButtons={startButtons}\n                        sentenceInputs={startSentences}\n                    />\n                );\n            case \"staging-area\":\n                const stagingButtons = (\n                    <>\n                        <AppButton\n                            buttonType=\"secondary-action\"\n                            buttonLabel=\"Back\"\n                            OnClick={ ()=>this.wizardNavigation(\"start\") }\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.goBackWizard()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"cancel\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            buttonType=\"secondary-action\"\n                            buttonLabel=\"Delete Selected\"\n                            OnClick={ ()=>this.wizardNavigation(\"start\") }\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerDelete()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-delete\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Confirm & Add to Catalog\"\n                            OnClick={()=>this.acceptVariants()}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.insertFromStagingArea()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-add\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                    </>\n                );\n\n                const bla = (\n                    <DataGrid\n                        data={this.stagingAreaProducts}\n                        manageParentViews={()=>{}}\n                        columnsData={dataManagerMain.getProductColumns()}\n                        addAction={()=>{}}\n                        hasDetailsActionButton={true}\n                    />\n\n                );\n\n                let stagingSentences = (\n                    <DataGridWithEditDrawer\n                        gridData={this.stagingAreaProducts}\n                        columnsData={dataManagerMain.getProductColumns()}\n                        dataManager={dataManagerMain}\n                        targetDataSet={\"custom-data\"}\n                        gridHasDetailsButton={false}\n                    />\n                );\n                return(<Wizard\n                    stepTitle={\"Confirm Variants\"}\n                    stepSubTitle={\"Verify and make changes before adding new product variants to your catalog\"}\n                    wizardButtons={stagingButtons}\n                    sentenceInputs={stagingSentences}\n                    classes=\"expand-size\"\n                />)\n        }\n    }\n\n    render(){\n        return(this.elements())\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}