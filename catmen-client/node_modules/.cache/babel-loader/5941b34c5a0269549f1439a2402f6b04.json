{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/data-grid/data-grid.tsx\";\nimport * as React from \"react\";\nexport class DataGrid extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getGridItems() {}\n\n  render() {\n    let gridItems = [];\n    let columnHeaders = [];\n    let constructedGrid = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"viewport\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, columnHeaders, gridItems));\n    return constructedGrid;\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/data-grid/data-grid.tsx"],"names":["React","DataGrid","Component","constructor","props","getGridItems","render","gridItems","columnHeaders","constructedGrid"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAcA,OAAO,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAsD;AACzDC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;AACH;;AAEDC,EAAAA,YAAY,GAAE,CAEb;;AAEDC,EAAAA,MAAM,GAAsK;AAExK,QAAIC,SAA0B,GAAG,EAAjC;AACA,QAAIC,aAA8B,GAAC,EAAnC;AAEA,QAAIC,eAA8B,gBAC9B,uDACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,aADL,EAEKD,SAFL,CADJ,CADJ;AASA,WAAOE,eAAP;AACH;;AAxBwD","sourcesContent":["import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport {iDataGridItem} from \"./data-types-for-data-grid\";\n\n//data grid data should be an array of arrays\n//each product is an array of attributes\ninterface iPROPS {\n    data : iDataGridItem[][]\n}\n\ninterface iSTATE {\n\n}\n\nexport class DataGrid extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n    }\n\n    getGridItems(){\n\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n\n        let gridItems : ReactElement[] = [];\n        let columnHeaders : ReactElement[]=[];\n\n        let constructedGrid : ReactElement = (\n            <>\n                <div className=\"viewport\">\n                    {columnHeaders}\n                    {gridItems}\n                </div>\n            </>\n        );\n\n        return constructedGrid;\n    }\n}"]},"metadata":{},"sourceType":"module"}