{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/button/app-button.tsx\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ToolTip } from \"../heru-tool-tip/tool-tip\";\nexport class AppButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.hoverActions = [];\n    this.btnRef = React.createRef();\n    this.linkRef = React.createRef();\n    this.toolTipRef = React.createRef();\n    this.toolTipTimeOut = void 0;\n    this.state = {\n      isHovered: false\n    };\n    this.hoverActions = this.props.hoverActions;\n\n    if (this.props.toolTipTimeOutInMS != null) {\n      this.toolTipTimeOut = this.props.toolTipTimeOutInMS;\n    } else {\n      this.toolTipTimeOut = 5000;\n    }\n  }\n\n  doHoverActions() {\n    if (this.hoverActions !== undefined) {\n      for (let i = 0; i < this.hoverActions.length; i++) {\n        if (this.hoverActions[i] !== undefined) {\n          this.hoverActions[i]();\n        }\n      }\n    }\n\n    this.setState({\n      isHovered: true\n    }); //GO TO TOOL TIP:\n    //when hovering on the button, we'll start the hovering actions in the tool tip\n\n    if (this.toolTipRef.current != null) {\n      console.log(\"do action hover\");\n      this.toolTipRef.current.startHover();\n    }\n  }\n\n  doHoverClear() {\n    if (this.toolTipRef.current != null) {\n      console.log(\"do end hover\");\n      this.toolTipRef.current.clearHover();\n    }\n  }\n\n  getToolTip() {\n    switch (this.props.tooltipType) {\n      case \"basic\":\n        return /*#__PURE__*/React.createElement(ToolTip, {\n          ref: this.toolTipRef,\n          timeoutInMS: this.toolTipTimeOut,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }\n        });\n\n      case \"custom\":\n        return /*#__PURE__*/React.createElement(ToolTip, {\n          ref: this.toolTipRef,\n          btnReference: this.btnRef,\n          tooltipType: \"custom\",\n          toolTipCustomElement: this.props.tooltip,\n          timeoutInMS: this.toolTipTimeOut,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }\n        });\n    }\n  } //this will generate the tooltip, ref this wherever you need one\n\n\n  handleToolTip() {\n    if (this.state.isHovered === false) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.getButton());\n    }\n  }\n\n  baseButton(btnStyles) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.handleToolTip(), /*#__PURE__*/React.createElement(\"button\", {\n      ref: this.btnRef,\n      onClick: () => this.props.OnClick(),\n      onMouseOver: () => this.doHoverActions(),\n      onMouseOut: () => this.doHoverClear(),\n      className: `btn-from-left btn-default ${btnStyles} `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-descriptors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, this.props.buttonLabel, this.props.iconCenter), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cm-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, this.props.iconRight))));\n  }\n\n  getButton() {\n    switch (this.props.buttonType) {\n      case \"main-action\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, this.handleToolTip(), /*#__PURE__*/React.createElement(\"button\", {\n          ref: this.btnRef,\n          onClick: () => this.props.OnClick(),\n          onMouseOver: () => this.doHoverActions(),\n          className: \"btn-main-action\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }\n        }, this.props.buttonLabel));\n\n      case \"from-left\":\n        return this.baseButton('btn-global');\n\n      case \"menu-link\":\n        if (this.props.navPath !== undefined) {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, this.handleToolTip(), /*#__PURE__*/React.createElement(Link, {\n            ref: this.linkRef,\n            onMouseOver: () => this.doHoverActions(),\n            onMouseOut: () => this.doHoverClear(),\n            to: this.props.navPath,\n            className: \"btn-main-action\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }\n          }, this.props.buttonLabel));\n        } else {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, this.handleToolTip(), /*#__PURE__*/React.createElement(\"button\", {\n            onMouseOver: () => this.doHoverActions(),\n            className: \"btn-main-action\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }\n          }, this.props.buttonLabel));\n        }\n\n      case \"secondary-action\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, this.handleToolTip(), /*#__PURE__*/React.createElement(\"button\", {\n          onMouseOver: () => this.doHoverActions(),\n          className: \"btn-secondary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }\n        }, this.props.buttonLabel));\n\n      default:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n          onMouseOver: () => this.doHoverActions(),\n          className: \"btn-default\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }\n        }, \"Default Button\"));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.getButton());\n  }\n\n}\nexport default AppButton;","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/button/app-button.tsx"],"names":["React","Link","ToolTip","AppButton","Component","constructor","props","hoverActions","btnRef","createRef","linkRef","toolTipRef","toolTipTimeOut","state","isHovered","toolTipTimeOutInMS","doHoverActions","undefined","i","length","setState","current","console","log","startHover","doHoverClear","clearHover","getToolTip","tooltipType","tooltip","handleToolTip","getButton","baseButton","btnStyles","OnClick","buttonLabel","iconCenter","iconRight","buttonType","navPath","render"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {ToolTip} from \"../heru-tool-tip/tool-tip\";\nimport {ReactElement, Ref, RefObject} from \"react\";\n\n\ntype AppButtonType = \"from-left\" | \"main-action\" | \"secondary-action\" | \"menu-link\";\n\ninterface iPROPS{\n    buttonType: AppButtonType;\n    buttonLabel? : string;\n    OnClick? : any;\n    iconCenter? : ReactElement;\n    iconRight? : ReactElement;\n    iconLeft? : ReactElement;\n    navPath? : any;\n    index? : number;\n    param? : string;\n    hoverActions? : any[];\n    tooltipType : \"basic\" | \"custom\" | \"none\";\n    tooltip? : ReactElement;\n    toolTipTimeOutInMS? : number;\n    classes? : string;\n}\n\ninterface iSTATE{\n    isHovered : boolean\n}\n\nexport class AppButton extends React.Component<iPROPS, iSTATE>{\nconstructor(props:iPROPS) {\n    super(props);\n    this.state = {\n        isHovered : false\n    };\n    this.hoverActions = this.props.hoverActions;\n    if(this.props.toolTipTimeOutInMS != null){\n        this.toolTipTimeOut = this.props.toolTipTimeOutInMS\n    }else{\n        this.toolTipTimeOut = 5000\n    }\n}\n    hoverActions :any[] | undefined = [];\n    btnRef:RefObject<HTMLButtonElement> = React.createRef<HTMLButtonElement>();\n    linkRef : RefObject<HTMLAnchorElement> = React.createRef<HTMLAnchorElement>();\n    toolTipRef = React.createRef<ToolTip>();\n    //In Milliseconds\n    toolTipTimeOut : number;\n\n    doHoverActions(){\n      if(this.hoverActions !== undefined){\n          for(let i=0; i < this.hoverActions.length; i++){\n              if(this.hoverActions[i] !== undefined){\n                  this.hoverActions[i]();\n              }\n          }\n      }\n      this.setState({isHovered : true});\n\n      //GO TO TOOL TIP:\n      //when hovering on the button, we'll start the hovering actions in the tool tip\n      if(this.toolTipRef.current != null){\n          console.log(\"do action hover\");\n          this.toolTipRef.current.startHover();\n      }\n    };\n\n    doHoverClear(){\n        if(this.toolTipRef.current != null){\n            console.log(\"do end hover\");\n            this.toolTipRef.current.clearHover();\n        }\n    }\n\n    getToolTip(){\n        switch (this.props.tooltipType) {\n            case \"basic\":\n                return (\n                    <ToolTip\n                        ref={this.toolTipRef}\n                        timeoutInMS={this.toolTipTimeOut}\n                    />\n                );\n\n            case \"custom\":\n                return(\n                    <ToolTip\n                        ref={this.toolTipRef}\n                        btnReference={this.btnRef}\n                        tooltipType=\"custom\"\n                        toolTipCustomElement={this.props.tooltip}\n                        timeoutInMS={this.toolTipTimeOut}\n                    />\n                );\n        }\n    }\n\n    //this will generate the tooltip, ref this wherever you need one\n    handleToolTip():ReactElement{\n        if(this.state.isHovered === false){\n            return (<></> );\n        }else{\n            return (\n                    <>\n                        {this.getButton()}\n                    </>\n\n            )\n        }\n    }\n\n    baseButton(btnStyles : string){\n        return(<>\n            {this.handleToolTip()}\n            <button\n                ref={this.btnRef}\n                onClick={()=>this.props.OnClick()}\n                onMouseOver={()=>this.doHoverActions()}\n                onMouseOut={()=>this.doHoverClear()}\n                className={`btn-from-left btn-default ${btnStyles} `}\n            >\n                <div className=\"btn-descriptors\">\n                    <div className=\"label\">\n                        {this.props.buttonLabel}\n                        {this.props.iconCenter}\n                    </div>\n\n                    <div className=\"cm-icon\">\n                        {this.props.iconRight}\n                    </div>\n                </div>\n            </button>\n        </>)\n    }\n\n    getButton(){\n        switch (this.props.buttonType) {\n            case \"main-action\":\n                return(\n                    <>\n                        {this.handleToolTip()}\n                        <button\n                            ref={this.btnRef}\n                            onClick={()=>this.props.OnClick()}\n                            onMouseOver={()=>this.doHoverActions()}\n                            className=\"btn-main-action\"\n                        >\n                            {this.props.buttonLabel}\n                        </button>\n                    </>\n                );\n\n            case \"from-left\":\n\n                return(\n                    this.baseButton('btn-global')\n                );\n\n\n            case \"menu-link\":\n                if(this.props.navPath !== undefined ){\n                    return(\n                        <>\n                            {this.handleToolTip()}\n                            <Link ref={this.linkRef}\n                                  onMouseOver={()=>this.doHoverActions()}\n                                  onMouseOut={()=>this.doHoverClear()}\n                                  to={this.props.navPath}\n                                  className=\"btn-main-action\"\n                            >\n                                {this.props.buttonLabel}\n                            </Link>\n                        </>\n                    );\n                }else {\n                    return(\n                        <>\n                            {this.handleToolTip()}\n                            <button\n                                onMouseOver={()=>this.doHoverActions()}\n                                className=\"btn-main-action\"\n                            >\n                                {this.props.buttonLabel}\n                            </button>\n                        </>\n                    );\n                }\n\n            case \"secondary-action\":\n                return(\n                    <>\n                        {this.handleToolTip()}\n                        <button\n                            onMouseOver={()=>this.doHoverActions()}\n                            className=\"btn-secondary\"\n                        >\n                            {this.props.buttonLabel}\n                        </button>\n                    </>\n                );\n\n            default:\n                return(\n                    <>\n                        <button\n                            onMouseOver={()=>this.doHoverActions()}\n                            className=\"btn-default\"\n                        >\n                            Default Button\n                        </button>\n                    </>\n                )\n        }\n    }\n    render() {\n\n\n        return (\n            <>\n                {this.getButton()}\n            </>\n        );\n    }\n}\n\nexport default AppButton;"]},"metadata":{},"sourceType":"module"}