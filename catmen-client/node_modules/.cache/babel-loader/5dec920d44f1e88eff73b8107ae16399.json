{"ast":null,"code":"import _classCallCheck from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import{CatmanIcon}from\"../../../svg/icons/icons\";import{DataGrid}from\"../../../view-components/data-grid/data-grid\";import{catmanData}from\"../../../_sample-data/products-data\";import{TitleArea}from\"../../../view-components/title-area/title-area\";import StickyThing from\"../../../view-components/sticky-panel/sticky-panel\";import{toolTipContent}from\"../../tool-tip-content/content-tool-tips\";import AppButton from\"../../../view-components/button/app-button\";import{CatalogSingleProduct}from\"./single-product-view\";import{TextInput}from\"../../../view-components/text-input/text-input\";import{ModalView}from\"../../../view-components/modal/modal\";import{AddVariantsWizard}from\"../../wizards/create-product-group/add-variants-wizard\";import{dataManagerMain}from\"../../../index\";import{CreateProductGroupWizard}from\"../../wizards/create-product-group/create-product-group-wizard\";export var CatalogDetailsView=/*#__PURE__*/function(_React$Component){_inherits(CatalogDetailsView,_React$Component);var _super=_createSuper(CatalogDetailsView);function CatalogDetailsView(props){var _this;_classCallCheck(this,CatalogDetailsView);_this=_super.call(this,props);_this.workingDataSet=void 0;_this.initialized=false;_this.dataGridRef=React.createRef();_this.editDrawerRef=React.createRef();_this.editDrawer=/*#__PURE__*/React.createElement(React.Fragment,null);_this.selectionSet=[];_this.columns=void 0;_this.drawerFirstOpen=false;_this.closeSingleProductEdit=function(){window.history.back();};_this.updateValues=function(row,cell,value,colName){if(_this.dataGridRef.current!=null&&_this.dataGridRef.current!=undefined){_this.selectionSet=_this.dataGridRef.current.selectionSet;console.log(\"cat details view selection set: \",_this.selectionSet);}console.log(\"inside drawer\",value,\" col name:\",colName);//the minus 2 is the offset for the extra columns checkbox and edit\nfor(var i=0;i<_this.selectionSet.length;i++){if(_this.selectionSet[i].columnName===colName){var myRow=_this.selectionSet[i].row-2;var myCell=_this.selectionSet[i].cell-2;//this.workingDataSet[ myRow-2][myCell-2].value = value;\nvar updateSet={row:myRow,cell:myCell,newData:value};_this.props.gridData.setProductData=updateSet;}}_this.setState({workingData:_this.props.gridData.getData});console.log(\"working data set:\",_this.state.workingData);};_this.manageSelectionSet=function(selectionSet,checkBoxSelections,message){if(checkBoxSelections.length>0||_this.initialized===false&&checkBoxSelections.length===0&&message===\"checkbox-launched\"){if(checkBoxSelections.length<=1){_this.setState({editDrawerOpen:false,footerOpen:true,footerMode:\"default\"});}else if(checkBoxSelections.length>1){_this.setState({editDrawerOpen:false,footerOpen:true,footerMode:\"multiple-selected\"});}_this.initialized=true;}else{_this.setState({footerOpen:false});}};_this.columns=_this.props.columnsData.getColumns;_this.state={workingData:_this.props.gridData.getData,columnsData:_this.props.columnsData.getColumns,productViewOpen:false,editDrawerOpen:false,editDrawerMaximized:false,footerOpen:false,footerMode:\"default\",selectionSet:[],modalState:\"closed\"};_this.workingDataSet=_this.props.gridData.getData;return _this;}_createClass(CatalogDetailsView,[{key:\"getCheckBoxesSelection\",value:function getCheckBoxesSelection(){if(this.dataGridRef.current!==null&&this.dataGridRef.current!==undefined){return this.dataGridRef.current._checkedRows;}}},{key:\"getProductViewDrawer\",value:function getProductViewDrawer(){if(this.props.query!=\"none\"&&this.props.query!=null&&this.props.query!=undefined){return/*#__PURE__*/React.createElement(StickyThing,{enterFromThisSide:\"right\",lastResortClasses:\"product-view\",animateIn:true,heightIncludeUnits:\"100vh\",widthIncludeUnits:\"100vw\",stickyOpen:true,bgColor:\"#CECECE\",doAnimation:true},/*#__PURE__*/React.createElement(CatalogSingleProduct,{uniqueID:this.props.query,productData:this.state.workingData,closeSingleProduct:this.closeSingleProductEdit}));}}},{key:\"getColumnLabel\",value:function getColumnLabel(colName){var columnLabel=\"\";for(var i=0;i<this.columns.length;i++){if(this.columns[i].columnName===colName){columnLabel=this.columns[i].columnLabel;}}return columnLabel;}},{key:\"getEditDrawer\",value:function getEditDrawer(){var _this2=this;if(this.state.editDrawerOpen===false){return/*#__PURE__*/React.createElement(React.Fragment,null);}if(this.dataGridRef.current!=null&&this.dataGridRef.current!=undefined){this.selectionSet=this.dataGridRef.current.selectionSet;console.log(\"cat details view selection set: \",this.selectionSet);}var inputs=[];var selectedItems=[];//Create list of selection items that need inputs (i.e. one input per column)\ni:for(var i=0;i<this.selectionSet.length;i++){j:for(var j=0;j<selectedItems.length;j++){if(this.selectionSet[i].columnName===selectedItems[j].columnName){continue i;}}var row=this.selectionSet[i].row;var cell=this.selectionSet[i].cell;var productDataItem=catmanData.productData[row-2][cell-2];selectedItems.push(productDataItem);}for(var _i=0;_i<selectedItems.length;_i++){var input=/*#__PURE__*/React.createElement(TextInput,{row:this.selectionSet[_i].row,cell:this.selectionSet[_i].cell,columnName:this.selectionSet[_i].columnName,label:this.getColumnLabel(selectedItems[_i].columnName),currentValue:selectedItems[_i].value,onChangeAction:this.updateValues});inputs.push(input);}var maximize=function maximize(valueCheck){if(valueCheck===true){return\"maximized\";}else{return\"catman-edit-default restored\";}};var restoreAndMaximizeTooltip=function restoreAndMaximizeTooltip(valueCheck){if(valueCheck===false){return toolTipContent.maximizeDrawer();}else{return toolTipContent.restoreDrawer();}};var restoreAndMaximizeBtnIcon=function restoreAndMaximizeBtnIcon(valueCheck){if(valueCheck===false){return\"icon-maximize\";}else{return\"icon-restore-btn\";}};var drawer=/*#__PURE__*/React.createElement(React.Fragment,null);if(this.state.editDrawerOpen===true){drawer=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(StickyThing,{ref:this.editDrawerRef,enterFromThisSide:\"bottom\",lastResortClasses:\"catman-edit-drawer \".concat(maximize(this.state.editDrawerMaximized)),animateIn:true,heightIncludeUnits:\"\",widthIncludeUnits:\"\",stickyOpen:true,bgColor:\"#CECECE\",doAnimation:true,toolBar:\"none\"},/*#__PURE__*/React.createElement(\"div\",{className:\"tool-bar\"},/*#__PURE__*/React.createElement(\"div\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"drawer-controls\"},/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"\",OnClick:function OnClick(){return _this2.maximizeEditDrawer();},tooltipType:\"custom\",tooltip:restoreAndMaximizeTooltip(this.state.editDrawerMaximized),toolTipTimeOutInMS:10000,classes:\"tool-bar-btn icon-only-btn\",iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"\".concat(restoreAndMaximizeBtnIcon(this.state.editDrawerMaximized)),classes:\" \",height:\"100%\",width:\"100%\"})}),/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"\",OnClick:function OnClick(){return _this2.closeEditDrawer();},tooltipType:\"custom\",tooltip:toolTipContent.closeDrawer(),toolTipTimeOutInMS:10000,classes:\"icon-only-btn\",iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-close\",classes:\" \",height:\"100%\",width:\"100%\"})}))),/*#__PURE__*/React.createElement(\"div\",{className:\"drawer-edit-area\"},inputs)));}return drawer;}},{key:\"maximizeEditDrawer\",value:function maximizeEditDrawer(){this.setState({editDrawerMaximized:!this.state.editDrawerMaximized});}},{key:\"closeEditDrawer\",value:function closeEditDrawer(){this.setState({editDrawerOpen:false,editDrawerMaximized:false});if(this.dataGridRef.current!=null&&this.dataGridRef.current!=undefined){this.dataGridRef.current.clearSelection();}this.drawerFirstOpen=false;}},{key:\"openEditDrawer\",value:function openEditDrawer(){this.drawerFirstOpen=true;this.setState({editDrawerOpen:true});}//FOOTER RELATED\n},{key:\"getFooterMenu\",value:function getFooterMenu(){var _this3=this;var footer=/*#__PURE__*/React.createElement(React.Fragment,null);var buttons=/*#__PURE__*/React.createElement(React.Fragment,null);switch(this.state.footerMode){case\"default\":buttons=/*#__PURE__*/React.createElement(\"div\",{className:\"footer-btn-bar catman-footer\"},/*#__PURE__*/React.createElement(AppButton,{classes:\"separate-left\",buttonType:\"secondary-action\",buttonLabel:\"Edit Selected\",OnClick:function OnClick(){return _this3.switchToEditMode();},tooltipType:\"custom\",tooltip:toolTipContent.footerEditSelection(),toolTipTimeOutInMS:10000,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-edit\",classes:\" \",height:\"100%\",width:\"100%\"})}),/*#__PURE__*/React.createElement(AppButton,{classes:\" \",buttonType:\"secondary-action\",buttonLabel:\"Add Variant\",OnClick:function OnClick(){return _this3.manageModals(\"add-to-product-group\");},tooltipType:\"custom\",tooltip:toolTipContent.footerAddVariant(),toolTipTimeOutInMS:10000,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-add\",classes:\" \",height:\"100%\",width:\"100%\"})}),/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"Clear Selection\",OnClick:function OnClick(){return _this3.footerActions(\"cancel\");},tooltipType:\"custom\",tooltip:toolTipContent.clearSelection(),toolTipTimeOutInMS:10000,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"clear\",classes:\" \",height:\"100%\",width:\"100%\"})}),/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"Delete Selected\",OnClick:function OnClick(){return _this3.footerActions(\"cancel\");},tooltipType:\"custom\",tooltip:toolTipContent.footerDelete(),toolTipTimeOutInMS:10000,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-delete\",classes:\" \",height:\"100%\",width:\"100%\"})}));break;case\"multiple-selected\":buttons=/*#__PURE__*/React.createElement(\"div\",{className:\"footer-btn-bar catman-footer\"},/*#__PURE__*/React.createElement(AppButton,{classes:\"\",buttonType:\"secondary-action\",buttonLabel:\"Edit Selected\",OnClick:function OnClick(){return _this3.switchToEditMode();},tooltipType:\"custom\",tooltip:toolTipContent.footerEditSelection(),toolTipTimeOutInMS:10000,tooltipXOffset:0,tooltipYOffset:20,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-edit\",classes:\" \",height:\"100%\",width:\"100%\"})}),/*#__PURE__*/React.createElement(AppButton,{classes:\" \",buttonType:\"secondary-action\",buttonLabel:\"Make Into a Variant Group\",OnClick:function OnClick(){return _this3.manageModals(\"create-product-group\");},tooltipType:\"custom\",tooltip:toolTipContent.footerCreateVariant(),toolTipTimeOutInMS:10000,tooltipXOffset:0,tooltipYOffset:20,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-add\",classes:\" \",height:\"100%\",width:\"100%\"})}),/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"Clear Selection\",OnClick:function OnClick(){return _this3.footerActions(\"cancel\");},tooltipType:\"custom\",tooltip:toolTipContent.clearSelection(),toolTipTimeOutInMS:10000,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"clear\",classes:\" \",height:\"100%\",width:\"100%\"})}),/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"Delete Selected\",OnClick:function OnClick(){return _this3.footerActions(\"cancel\");},tooltipType:\"custom\",tooltip:toolTipContent.footerDelete(),toolTipTimeOutInMS:10000,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-delete\",classes:\" \",height:\"100%\",width:\"100%\"})}));break;case\"has-group\":buttons=/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"catalog manager\",OnClick:function OnClick(){return _this3.footerActions(\"cancel\");},tooltipType:\"custom\",tooltip:toolTipContent.mainNav(),toolTipTimeOutInMS:10000,iconRight:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"down-arrow\",classes:\"ui-icon\",height:\"100%\",width:\"100%\"})});}if(this.state.footerOpen===true){var buttonBar=/*#__PURE__*/React.createElement(React.Fragment,null);footer=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(StickyThing,{enterFromThisSide:\"bottom\",lastResortClasses:\"catman-footer-container\",animateIn:true,heightIncludeUnits:\"3.75rem\",widthIncludeUnits:\"100%\",stickyOpen:true,bgColor:\"rgba(0,0,0,0)\",doAnimation:true},buttons));}return footer;}},{key:\"footerActions\",value:function footerActions(action){switch(action){case\"cancel\":this.setState({footerOpen:false});this.initialized=false;if(this.dataGridRef.current!==null&&this.dataGridRef.current!==undefined){this.dataGridRef.current.clearSelection();}break;case\"add-group\":break;case\"edit\":this.setState({footerOpen:false});this.initialized=false;break;}}},{key:\"addAction\",value:function addAction(addType){console.log(\"added item or items: \",addType);switch(addType){case\"add-attribute\":return/*#__PURE__*/React.createElement(React.Fragment,null);case\"add-products\":return/*#__PURE__*/React.createElement(React.Fragment,null);}}//FOOTER ACTIONS\n},{key:\"switchToEditMode\",value:function switchToEditMode(){if(this.dataGridRef.current!==null&&this.dataGridRef.current!==undefined){this.dataGridRef.current.switchToEditModeFromCheckBoxMode();this.openEditDrawer();this.setState({footerOpen:false});}//manageSelectionSet = (selectionSet : iDataGridItem[], checkBoxSelections : number[], message : string )\n//this.footerActions(\"cancel\");\n}//GRID MANAGEMENT\n},{key:\"conditionClasses\",value:function conditionClasses(){if(this.state.editDrawerOpen===true){return\"drawer-open\";}}//MODALS modalStateType = \"closed\" | \"add-to-product-group\" | \"create-product-group\" | \"delete-confirmation\";\n},{key:\"manageModals\",value:function manageModals(modalState){console.log(\"close the dang modal!!!!\",modalState);this.setState({modalState:modalState});}},{key:\"getModals\",value:function getModals(){var _this4=this;switch(this.state.modalState){case\"add-to-product-group\":return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ModalView,{closeModalFunc:function closeModalFunc(){return _this4.manageModals(\"closed\");},modalTitle:\"\"},/*#__PURE__*/React.createElement(AddVariantsWizard,{addAction:dataManagerMain.addToProductGroup,groups:dataManagerMain.getGroups(),selectedCheckBoxes:this.getCheckBoxesSelection(),manageModal:function manageModal(){return _this4.manageModals(\"closed\");}})));case\"create-product-group\":return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ModalView,{closeModalFunc:function closeModalFunc(){return _this4.manageModals(\"closed\");},modalTitle:\"\"},/*#__PURE__*/React.createElement(CreateProductGroupWizard,{addAction:dataManagerMain.addToProductGroup,groups:dataManagerMain.getGroups(),selectedCheckBoxes:this.getCheckBoxesSelection(),manageModal:function manageModal(){return _this4.manageModals(\"closed\");}})));}}//RENDERING AND PORTALS\n},{key:\"componentDidUpdate\",value:function componentDidUpdate(){var inputs=document.getElementsByClassName(\"InputBox\");console.log(this.drawerFirstOpen);if(this.drawerFirstOpen===true){if(inputs[0]!=undefined){inputs[0].focus();inputs[0].select();this.drawerFirstOpen=false;}}}},{key:\"render\",value:function render(){var _this5=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TitleArea,{mainTitle:\"Spreadsheet View\",subTitle:\"My Catalog\",titleType:\"subtitle-above\"}),/*#__PURE__*/React.createElement(DataGrid,{ref:this.dataGridRef,data:this.state.workingData,manageParentViews:function manageParentViews(){return _this5.openEditDrawer();},selectionCallback:this.manageSelectionSet,columnsData:this.state.columnsData,classes:this.conditionClasses(),addAction:this.addAction}),this.getEditDrawer(),this.getFooterMenu(),this.getProductViewDrawer(),this.getModals());}}]);return CatalogDetailsView;}(React.Component);","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/catalog-views/catalog-details/catalog-details-view.tsx"],"names":["React","CatmanIcon","DataGrid","catmanData","TitleArea","StickyThing","toolTipContent","AppButton","CatalogSingleProduct","TextInput","ModalView","AddVariantsWizard","dataManagerMain","CreateProductGroupWizard","CatalogDetailsView","props","workingDataSet","initialized","dataGridRef","createRef","editDrawerRef","editDrawer","selectionSet","columns","drawerFirstOpen","closeSingleProductEdit","window","history","back","updateValues","row","cell","value","colName","current","undefined","console","log","i","length","columnName","myRow","myCell","updateSet","newData","gridData","setProductData","setState","workingData","getData","state","manageSelectionSet","checkBoxSelections","message","editDrawerOpen","footerOpen","footerMode","columnsData","getColumns","productViewOpen","editDrawerMaximized","modalState","_checkedRows","query","columnLabel","inputs","selectedItems","j","productDataItem","productData","push","input","getColumnLabel","maximize","valueCheck","restoreAndMaximizeTooltip","maximizeDrawer","restoreDrawer","restoreAndMaximizeBtnIcon","drawer","maximizeEditDrawer","closeEditDrawer","closeDrawer","clearSelection","footer","buttons","switchToEditMode","footerEditSelection","manageModals","footerAddVariant","footerActions","footerDelete","footerCreateVariant","mainNav","buttonBar","action","addType","switchToEditModeFromCheckBoxMode","openEditDrawer","addToProductGroup","getGroups","getCheckBoxesSelection","document","getElementsByClassName","focus","select","conditionClasses","addAction","getEditDrawer","getFooterMenu","getProductViewDrawer","getModals","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {Navigation} from \"../../../view-components/list-menu/intra-app-navigation\";\nimport {MainHeaderArea} from \"../../_common/main-header-area/main-header-area\";\n\n//Configuration data:\nimport {mainNavConfig} from \"../../_catman-configuration/common-app-configuration\";\nimport {CatmanIcon} from \"../../../svg/icons/icons\";\nimport {ToolTipContent} from \"../../../view-components/heru-tool-tip/tool-tip-content\";\nimport {DataGrid, selectionObject} from \"../../../view-components/data-grid/data-grid\";\nimport {catmanData} from \"../../../_sample-data/products-data\";\nimport {TitleArea} from \"../../../view-components/title-area/title-area\";\nimport {Route, RouteComponentProps, Switch, useRouteMatch} from \"react-router-dom\";\nimport StickyThing from \"../../../view-components/sticky-panel/sticky-panel\";\nimport {ReactElement} from \"react\";\nimport {iDataGridItem} from \"../../../view-components/data-grid/data-types-for-data-grid\";\nimport {toolTipContent} from \"../../tool-tip-content/content-tool-tips\";\nimport AppButton from \"../../../view-components/button/app-button\";\nimport {appColumns, iColumn} from \"../../../_sample-data/columns\";\nimport {CatalogSingleProduct} from \"./single-product-view\";\nimport {TextInput} from \"../../../view-components/text-input/text-input\";\n\nimport {DataManager, iUpdateSet} from \"../../../data-components/data-manager/data-manager\";\nimport {ModalView} from \"../../../view-components/modal/modal\";\nimport {AddVariantsWizard} from \"../../wizards/create-product-group/add-variants-wizard\";\nimport {dataManagerMain} from \"../../../index\";\n\nimport {CreateProductGroupWizard} from \"../../wizards/create-product-group/create-product-group-wizard\";\n\n\ninterface iPROPS   {\n    message: string;\n    query:string | null;\n    gridData : DataManager;\n    columnsData : DataManager;\n}\n\nexport type modalStateType = \"closed\" | \"add-to-product-group\" | \"create-product-group\" | \"delete-confirmation\";\n\ninterface iSTATE{\n    productViewOpen : boolean;\n    editDrawerOpen : boolean;\n    editDrawerMaximized : boolean;\n    modalState : modalStateType;\n    footerOpen : boolean;\n    footerMode : \"default\" | \"has-group\" | \"no-group\" | \"multiple-selected\" ;\n    selectionSet : selectionObject[];\n    workingData : iDataGridItem[][];\n    columnsData : iColumn[];\n}\n\nexport class CatalogDetailsView extends React.Component<iPROPS, iSTATE>{\n     constructor(props:iPROPS) {\n         super(props);\n         this.columns = this.props.columnsData.getColumns;\n         this.state = {\n             workingData : this.props.gridData.getData,\n             columnsData : this.props.columnsData.getColumns,\n             productViewOpen : false,\n             editDrawerOpen : false,\n             editDrawerMaximized : false,\n             footerOpen : false,\n             footerMode : \"default\",\n             selectionSet : [],\n             modalState : \"closed\"\n         };\n\n         this.workingDataSet = this.props.gridData.getData;\n     }\n     workingDataSet : iDataGridItem[][];\n     //just for the fist launch of checkbox editing\n     initialized:boolean = false;\n     dataGridRef = React.createRef<DataGrid>();\n     editDrawerRef = React.createRef<StickyThing>();\n     editDrawer : ReactElement = (<></>);\n     selectionSet : selectionObject[] = [];\n     columns : iColumn[];\n     //manage selection in the drawer\n     drawerFirstOpen = false;\n\n\n\n    getCheckBoxesSelection(){\n        if(this.dataGridRef.current !== null && this.dataGridRef.current !== undefined){\n            return this.dataGridRef.current._checkedRows;\n        }\n    }\n\n     closeSingleProductEdit = ()=>{\n        window.history.back();\n    };\n\n     getProductViewDrawer( ){\n         if(this.props.query != \"none\" && this.props.query != null && this.props.query != undefined ){\n\n             return(\n                 <StickyThing\n                     enterFromThisSide=\"right\"\n                     lastResortClasses={\"product-view\"}\n                     animateIn={true}\n                     heightIncludeUnits=\"100vh\"\n                     widthIncludeUnits={\"100vw\"}\n                     stickyOpen={true}\n                     bgColor={\"#CECECE\"}\n                     doAnimation={true}\n                 >\n                    <CatalogSingleProduct\n                        uniqueID={this.props.query}\n                        productData={this.state.workingData}\n                        closeSingleProduct={this.closeSingleProductEdit}\n                    />\n\n                 </StickyThing>\n             )\n         }\n     }\n\n     getColumnLabel(colName : string) : string{\n\n         let columnLabel = \"\";\n         for(let i = 0; i < this.columns.length; i++){\n             if(this.columns[i].columnName === colName){\n                 columnLabel = this.columns[i].columnLabel;\n             }\n         }\n\n         return columnLabel;\n     }\n\n     updateValues=(row : number, cell:number, value:string, colName : string)=>{\n         if(this.dataGridRef.current != null && this.dataGridRef.current != undefined ){\n             this.selectionSet = this.dataGridRef.current.selectionSet;\n             console.log(\"cat details view selection set: \", this.selectionSet)\n         }\n         console.log(\"inside drawer\", value, \" col name:\", colName);\n         //the minus 2 is the offset for the extra columns checkbox and edit\n         for(let i =0; i < this.selectionSet.length; i++){\n             if(this.selectionSet[i].columnName === colName){\n                 let myRow = this.selectionSet[i].row-2;\n                 let myCell = this.selectionSet[i].cell-2;\n\n                 //this.workingDataSet[ myRow-2][myCell-2].value = value;\n                 const updateSet : iUpdateSet = { row:myRow ,cell:myCell, newData:value }\n                 this.props.gridData.setProductData = updateSet\n             }\n\n         }\n\n         this.setState({workingData : this.props.gridData.getData});\n         console.log( \"working data set:\", this.state.workingData );\n     };\n\n     getEditDrawer():ReactElement{\n\n         if(this.state.editDrawerOpen === false){\n             return(<></>);\n         }\n\n         if(this.dataGridRef.current != null && this.dataGridRef.current != undefined ){\n             this.selectionSet = this.dataGridRef.current.selectionSet;\n             console.log(\"cat details view selection set: \", this.selectionSet)\n         }\n\n         let inputs : ReactElement[] = [];\n         let selectedItems : iDataGridItem[] = [];\n\n         //Create list of selection items that need inputs (i.e. one input per column)\n        i: for(let i=0; i < this.selectionSet.length; i++){\n           j: for(let j=0; j < selectedItems.length; j++){\n                if(this.selectionSet[i].columnName === selectedItems[j].columnName){\n                    continue i;\n                }\n            }\n                 let row = this.selectionSet[i].row;\n                 let cell = this.selectionSet[i].cell;\n                 let productDataItem = catmanData.productData[row-2][cell-2];\n                 selectedItems.push(productDataItem);\n        }\n\n         for( let i=0; i < selectedItems.length; i++){\n             let input = (\n                 <TextInput\n                     row={this.selectionSet[i].row}\n                     cell={this.selectionSet[i].cell}\n                     columnName={this.selectionSet[i].columnName}\n                     label={this.getColumnLabel( selectedItems[i].columnName )}\n                     currentValue={ selectedItems[i].value}\n                     onChangeAction={this.updateValues}\n                 />\n             );\n             inputs.push(input)\n         }\n\n        let maximize = (valueCheck : boolean)=>{\n             if(valueCheck === true){\n                 return \"maximized\"\n             }else{\n                 return \"catman-edit-default restored\"\n             }\n        };\n\n         let restoreAndMaximizeTooltip = (valueCheck : boolean)=>{\n            if(valueCheck === false){\n                return toolTipContent.maximizeDrawer();\n            }else{\n                return toolTipContent.restoreDrawer();\n            }\n         };\n\n         let restoreAndMaximizeBtnIcon = (valueCheck : boolean)=>{\n             if(valueCheck === false){\n                 return \"icon-maximize\"\n             }else{\n                 return \"icon-restore-btn\"\n             }\n         }\n\n\n         let drawer = (<></>);\n             if(this.state.editDrawerOpen === true){\n                 drawer = (\n                     <>\n                         <StickyThing\n                             ref = {this.editDrawerRef}\n                             enterFromThisSide=\"bottom\"\n                             lastResortClasses={`catman-edit-drawer ${maximize(this.state.editDrawerMaximized)}`}\n                             animateIn={true}\n                             heightIncludeUnits=\"\"\n                             widthIncludeUnits={\"\"}\n                             stickyOpen={true}\n                             bgColor={\"#CECECE\"}\n                             doAnimation={true}\n                             toolBar=\"none\"\n                         >\n                             <div className={\"tool-bar\"}>\n                                 <div></div>\n                                 <div className=\"drawer-controls\">\n                                      <AppButton\n                                         buttonType={\"secondary-action\"}\n                                         buttonLabel=\"\"\n                                         OnClick={()=>this.maximizeEditDrawer()}\n                                         tooltipType=\"custom\"\n                                         tooltip={restoreAndMaximizeTooltip(this.state.editDrawerMaximized)}\n                                         toolTipTimeOutInMS={10000}\n                                         classes=\"tool-bar-btn icon-only-btn\"\n                                         iconLeft={\n                                             <CatmanIcon\n                                                 iconName={`${restoreAndMaximizeBtnIcon(this.state.editDrawerMaximized)}`}\n                                                 classes=\" \"\n                                                 height=\"100%\"\n                                                 width=\"100%\"\n                                             />\n                                         }\n                                     />\n                                     <AppButton\n                                         buttonType={\"secondary-action\"}\n                                         buttonLabel=\"\"\n                                         OnClick={()=>this.closeEditDrawer()}\n                                         tooltipType=\"custom\"\n                                         tooltip={toolTipContent.closeDrawer()}\n                                         toolTipTimeOutInMS={10000}\n                                         classes=\"icon-only-btn\"\n                                         iconLeft={\n                                             <CatmanIcon\n                                                 iconName=\"icon-close\"\n                                                 classes=\" \"\n                                                 height=\"100%\"\n                                                 width=\"100%\"\n                                             />\n                                         }\n                                     />\n\n                                 </div>\n                             </div>\n\n                             <div className=\"drawer-edit-area\">\n                                 {inputs}\n                             </div>\n                         </StickyThing>\n                     </>\n                 );\n             }\n         return drawer;\n     }\n\n     maximizeEditDrawer(){\n         this.setState({editDrawerMaximized : !this.state.editDrawerMaximized})\n     }\n\n     closeEditDrawer(){\n         this.setState({\n             editDrawerOpen : false,\n             editDrawerMaximized : false\n         });\n         if(this.dataGridRef.current != null && this.dataGridRef.current != undefined){\n             this.dataGridRef.current.clearSelection();\n         }\n         this.drawerFirstOpen = false;\n     }\n\n     openEditDrawer( ){\n         this.drawerFirstOpen = true;\n         this.setState({editDrawerOpen : true});\n     }\n\n     //FOOTER RELATED\n     getFooterMenu(){\n        let footer = (<></>);\n        let buttons = (<></>);\n\n        switch(this.state.footerMode){\n            case \"default\":\n                buttons = (\n                    <div className=\"footer-btn-bar catman-footer\">\n                        <AppButton\n                            classes={\"separate-left\"}\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Edit Selected\"\n                            OnClick={()=>this.switchToEditMode()}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerEditSelection()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-edit\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            classes={\" \"}\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Add Variant\"\n                            OnClick={()=>this.manageModals(\"add-to-product-group\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerAddVariant()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-add\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Clear Selection\"\n                            OnClick={()=>this.footerActions(\"cancel\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.clearSelection()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"clear\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Delete Selected\"\n                            OnClick={()=>this.footerActions(\"cancel\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerDelete()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-delete\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n\n\n                    </div>\n                );\n                break;\n\n            case \"multiple-selected\":\n                buttons = (\n                    <div className=\"footer-btn-bar catman-footer\">\n                        <AppButton\n                            classes={\"\"}\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Edit Selected\"\n                            OnClick={()=>this.switchToEditMode()}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerEditSelection()}\n                            toolTipTimeOutInMS={10000}\n                            tooltipXOffset={0}\n                            tooltipYOffset={20}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-edit\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            classes={\" \"}\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Make Into a Variant Group\"\n                            OnClick={()=>this.manageModals(\"create-product-group\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerCreateVariant()}\n                            toolTipTimeOutInMS={10000}\n                            tooltipXOffset={0}\n                            tooltipYOffset={20}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-add\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Clear Selection\"\n                            OnClick={()=>this.footerActions(\"cancel\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.clearSelection()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"clear\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Delete Selected\"\n                            OnClick={()=>this.footerActions(\"cancel\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerDelete()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-delete\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                    </div>\n                );\n                break;\n\n            case \"has-group\":\n                buttons = (<AppButton\n                    buttonType={\"secondary-action\"}\n                    buttonLabel=\"catalog manager\"\n                    OnClick={()=>this.footerActions(\"cancel\")}\n                    tooltipType=\"custom\"\n                    tooltip={toolTipContent.mainNav()}\n                    toolTipTimeOutInMS={10000}\n                    iconRight={\n                        <CatmanIcon\n                            iconName=\"down-arrow\"\n                            classes=\"ui-icon\"\n                            height=\"100%\"\n                            width=\"100%\"\n                        />\n                    }\n                />)\n        }\n\n        if(this.state.footerOpen === true){\n\n            let buttonBar : ReactElement = (<>\n            </>);\n\n            footer = (\n                <>\n                    <StickyThing\n                        enterFromThisSide=\"bottom\"\n                        lastResortClasses={\"catman-footer-container\"}\n                        animateIn={true}\n                        heightIncludeUnits=\"3.75rem\"\n                        widthIncludeUnits={\"100%\"}\n                        stickyOpen={true}\n                        bgColor={\"rgba(0,0,0,0)\"}\n                        doAnimation={true}\n                    >\n                        {buttons}\n                    </StickyThing>\n                </>\n            );\n        }\n        return footer;\n    }\n\n     footerActions(action : \"cancel\" | \"add-group\" | \"edit\"){\n         switch (action) {\n\n             case \"cancel\":\n                 this.setState({footerOpen : false});\n                 this.initialized = false;\n                 if(this.dataGridRef.current !== null && this.dataGridRef.current !== undefined){\n                     this.dataGridRef.current.clearSelection();\n                 }\n                 break;\n             case \"add-group\":\n\n                 break;\n             case \"edit\":\n                 this.setState({footerOpen : false});\n                 this.initialized = false;\n\n                 break;\n         }\n     }\n\n     addAction(addType:string){\n         console.log(\"added item or items: \", addType );\n         switch (addType) {\n             case \"add-attribute\":\n\n                 return(<></>);\n             case \"add-products\":\n\n                 return(<></>);\n\n\n\n         }\n     }\n\n        //FOOTER ACTIONS\n     switchToEditMode(){\n         if(this.dataGridRef.current !== null && this.dataGridRef.current !== undefined){\n             this.dataGridRef.current.switchToEditModeFromCheckBoxMode();\n             this.openEditDrawer();\n             this.setState({footerOpen : false})\n         }\n\n\n         //manageSelectionSet = (selectionSet : iDataGridItem[], checkBoxSelections : number[], message : string )\n\n         //this.footerActions(\"cancel\");\n\n     }\n\n    //GRID MANAGEMENT\n     manageSelectionSet = (selectionSet : iDataGridItem[], checkBoxSelections : number[], message : string )=>{\n        if(checkBoxSelections.length > 0 || (this.initialized === false && checkBoxSelections.length === 0 && message === \"checkbox-launched\") ){\n            if(checkBoxSelections.length <= 1){\n                this.setState({editDrawerOpen : false, footerOpen : true, footerMode: \"default\"});\n            }else if(checkBoxSelections.length > 1 ){\n                this.setState({editDrawerOpen : false, footerOpen : true, footerMode: \"multiple-selected\"});\n            }\n            this.initialized = true;\n        }else{\n            this.setState({footerOpen : false});\n        }\n\n     };\n\n     conditionClasses(){\n         if(this.state.editDrawerOpen === true){\n             return \"drawer-open\";\n         }\n     }\n\n     //MODALS modalStateType = \"closed\" | \"add-to-product-group\" | \"create-product-group\" | \"delete-confirmation\";\n    manageModals(modalState : modalStateType){\n         console.log(\"close the dang modal!!!!\", modalState);\n          this.setState({modalState : modalState});\n    }\n\n     getModals(){\n\n         switch(this.state.modalState){\n             case \"add-to-product-group\":\n                 return(\n                 <>\n                     <ModalView\n                         closeModalFunc={()=>this.manageModals(\"closed\")}\n                         modalTitle=\"\"\n                     >\n                        <AddVariantsWizard\n                            addAction={dataManagerMain.addToProductGroup}\n                            groups={dataManagerMain.getGroups()}\n                            selectedCheckBoxes={this.getCheckBoxesSelection()}\n                            manageModal = {()=>this.manageModals(\"closed\")}\n                        />\n\n                     </ModalView>\n                 </>\n\n                     );\n             case \"create-product-group\":\n                 return(\n                     <>\n                         <ModalView\n                             closeModalFunc={()=>this.manageModals(\"closed\")}\n                             modalTitle=\"\"\n                         >\n                             <CreateProductGroupWizard\n                                 addAction={dataManagerMain.addToProductGroup}\n                                 groups={dataManagerMain.getGroups()}\n                                 selectedCheckBoxes={this.getCheckBoxesSelection()}\n                                 manageModal = {()=>this.manageModals(\"closed\")}\n                             />\n\n                         </ModalView>\n                     </>\n\n                  )\n         }\n     }\n\n     //RENDERING AND PORTALS\n    componentDidUpdate(): void {\n         let inputs : any = document.getElementsByClassName(\"InputBox\");\n\n        console.log(this.drawerFirstOpen)\n        if(this.drawerFirstOpen === true ){\n           if(inputs[0] != undefined){\n               inputs[0].focus();\n               inputs[0].select();\n               this.drawerFirstOpen = false;\n           }\n        }\n     }\n\n    render(){\n         return (\n             <>\n                 <TitleArea\n                     mainTitle=\"Spreadsheet View\"\n                     subTitle=\"My Catalog\"\n                     titleType=\"subtitle-above\"\n                 />\n                 <DataGrid\n                     ref={this.dataGridRef}\n                     data={this.state.workingData}\n                     manageParentViews={()=>this.openEditDrawer()}\n                     selectionCallback={this.manageSelectionSet}\n                     columnsData={this.state.columnsData}\n                     classes={this.conditionClasses()}\n                     addAction={this.addAction}\n                 />\n                 {this.getEditDrawer() }\n                 {this.getFooterMenu() }\n                 {this.getProductViewDrawer()}\n                 {this.getModals()}\n             </>\n         )\n     }\n}\n"]},"metadata":{},"sourceType":"module"}