{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/media-library/media-library.tsx\";\nimport React from \"react\";\nimport { MainHeaderArea } from \"../_common/main-header-area/main-header-area\";\nimport { Navigation } from \"../../view-components/list-menu/intra-app-navigation\";\nimport { mainNavConfig } from \"../_catman-configuration/common-app-configuration\";\nimport { toolTipContent } from \"../tool-tip-content/content-tool-tips\";\nimport { TitleArea } from \"../../view-components/title-area/title-area\";\nimport { CardArea } from \"../../view-components/cards-area/card-area\";\nimport { Card } from \"../../view-components/card/card\";\nimport { dataManagerMain } from \"../../index\";\nimport StickyThing from \"../../view-components/sticky-panel/sticky-panel\";\nimport { SingleMediaDetailsView } from \"./media-details-view\";\nimport { CatmanIcon } from \"../../svg/icons/icons\";\nimport AppButton from \"../../view-components/button/app-button\";\nexport class MediaLibraryView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selectedMediaIndex = 0;\n\n    this.manageMediaDetailsPage = mediaIndex => {\n      console.log(\"mediaIndex\", mediaIndex);\n      this.selectedMediaIndex = mediaIndex;\n      this.setState({\n        mediaDetailsOpen: !this.state.mediaDetailsOpen\n      });\n    };\n\n    this.state = {\n      mediaDetailsOpen: false,\n      viewMode: \"cards-view\"\n    };\n  }\n\n  manageViewModes(state) {}\n\n  getMediaDetailsView() {\n    if (this.state.mediaDetailsOpen === true) {\n      return /*#__PURE__*/React.createElement(StickyThing, {\n        enterFromThisSide: \"right\",\n        lastResortClasses: \"product-view\",\n        animateIn: true,\n        heightIncludeUnits: \"100vh\",\n        widthIncludeUnits: \"100vw\",\n        stickyOpen: true,\n        bgColor: \"#CECECE\",\n        doAnimation: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SingleMediaDetailsView, {\n        mediaData: dataManagerMain.getMediaData()[this.selectedMediaIndex],\n        closeSingleMediaView: () => this.manageMediaDetailsPage(0),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  getCardArea() {\n    if (this.state.mediaDetailsOpen === false) {\n      return /*#__PURE__*/React.createElement(CardArea, {\n        containerClasses: \"catman-media-cards\",\n        cards: /*#__PURE__*/React.createElement(Card, {\n          cardType: \"media\",\n          mediaData: dataManagerMain.getMediaData(),\n          getDetailsFunctions: this.manageMediaDetailsPage,\n          actionToolTip: toolTipContent.mediaRelatedTooltips(\"media-details\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  }\n\n  getGridArea() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"Grid Test\");\n  }\n\n  getContentArea() {\n    switch (this.state.viewMode) {\n      case \"grid-view\":\n        return this.getGridArea();\n\n      case \"cards-view\":\n        return this.getCardArea();\n    }\n  }\n\n  getToggleBar() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AppButton, {\n      OnClick: () => {},\n      buttonType: \"transparent-bg\",\n      tooltipType: \"custom\",\n      tooltip: \"\",\n      classes: ` `,\n      iconCenter: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: `checkbox-unchecked`,\n        width: \"1rem\",\n        height: \"100%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AppButton, {\n      OnClick: () => {},\n      buttonType: \"transparent-bg\",\n      tooltipType: \"custom\",\n      tooltip: \"\",\n      classes: ` `,\n      iconCenter: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: `checkbox-unchecked`,\n        width: \"1rem\",\n        height: \"100%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AppButton, {\n      OnClick: () => {},\n      buttonType: \"transparent-bg\",\n      tooltipType: \"custom\",\n      tooltip: \"\",\n      classes: ` `,\n      iconCenter: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: `checkbox-unchecked`,\n        width: \"1rem\",\n        height: \"100%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MainHeaderArea, {\n      addItemAction: () => {},\n      sectionTitle: \"Media Library\",\n      mainButtonLabel: \"Add Media\",\n      navigationElement: /*#__PURE__*/React.createElement(Navigation, {\n        menuHelpStyle: \"panel\",\n        navElements: mainNavConfig,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 40\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TitleArea, {\n      mainTitle: \"Media Library\",\n      subTitle: \"Manage media to describe your products\",\n      titleType: \"subtitle-above\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }), this.getContentArea(), this.getMediaDetailsView());\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/media-library/media-library.tsx"],"names":["React","MainHeaderArea","Navigation","mainNavConfig","toolTipContent","TitleArea","CardArea","Card","dataManagerMain","StickyThing","SingleMediaDetailsView","CatmanIcon","AppButton","MediaLibraryView","Component","constructor","props","selectedMediaIndex","manageMediaDetailsPage","mediaIndex","console","log","setState","mediaDetailsOpen","state","viewMode","manageViewModes","getMediaDetailsView","getMediaData","getCardArea","mediaRelatedTooltips","getGridArea","getContentArea","getToggleBar","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {MainHeaderArea} from \"../_common/main-header-area/main-header-area\";\nimport {Navigation} from \"../../view-components/list-menu/intra-app-navigation\";\nimport {mainNavConfig} from \"../_catman-configuration/common-app-configuration\";\nimport {toolTipContent} from \"../tool-tip-content/content-tool-tips\";\nimport {TitleArea} from \"../../view-components/title-area/title-area\";\nimport {CardArea} from \"../../view-components/cards-area/card-area\";\nimport {Card} from \"../../view-components/card/card\";\nimport {dataManagerMain} from \"../../index\";\nimport StickyThing from \"../../view-components/sticky-panel/sticky-panel\";\nimport {SingleMediaDetailsView} from \"./media-details-view\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport AppButton from \"../../view-components/button/app-button\";\n\ninterface iPROPS {\n    message?: string;\n}\n\ninterface iSTATE{\n    mediaDetailsOpen : boolean;\n    viewMode : \"cards-view\" | \"grid-view\" | \"mosaic-view\";\n}\n\nexport class MediaLibraryView extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n        this.state={\n            mediaDetailsOpen : false,\n            viewMode : \"cards-view\"\n        }\n    }\n    selectedMediaIndex : number = 0;\n\n    manageMediaDetailsPage=(mediaIndex : number)=>{\n        console.log(\"mediaIndex\", mediaIndex );\n        this.selectedMediaIndex = mediaIndex;\n        this.setState({mediaDetailsOpen : !this.state.mediaDetailsOpen})\n    };\n\n    manageViewModes(state:string){\n\n    }\n\n    getMediaDetailsView(){\n        if(this.state.mediaDetailsOpen === true){\n            return(\n                <StickyThing\n                    enterFromThisSide=\"right\"\n                    lastResortClasses={\"product-view\"}\n                    animateIn={true}\n                    heightIncludeUnits=\"100vh\"\n                    widthIncludeUnits={\"100vw\"}\n                    stickyOpen={true}\n                    bgColor={\"#CECECE\"}\n                    doAnimation={true}\n                >\n                    <SingleMediaDetailsView\n                        mediaData={dataManagerMain.getMediaData()[this.selectedMediaIndex]}\n                        closeSingleMediaView={()=>this.manageMediaDetailsPage(0)}\n                    />\n                </StickyThing>\n            )\n        }\n    }\n\n    getCardArea() {\n        if (this.state.mediaDetailsOpen === false) {\n            return (<CardArea\n                containerClasses=\"catman-media-cards\"\n                cards={\n                    <Card\n                        cardType=\"media\"\n                        mediaData={dataManagerMain.getMediaData()}\n                        getDetailsFunctions={this.manageMediaDetailsPage}\n                        actionToolTip={toolTipContent.mediaRelatedTooltips(\"media-details\")}\n                    />\n                }\n            />)\n        } else {\n            return (<></>)\n        }\n    }\n\n    getGridArea(){\n        return (<div>Grid Test</div>)\n\n    }\n\n    getContentArea(){\n        switch (this.state.viewMode) {\n            case \"grid-view\":\n                return this.getGridArea();\n            case \"cards-view\":\n                return this.getCardArea();\n        }\n    }\n\n    getToggleBar(){\n        return(\n            <div className=\"button-bar\">\n                <AppButton\n                    OnClick={()=>{}}\n                    buttonType=\"transparent-bg\"\n                    tooltipType=\"custom\"\n                    tooltip={ \"\"}\n                    classes={` `}\n                    iconCenter={(\n                        <CatmanIcon\n                            iconName={`checkbox-unchecked`}\n                            width=\"1rem\"\n                            height=\"100%\"\n                        />\n                    )}\n                />\n                <AppButton\n                    OnClick={()=>{}}\n                    buttonType=\"transparent-bg\"\n                    tooltipType=\"custom\"\n                    tooltip={ \"\"}\n                    classes={` `}\n                    iconCenter={(\n                        <CatmanIcon\n                            iconName={`checkbox-unchecked`}\n                            width=\"1rem\"\n                            height=\"100%\"\n                        />\n                    )}\n                />\n                <AppButton\n                    OnClick={()=>{}}\n                    buttonType=\"transparent-bg\"\n                    tooltipType=\"custom\"\n                    tooltip={ \"\"}\n                    classes={` `}\n                    iconCenter={(\n                        <CatmanIcon\n                            iconName={`checkbox-unchecked`}\n                            width=\"1rem\"\n                            height=\"100%\"\n                        />\n                    )}\n                />\n            </div>\n        )\n    }\n\n    render(){\n        return(\n            <>\n                <MainHeaderArea\n                    addItemAction={()=>{}}\n                    sectionTitle=\"Media Library\"\n                    mainButtonLabel=\"Add Media\"\n                    navigationElement={<Navigation menuHelpStyle=\"panel\" navElements={mainNavConfig} />}\n                />\n                <TitleArea\n                    mainTitle=\"Media Library\"\n                    subTitle=\"Manage media to describe your products\"\n                    titleType=\"subtitle-above\"\n                />\n                {this.getContentArea()}\n                {this.getMediaDetailsView()}\n            </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}