{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/button/app-button.tsx\";\nimport * as React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { ToolTip } from \"../heru-tool-tip/tool-tip\";\nexport class AppButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.hoverActions = [];\n    this.btnRef = React.createRef();\n    this.linkRef = React.createRef();\n    this.toolTipRef = React.createRef();\n    this.toolTipTimeOut = void 0;\n    this.state = {\n      isHovered: false\n    };\n    this.hoverActions = this.props.hoverActions;\n\n    if (this.props.toolTipTimeOutInMS != null) {\n      this.toolTipTimeOut = this.props.toolTipTimeOutInMS;\n    } else {\n      //if timeout isn't set, this is default\n      this.toolTipTimeOut = 5000;\n    }\n  }\n\n  doHoverActions() {\n    if (this.hoverActions !== undefined) {\n      for (let i = 0; i < this.hoverActions.length; i++) {\n        if (this.hoverActions[i] !== undefined) {\n          this.hoverActions[i]();\n        }\n      }\n    }\n\n    this.setState({\n      isHovered: true\n    }); //GO TO TOOL TIP:\n    //when hovering on the button, we'll start the hovering actions in the tool tip\n\n    if (this.toolTipRef.current != null && this.props.tooltipType !== \"none\") {\n      this.toolTipRef.current.startHover();\n    }\n  }\n\n  doHoverOutActions() {\n    this.doHoverClear();\n\n    if (this.props.hoverLeaveActions != undefined && this.props.hoverLeaveActions != null) {\n      for (let i = 0; i < this.props.hoverLeaveActions.length; i++) {\n        this.props.hoverLeaveActions[i]();\n      }\n    }\n  }\n\n  doHoverClear() {\n    //do any hover actions that were passed along\n    if (this.props.hoverLeaveActions !== null && this.props.hoverLeaveActions !== undefined) {\n      for (let i = 0; i < this.props.hoverLeaveActions.length; i++) {\n        this.props.hoverLeaveActions[i]();\n      }\n    }\n\n    if (this.toolTipRef.current != null) {\n      this.toolTipRef.current.clearHover();\n    }\n  } //this will generate the tooltip, ref this wherever you need one\n\n\n  handleToolTip() {\n    if (this.state.isHovered === false) {\n      return /*#__PURE__*/React.createElement(ToolTip, {\n        ref: this.toolTipRef,\n        timeoutInMS: this.toolTipTimeOut,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ToolTip, {\n        ref: this.toolTipRef,\n        btnReference: this.btnRef,\n        tooltipType: \"custom\",\n        toolTipCustomElement: this.props.tooltip,\n        timeoutInMS: this.toolTipTimeOut,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 23\n        }\n      });\n    }\n  }\n\n  baseButton(btnStyles) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.handleToolTip(), /*#__PURE__*/React.createElement(\"button\", {\n      ref: this.btnRef,\n      onClick: () => this.props.OnClick(),\n      onMouseOver: () => this.doHoverActions(),\n      onMouseOut: () => this.doHoverOutActions(),\n      className: `btn-from-left btn-default ${btnStyles} `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-descriptors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, this.props.buttonLabel, this.props.iconCenter), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cm-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, this.props.iconRight))));\n  }\n\n  getButton() {\n    switch (this.props.buttonType) {\n      case \"main-action\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, this.handleToolTip(), /*#__PURE__*/React.createElement(\"button\", {\n          ref: this.btnRef,\n          onClick: () => this.props.OnClick(),\n          onMouseOver: () => this.doHoverActions(),\n          onMouseOut: () => this.doHoverOutActions(),\n          className: \"btn-main-action\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }\n        }, this.props.buttonLabel));\n\n      case \"transparent-bg\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, this.handleToolTip(), /*#__PURE__*/React.createElement(\"button\", {\n          ref: this.btnRef,\n          onClick: () => this.props.OnClick(),\n          onMouseOver: () => this.doHoverActions(),\n          onMouseOut: () => this.doHoverOutActions(),\n          className: `btn-transparent-bg ${this.props.classes}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }\n        }, this.props.buttonLabel, this.props.iconCenter));\n\n      case \"from-left\":\n        return this.baseButton('btn-global');\n\n      case \"nav-link\":\n        if (this.props.navPath !== undefined) {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavLink, {\n            ref: this.linkRef,\n            onMouseOver: () => this.doHoverActions(),\n            onMouseOut: () => this.doHoverOutActions(),\n            exact: true,\n            to: this.props.navPath,\n            className: `app-btn btn-main-action nav-link ${this.props.classes}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"hover-panel\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 33\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"button-decorator\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"icon-left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 37\n            }\n          }, this.props.iconLeft), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"btn-label\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 37\n            }\n          }, this.props.buttonLabel, this.props.iconCenter), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"icon-right\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 37\n            }\n          }, this.props.iconRight))), this.handleToolTip());\n        } else {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n            onMouseOver: () => this.doHoverActions(),\n            onMouseOut: () => this.doHoverOutActions(),\n            className: `btn-main-action ${this.props.classes}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }\n          }, this.props.buttonLabel), this.handleToolTip());\n        }\n\n      case \"menu-link\":\n        if (this.props.navPath !== undefined) {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, this.handleToolTip(), /*#__PURE__*/React.createElement(Link, {\n            ref: this.linkRef,\n            onMouseOver: () => this.doHoverActions(),\n            onMouseOut: () => this.doHoverClear(),\n            to: this.props.navPath,\n            className: \"btn-main-action\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }\n          }, this.props.iconLeft, this.props.buttonLabel, this.props.iconRight)));\n        } else {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, this.handleToolTip(), /*#__PURE__*/React.createElement(\"button\", {\n            onMouseOver: () => this.doHoverActions(),\n            className: \"btn-main-action\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }\n          }, this.props.buttonLabel));\n        }\n\n      case \"secondary-action\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, this.handleToolTip(), /*#__PURE__*/React.createElement(\"button\", {\n          onMouseOver: () => this.doHoverActions(),\n          className: \"btn-secondary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }\n        }, this.props.buttonLabel));\n\n      default:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n          onMouseOver: () => this.doHoverActions(),\n          className: \"btn-default\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }\n        }, \"Default Button\"));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.getButton());\n  }\n\n}\nexport default AppButton;","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/button/app-button.tsx"],"names":["React","Link","NavLink","ToolTip","AppButton","Component","constructor","props","hoverActions","btnRef","createRef","linkRef","toolTipRef","toolTipTimeOut","state","isHovered","toolTipTimeOutInMS","doHoverActions","undefined","i","length","setState","current","tooltipType","startHover","doHoverOutActions","doHoverClear","hoverLeaveActions","clearHover","handleToolTip","tooltip","baseButton","btnStyles","OnClick","buttonLabel","iconCenter","iconRight","getButton","buttonType","classes","navPath","iconLeft","render"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {Link, NavLink} from \"react-router-dom\";\nimport {ToolTip} from \"../heru-tool-tip/tool-tip\";\nimport {ReactElement, Ref, RefObject} from \"react\";\n\n\ntype AppButtonType = \"from-left\"\n    | \"main-action\"\n    | \"secondary-action\"\n    | \"menu-link\"\n    |\"nav-link\"\n    |\"transparent-bg\";\n\ninterface iPROPS{\n    buttonType: AppButtonType;\n    buttonLabel? : string;\n    iconCenter? : ReactElement;\n    iconRight? : ReactElement;\n    iconLeft? : ReactElement;\n    navPath? : any;\n    index? : number;\n    param? : string;\n    hoverActions? : any[];\n    hoverLeaveActions? : any[];\n    OnClick? : any;\n    tooltipType : \"basic\" | \"custom\" | \"none\";\n    tooltip? : ReactElement;\n    toolTipTimeOutInMS? : number;\n    classes? : string;\n    state? : string;\n}\n\ninterface iSTATE{\n    isHovered : boolean\n}\n\nexport class AppButton extends React.Component<iPROPS, iSTATE>{\nconstructor(props:iPROPS) {\n    super(props);\n    this.state = {\n        isHovered : false\n    };\n    this.hoverActions = this.props.hoverActions;\n    if(this.props.toolTipTimeOutInMS != null){\n        this.toolTipTimeOut = this.props.toolTipTimeOutInMS\n    }else{\n        //if timeout isn't set, this is default\n        this.toolTipTimeOut = 5000\n    }\n}\n    hoverActions :any[] | undefined = [];\n    btnRef:RefObject<HTMLButtonElement> = React.createRef<HTMLButtonElement>();\n    linkRef : RefObject<HTMLAnchorElement> = React.createRef<HTMLAnchorElement>();\n    toolTipRef = React.createRef<ToolTip>();\n    //In Milliseconds\n    toolTipTimeOut : number;\n\n    doHoverActions(){\n      if(this.hoverActions !== undefined){\n          for(let i=0; i < this.hoverActions.length; i++){\n              if(this.hoverActions[i] !== undefined){\n                  this.hoverActions[i]();\n              }\n          }\n      }\n      this.setState({isHovered : true});\n\n      //GO TO TOOL TIP:\n      //when hovering on the button, we'll start the hovering actions in the tool tip\n      if(this.toolTipRef.current != null && this.props.tooltipType !== \"none\"){\n\n          this.toolTipRef.current.startHover();\n      }\n    };\n\n    doHoverOutActions(){\n\n        this.doHoverClear();\n        if(this.props.hoverLeaveActions != undefined && this.props.hoverLeaveActions != null){\n            for(let i=0; i < this.props.hoverLeaveActions.length; i++){\n                this.props.hoverLeaveActions[i]()\n            }\n        }\n    }\n\n    doHoverClear(){\n        //do any hover actions that were passed along\n        if(this.props.hoverLeaveActions !== null && this.props.hoverLeaveActions !== undefined ){\n            for(let i=0; i < this.props.hoverLeaveActions.length; i++){\n                this.props.hoverLeaveActions[i]();\n            }\n        }\n        if(this.toolTipRef.current != null){\n            this.toolTipRef.current.clearHover();\n        }\n    }\n\n\n\n    //this will generate the tooltip, ref this wherever you need one\n\n\n    handleToolTip(){\n        if(this.state.isHovered === false){\n            return <ToolTip ref={this.toolTipRef} timeoutInMS={this.toolTipTimeOut}/>;\n        }else{\n            return (\n                      <ToolTip\n                          ref={this.toolTipRef}\n                          btnReference={this.btnRef}\n                          tooltipType=\"custom\"\n                          toolTipCustomElement={this.props.tooltip}\n                          timeoutInMS={this.toolTipTimeOut}\n                      />\n            )\n        }\n    }\n\n    baseButton(btnStyles : string){\n        return(<>\n            {this.handleToolTip()}\n            <button\n                ref={this.btnRef}\n                onClick={()=>this.props.OnClick()}\n                onMouseOver={()=>this.doHoverActions()}\n                onMouseOut={()=>this.doHoverOutActions()}\n                className={`btn-from-left btn-default ${btnStyles} `}\n            >\n                <div className=\"btn-descriptors\">\n                    <div className=\"label\">\n                        {this.props.buttonLabel}\n                        {this.props.iconCenter}\n                    </div>\n\n                    <div className=\"cm-icon\">\n                        {this.props.iconRight}\n                    </div>\n                </div>\n            </button>\n        </>)\n    }\n\n    getButton(){\n        switch (this.props.buttonType) {\n            case \"main-action\":\n                return(\n                    <>\n                        {this.handleToolTip()}\n                        <button\n                            ref={this.btnRef}\n                            onClick={()=>this.props.OnClick()}\n                            onMouseOver={()=>this.doHoverActions()}\n                            onMouseOut={()=>this.doHoverOutActions()}\n                            className=\"btn-main-action\"\n                        >\n                            {this.props.buttonLabel}\n                        </button>\n                    </>\n                );\n\n            case \"transparent-bg\":\n                return(\n                    <>\n                        {this.handleToolTip()}\n                        <button\n                            ref={this.btnRef}\n                            onClick={()=>this.props.OnClick()}\n                            onMouseOver={()=>this.doHoverActions()}\n                            onMouseOut={()=>this.doHoverOutActions()}\n                            className={`btn-transparent-bg ${this.props.classes}`}\n                        >\n                            {this.props.buttonLabel}\n                            {this.props.iconCenter}\n                        </button>\n                    </>\n                );\n\n            case \"from-left\":\n                return(\n                    this.baseButton('btn-global')\n                );\n\n            case \"nav-link\":\n                if(this.props.navPath !== undefined ){\n\n                    return(\n                        <>\n\n                            <NavLink\n                                  ref={this.linkRef}\n                                  onMouseOver={()=>this.doHoverActions()}\n                                  onMouseOut={()=>this.doHoverOutActions()}\n                                  exact\n                                  to={this.props.navPath}\n                                  className={`app-btn btn-main-action nav-link ${this.props.classes}`}\n                            >\n                                <div className=\"hover-panel\"></div>\n                                <div className=\"button-decorator\">\n                                    <div className=\"icon-left\">{this.props.iconLeft}</div>\n                                    <p className=\"btn-label\">{this.props.buttonLabel}{this.props.iconCenter}</p>\n                                    <div className=\"icon-right\">{this.props.iconRight}</div>\n                                </div>\n\n                            </NavLink>\n                            {this.handleToolTip()}\n                        </>\n                    );\n                }else {\n                    return(\n                        <>\n                            <button\n                                onMouseOver={()=>this.doHoverActions()}\n                                onMouseOut={()=>this.doHoverOutActions()}\n                                className={`btn-main-action ${this.props.classes}`}\n                            >\n                                {this.props.buttonLabel}\n                            </button>\n                            {this.handleToolTip()}\n                        </>\n                    );\n                }\n\n            case \"menu-link\":\n                if(this.props.navPath !== undefined ){\n                    return(\n                        <>\n                            {this.handleToolTip()}\n                            <Link ref={this.linkRef}\n                                  onMouseOver={()=>this.doHoverActions()}\n                                  onMouseOut={()=>this.doHoverClear()}\n                                  to={this.props.navPath}\n                                  className=\"btn-main-action\"\n                            >\n                                <div>\n                                    {this.props.iconLeft}\n                                    {this.props.buttonLabel}\n                                    {this.props.iconRight}\n                                </div>\n                            </Link>\n                        </>\n                    );\n                }else {\n                    return(\n                        <>\n                            {this.handleToolTip()}\n                            <button\n                                onMouseOver={()=>this.doHoverActions()}\n                                className=\"btn-main-action\"\n                            >\n                                {this.props.buttonLabel}\n                            </button>\n                        </>\n                    );\n                }\n\n            case \"secondary-action\":\n                return(\n                    <>\n                        {this.handleToolTip()}\n                        <button\n                            onMouseOver={()=>this.doHoverActions()}\n                            className=\"btn-secondary\"\n                        >\n                            {this.props.buttonLabel}\n                        </button>\n                    </>\n                );\n\n            default:\n                return(\n                    <>\n                        <button\n                            onMouseOver={()=>this.doHoverActions()}\n                            className=\"btn-default\"\n                        >\n                            Default Button\n                        </button>\n                    </>\n                )\n        }\n    }\n    render() {\n\n        return (\n            <>\n                {this.getButton()}\n            </>\n        );\n    }\n}\n\nexport default AppButton;"]},"metadata":{},"sourceType":"module"}