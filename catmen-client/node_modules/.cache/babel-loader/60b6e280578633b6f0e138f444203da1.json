{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/catalog-views/main-catalog/main-catalog.tsx\";\nimport React from \"react\";\nimport { Switch, Route, useRouteMatch, useParams, useLocation } from \"react-router-dom\";\nimport { mainNavConfig } from \"../../_catman-configuration/common-app-configuration\";\nimport { MainHeaderArea } from \"../../_common/main-header-area/main-header-area\";\nimport { Navigation } from \"../../../view-components/list-menu/intra-app-navigation\";\nimport { CatalogOverviewView } from \"../catalog-overview/catalog-overview-view\";\nimport { CatalogDetailsView } from \"../catalog-details/catalog-details-view\";\nimport { CatalogDashboardView } from \"../catalog-dashboard/catalog-dashboard-view\";\nimport { ToggleMenu } from \"../../../view-components/toggle-menu/toggle-component\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport function CatalogLanding() {\n  let match = useRouteMatch();\n  let ribbonMenu = /*#__PURE__*/React.createElement(ToggleMenu, {\n    message: \"toggle menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MainHeaderArea, {\n    sectionTitle: \"Landing Page\",\n    navigationElement: /*#__PURE__*/React.createElement(Navigation, {\n      menuHelpStyle: \"panel\",\n      navElements: mainNavConfig,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }\n    }),\n    ribbonElement: ribbonMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:bla`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(ProductViews, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 20\n    }\n  }))));\n}\nexport function ProductViews() {\n  let {\n    bla\n  } = useParams();\n  let query = useQuery(); //console.log(\"query: \", query.get(\"product\"));\n\n  let productID = () => {\n    if (query !== null) {\n      let q = query.get(\"product\");\n      return q;\n    } else {\n      return \"none\";\n    }\n  };\n\n  switch (bla) {\n    case \"overview\":\n      return /*#__PURE__*/React.createElement(CatalogOverviewView, {\n        message: \"this is the overviews page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      });\n\n    case \"dashboard\":\n      return /*#__PURE__*/React.createElement(CatalogDashboardView, {\n        message: \"this is the dashboards view\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      });\n\n    case \"spreadsheet\":\n      return /*#__PURE__*/React.createElement(CatalogDetailsView, {\n        query: productID(),\n        message: bla,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      });\n  }\n\n  return /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Requested topic ID: \", bla);\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/catalog-views/main-catalog/main-catalog.tsx"],"names":["React","Switch","Route","useRouteMatch","useParams","useLocation","mainNavConfig","MainHeaderArea","Navigation","CatalogOverviewView","CatalogDetailsView","CatalogDashboardView","ToggleMenu","useQuery","URLSearchParams","search","CatalogLanding","match","ribbonMenu","path","ProductViews","bla","query","productID","q","get"],"mappings":";AAAA,OAAOA,KAAP,MAAkC,OAAlC;AACA,SACIC,MADJ,EAEIC,KAFJ,EAIIC,aAJJ,EAKIC,SALJ,EAKeC,WALf,QAMO,kBANP;AAQA,SAAQC,aAAR,QAA4B,sDAA5B;AAEA,SAAQC,cAAR,QAA6B,iDAA7B;AACA,SAAQC,UAAR,QAAyB,yDAAzB;AACA,SAAQC,mBAAR,QAAkC,2CAAlC;AACA,SAAQC,kBAAR,QAAiC,yCAAjC;AACA,SAAQC,oBAAR,QAAmC,6CAAnC;AAEA,SAAQC,UAAR,QAAyB,uDAAzB;;AAWA,SAASC,QAAT,GAAoB;AAChB,SAAO,IAAIC,eAAJ,CAAoBT,WAAW,GAAGU,MAAlC,CAAP;AACH;;AAED,OAAO,SAASC,cAAT,GAA0B;AAC7B,MAAIC,KAAK,GAAGd,aAAa,EAAzB;AAEA,MAAIe,UAAU,gBACV,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAIA,sBACG,uDACI,oBAAC,cAAD;AACI,IAAA,YAAY,EAAC,cADjB;AAEI,IAAA,iBAAiB,eACb,oBAAC,UAAD;AACI,MAAA,aAAa,EAAC,OADlB;AAEI,MAAA,WAAW,EAAEZ,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR;AAOI,IAAA,aAAa,EAAEY,UAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,eAaI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAbJ,CADH;AAqBH;AAMD,OAAO,SAASC,YAAT,GAAwB;AAC3B,MAAI;AAAEC,IAAAA;AAAF,MAAUjB,SAAS,EAAvB;AACA,MAAIkB,KAAK,GAAGT,QAAQ,EAApB,CAF2B,CAG3B;;AACA,MAAIU,SAAS,GAAG,MAAI;AAClB,QAAGD,KAAK,KAAK,IAAb,EAAkB;AACd,UAAIE,CAAC,GAAGF,KAAK,CAACG,GAAN,CAAU,SAAV,CAAR;AACA,aAAOD,CAAP;AACH,KAHD,MAGK;AACD,aAAO,MAAP;AACH;AACF,GAPD;;AASA,UAAOH,GAAP;AACI,SAAK,UAAL;AACI,0BAAQ,oBAAC,mBAAD;AAAqB,QAAA,OAAO,EAAC,4BAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;;AAEJ,SAAK,WAAL;AACI,0BAAQ,oBAAC,oBAAD;AAAsB,QAAA,OAAO,EAAC,6BAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;;AAEJ,SAAK,aAAL;AACI,0BAAQ,oBAAC,kBAAD;AAAoB,QAAA,KAAK,EAAEE,SAAS,EAApC;AAAyC,QAAA,OAAO,EAAEF,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AARR;;AAWA,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAyBA,GAAzB,CAAR;AACH","sourcesContent":["import React, {ReactElement} from \"react\";\nimport {\n    Switch,\n    Route,\n    Link,\n    useRouteMatch,\n    useParams, useLocation\n} from \"react-router-dom\";\n\nimport {mainNavConfig} from \"../../_catman-configuration/common-app-configuration\";\n\nimport {MainHeaderArea} from \"../../_common/main-header-area/main-header-area\";\nimport {Navigation} from \"../../../view-components/list-menu/intra-app-navigation\";\nimport {CatalogOverviewView} from \"../catalog-overview/catalog-overview-view\";\nimport {CatalogDetailsView} from \"../catalog-details/catalog-details-view\";\nimport {CatalogDashboardView} from \"../catalog-dashboard/catalog-dashboard-view\";\nimport {LandingPageView} from \"../../landing-page/landing-page-view\";\nimport {ToggleMenu} from \"../../../view-components/toggle-menu/toggle-component\";\nimport {CatalogSingleProduct} from \"../catalog-details/single-product-view\";\n\ninterface iPROPS {\n    message: string;\n}\n\ninterface iSTATE{\n\n}\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport function CatalogLanding() {\n    let match = useRouteMatch();\n\n    let ribbonMenu = (\n        <ToggleMenu message={\"toggle menu\"} />\n    );\n\n    return(\n       <>\n           <MainHeaderArea\n               sectionTitle=\"Landing Page\"\n               navigationElement={\n                   <Navigation\n                       menuHelpStyle=\"panel\"\n                       navElements={mainNavConfig}\n                   />}\n               ribbonElement={ribbonMenu}\n           />\n\n           <br/>\n\n           <Switch>\n               <Route path={`${match.path}/:bla`}>\n                   <ProductViews  />\n               </Route>\n           </Switch>\n       </>\n    )\n}\n\ninterface iProdView{\n    ribbon : ReactElement;\n}\n\nexport function ProductViews() {\n    let { bla } = useParams();\n    let query = useQuery();\n    //console.log(\"query: \", query.get(\"product\"));\n    let productID = ()=>{\n      if(query !== null){\n          let q = query.get(\"product\");\n          return(q)\n      }else{\n          return \"none\"\n      }\n    };\n\n    switch(bla){\n        case \"overview\":\n            return (<CatalogOverviewView message=\"this is the overviews page\" />);\n\n        case \"dashboard\":\n            return (<CatalogDashboardView message=\"this is the dashboards view\" />);\n\n        case \"spreadsheet\":\n            return (<CatalogDetailsView query={productID()}  message={bla}/>)\n    }\n\n    return (<h3>Requested topic ID: {bla}</h3>);\n}\n\n"]},"metadata":{},"sourceType":"module"}