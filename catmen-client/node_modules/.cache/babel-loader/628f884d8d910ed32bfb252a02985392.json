{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/_catman-configuration/wizards.tsx\";\nimport * as React from \"react\";\nimport { toolTipContent } from \"../_common/tool-tip-content/content-tool-tips\";\nimport { CatmanIcon } from \"../../svg/icons/icons\";\nimport AppButton from \"../../view-components/button/app-button\";\nimport { DividerLine } from \"../../view-components/divider-line/divider-line\";\nexport class Wizards extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  element() {\n    switch (this.props.wizardPanel) {\n      case \"upload-1\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }\n        }, \"Automatically Add/Update Products\"), /*#__PURE__*/React.createElement(AppButton, {\n          buttonType: \"drag-area-large\",\n          buttonLabel: \"Drag Files Here\",\n          tooltipType: \"custom\",\n          tooltip: toolTipContent.footerCancel(),\n          toolTipTimeOutInMS: 10000,\n          iconLeft: /*#__PURE__*/React.createElement(CatmanIcon, {\n            iconName: \"icon-add-invert\",\n            classes: \" \",\n            height: \"100%\",\n            width: \"100%\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 37\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(DividerLine, {\n          dividerType: \"labeled\",\n          labelText: \"OR\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }\n        }, \"Automatically Add/Update Products\"), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }\n        }));\n    }\n  }\n\n  render() {\n    return this.element();\n  }\n\n}\nexport let uploadWizard = [{\n  titleHeader: \"string;\",\n  instructionText: \"string;\",\n  panel: /*#__PURE__*/React.createElement(Wizards, {\n    wizardPanel: \"upload-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 18\n    }\n  }),\n  winCondition: 1 > 0\n}, {\n  titleHeader: \"string;\",\n  instructionText: \"string;\",\n  panel: /*#__PURE__*/React.createElement(Wizards, {\n    wizardPanel: \"upload-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 18\n    }\n  }),\n  winCondition: 1 > 0\n}, {\n  titleHeader: \"string;\",\n  instructionText: \"string;\",\n  panel: /*#__PURE__*/React.createElement(Wizards, {\n    wizardPanel: \"upload-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 18\n    }\n  }),\n  winCondition: 1 > 0\n}];","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/_catman-configuration/wizards.tsx"],"names":["React","toolTipContent","CatmanIcon","AppButton","DividerLine","Wizards","Component","constructor","props","element","wizardPanel","footerCancel","render","uploadWizard","titleHeader","instructionText","panel","winCondition"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,SAAQC,cAAR,QAA6B,+CAA7B;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AACA,SAAQC,WAAR,QAA0B,iDAA1B;AAYA,OAAO,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAqD;AAExDC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;AACH;;AAEDC,EAAAA,OAAO,GAAE;AACL,YAAQ,KAAKD,KAAL,CAAWE,WAAnB;AACI,WAAK,UAAL;AACI,4BACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADJ,eAEI,oBAAC,SAAD;AACI,UAAA,UAAU,EAAE,iBADhB;AAEI,UAAA,WAAW,EAAC,iBAFhB;AAGI,UAAA,WAAW,EAAC,QAHhB;AAII,UAAA,OAAO,EAAET,cAAc,CAACU,YAAf,EAJb;AAKI,UAAA,kBAAkB,EAAE,KALxB;AAMI,UAAA,QAAQ,eACJ,oBAAC,UAAD;AACI,YAAA,QAAQ,EAAC,iBADb;AAEI,YAAA,OAAO,EAAC,GAFZ;AAGI,YAAA,MAAM,EAAC,MAHX;AAII,YAAA,KAAK,EAAC,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,eAiBI,oBAAC,WAAD;AAAa,UAAA,WAAW,EAAE,SAA1B;AAAqC,UAAA,SAAS,EAAE,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAjBJ,eAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAlBJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAnBJ,CADR;AAFR;AA4BH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WAAO,KAAKH,OAAL,EAAP;AACH;;AAvCuD;AA0C5D,OAAO,IAAII,YAA4B,GAAG,CACtC;AACIC,EAAAA,WAAW,EAAG,SADlB;AAEIC,EAAAA,eAAe,EAAG,SAFtB;AAGIC,EAAAA,KAAK,eAAI,oBAAC,OAAD;AAAS,IAAA,WAAW,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHb;AAIIC,EAAAA,YAAY,EAAI,IAAI;AAJxB,CADsC,EAOtC;AACIH,EAAAA,WAAW,EAAG,SADlB;AAEIC,EAAAA,eAAe,EAAG,SAFtB;AAGIC,EAAAA,KAAK,eAAI,oBAAC,OAAD;AAAS,IAAA,WAAW,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHb;AAIIC,EAAAA,YAAY,EAAI,IAAI;AAJxB,CAPsC,EAatC;AACIH,EAAAA,WAAW,EAAG,SADlB;AAEIC,EAAAA,eAAe,EAAG,SAFtB;AAGIC,EAAAA,KAAK,eAAI,oBAAC,OAAD;AAAS,IAAA,WAAW,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHb;AAIIC,EAAAA,YAAY,EAAI,IAAI;AAJxB,CAbsC,CAAnC","sourcesContent":["import * as React from \"react\";\nimport {iWizardStep} from \"../../view-components/wizard/wizard\";\nimport {ReactElement} from \"react\";\nimport {toolTipContent} from \"../_common/tool-tip-content/content-tool-tips\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport AppButton from \"../../view-components/button/app-button\";\nimport {DividerLine} from \"../../view-components/divider-line/divider-line\";\n\n\n\ninterface iPROPS{\n    wizardPanel : \"upload-1\" | \"upload-2\" | \"upload-3\"\n}\n\ninterface iSTATE{\n\n}\n\nexport class Wizards extends React.Component<iPROPS, iSTATE>{\n\n    constructor(props:iPROPS) {\n        super(props);\n    }\n\n    element(){\n        switch (this.props.wizardPanel) {\n            case \"upload-1\":\n                return(\n                        <div>\n                            <h3>Automatically Add/Update Products</h3>\n                            <AppButton\n                                buttonType={\"drag-area-large\"}\n                                buttonLabel=\"Drag Files Here\"\n                                tooltipType=\"custom\"\n                                tooltip={toolTipContent.footerCancel()}\n                                toolTipTimeOutInMS={10000}\n                                iconLeft={\n                                    <CatmanIcon\n                                        iconName=\"icon-add-invert\"\n                                        classes=\" \"\n                                        height=\"100%\"\n                                        width=\"100%\"\n                                    />\n                                }\n                            />\n                            <DividerLine dividerType={\"labeled\"} labelText={\"OR\"} />\n                            <h3>Automatically Add/Update Products</h3>\n                            <div>\n\n                            </div>\n                        </div>\n                )\n        }\n    }\n\n    render(){\n        return(this.element())\n    }\n}\n\nexport let uploadWizard : iWizardStep[] = [\n    {\n        titleHeader : \"string;\",\n        instructionText : \"string;\",\n        panel : (<Wizards wizardPanel=\"upload-1\"/>),\n        winCondition : (1 > 0)\n    },\n    {\n        titleHeader : \"string;\",\n        instructionText : \"string;\",\n        panel : (<Wizards wizardPanel=\"upload-2\"/>),\n        winCondition : (1 > 0)\n    },\n    {\n        titleHeader : \"string;\",\n        instructionText : \"string;\",\n        panel : (<Wizards wizardPanel=\"upload-3\"/>),\n        winCondition : (1 > 0)\n    }\n];"]},"metadata":{},"sourceType":"module"}