{"ast":null,"code":"import _classCallCheck from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import AppButton from\"../button/app-button\";import{CatmanIcon}from\"../../svg/icons/icons\";import{Tile}from\"../tiles/tile-component\";import{toolTipContent}from\"../../views/tool-tip-content/content-tool-tips\";import{ToolTipContent}from\"../heru-tool-tip/tool-tip-content\";import ReactDOM from\"react-dom\";import{win}from\"../../index\";export var DataGrid=/*#__PURE__*/function(_React$Component){_inherits(DataGrid,_React$Component);var _super=_createSuper(DataGrid);function DataGrid(props){var _this;_classCallCheck(this,DataGrid);_this=_super.call(this,props);_this.selectionSet=[];_this.selectedCells=[];_this.numCols=void 0;_this.numRows=void 0;_this.startSelectionRow=void 0;_this.startSelectionCell=void 0;_this.dragInterval=null;_this.dragCounter=0;_this.root=function(){var root=document.getElementById(\"root\");if(root!=null){return root;}};_this.cellRange=void 0;_this._checkedRows=[];_this.shiftDown=false;_this.controlDown=false;_this.iconForCheckBox=function(row){for(var i=0;i<_this.state.checkedRows.length;i++){if(row===_this.state.checkedRows[i]){return\"checkbox-checked\";}}return\"checkbox-unchecked\";};_this.updateSelectionState=function(){_this.setState({selectionSet:_this.selectionSet});};_this.columnHeadTooltip=function(tooltiptype,tooltip,header){switch(tooltiptype){case\"basic\":return/*#__PURE__*/React.createElement(ToolTipContent,{header:header,copy:tooltip,tooltipType:\"deluxe\",icon:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"info-icon-help\",classes:\"\",height:\"1.5rem\",width:\"1.5rem\"})});case\"custom\":return tooltip;}return/*#__PURE__*/React.createElement(React.Fragment,null);};_this.state={workingDataSet:_this.props.data,selectionSet:[],checkedRows:[],hoveredRow:\"\",mouseIsDown:false,mouseX:0,mouseY:0,initialMouseX:0,initialMouseY:0};_this.startSelectionRow=0;_this.startSelectionCell=0;_this.cellRange={startCell:0,endCell:0,startRow:0,endRow:0};_this.numCols=_this.getNumColumns();_this.numRows=_this.getNumRows();return _this;}_createClass(DataGrid,[{key:\"manageSelection\",value:function manageSelection(row,cell,columnName,clearSelection){if(clearSelection){this.selectionSet=[];this._checkedRows=[];}if(this.startSelectionRow>row){this.cellRange.startRow=row;this.cellRange.endRow=this.startSelectionRow;}else{this.cellRange.startRow=this.startSelectionRow;this.cellRange.endRow=row;}if(this.startSelectionCell>cell){this.cellRange.startCell=cell;this.cellRange.endCell=this.startSelectionCell;}else{this.cellRange.startCell=this.startSelectionCell;this.cellRange.endCell=cell;}if(row===this.startSelectionRow&&cell===this.startSelectionCell){this.selectionSet.push({row:row,cell:cell,selected:true,columnName:this.props.columnsData[cell-2].columnName//columnName : appColumns.getColumns[cell-2].columnName\n});}for(var i=this.cellRange.startRow;i<this.cellRange.endRow+1;i++){for(var j=this.cellRange.startCell;j<this.cellRange.endCell+1;j++){this.selectionSet.push({row:i,cell:j,selected:true,columnName:this.props.columnsData[j-2].columnName});}}// handle single cell as start and end\nif(this.selectionSet.length===2){if(this.selectionSet[0].row===this.selectionSet[1].row&&this.selectionSet[0].cell===this.selectionSet[1].cell){this.selectionSet.splice(1,1);}}this.setState({selectionSet:this.selectionSet,checkedRows:this._checkedRows});if(this.props.selectionCallback!==undefined&&this.props.selectionCallback!==null){var selectedItems=[];var lastRow=0;// work through the selection set to organize things\ni:for(var _i=0;_i<this.selectionSet.length;_i++){if(_i===0){//if it's the first one let's create a new entry\nlastRow=this.selectionSet[0].row;var newItem={row:lastRow,cells:[],productFields:[]};selectedItems.push(newItem);}//loop over the existing list of rows to create new ones\nif(this.selectionSet[_i].row===lastRow){//one more loop over the list to grab all the cells that belong to the row\nif(selectedItems[selectedItems.length-1].cells.length===0){for(var _j=0;_j<this.selectionSet.length;_j++){if(this.selectionSet[_j].row===lastRow){//if the row matches the last row, then push in the selected cell\nselectedItems[selectedItems.length-1].cells.push(this.selectionSet[_j].cell);}}}}else{lastRow=this.selectionSet[_i].row;var _newItem={row:lastRow,cells:[],productFields:[]};selectedItems.push(_newItem);}}for(var x=0;x<selectedItems.length;x++){for(var y=0;y<this.state.workingDataSet[selectedItems[x].row-2].length;y++){selectedItems[x].productFields.push(this.state.workingDataSet[selectedItems[x].row-2][y]);}}this.props.selectionCallback(selectedItems,this._checkedRows,\"standard-launch\",row,cell);}}},{key:\"clearSelection\",value:function clearSelection(){this.setState({selectionSet:[],checkedRows:[]});this._checkedRows=[];this.selectionSet=[];if(this.props.notifySelections!=undefined){this.props.notifySelections();}}},{key:\"checkSelected\",value:function checkSelected(row,cell){for(var i=0;i<this.state.selectionSet.length;i++){if(this.state.selectionSet[i].row===row&&this.state.selectionSet[i].cell===cell){return\"selected\";}}//if nothing is found, return false because it isn't selected\nreturn\"\";}},{key:\"getNumColumns\",value:function getNumColumns(){//TODO swap this out to calculating total normalized columns\nreturn this.props.columnsData.length;}},{key:\"getNumRows\",value:function getNumRows(){if(this.state.workingDataSet.length>0){return this.state.workingDataSet.length;}else{return this.props.data.length;}}},{key:\"getProductUniqueID\",value:function getProductUniqueID(index){for(var j=0;j<this.state.workingDataSet[index].length;j++){if(this.state.workingDataSet[index][j].columnName===\"uniqueID\"){return this.state.workingDataSet[index][j].value;}}}},{key:\"mouseDownAction\",value:function mouseDownAction(row,cell){var _this2=this;//start up the resize box\nthis.setState({mouseX:win.mousePos.x,mouseY:win.mousePos.y});//set timer for dragging\nthis.dragInterval=window.setInterval(function(){// set timer for spacing out the times we poll for updating drag window\n_this2.dragCounter++;console.log(\"set interval\",_this2.dragInterval);},200);this.startSelectionCell=cell;this.startSelectionRow=row;this.setState({mouseIsDown:true,initialMouseX:win.mousePos.x,initialMouseY:win.mousePos.y});}},{key:\"mouseUpAction\",value:function mouseUpAction(row,cell,columnName){this.setState({mouseIsDown:false});this.manageSelection(row,cell,columnName,true);this.manageKeyBoardEffect(\"dfdf\",\"up\");//clear dragging timer\nif(this.dragInterval!=null){window.clearInterval(this.dragInterval);this.dragCounter=0;}this.manageAppCues();}},{key:\"hoverRowAction\",value:function hoverRowAction(row){//this.setState({hoveredRow : row.toString()});\n}},{key:\"mouseOutRowAction\",value:function mouseOutRowAction(){//  this.setState({hoveredRow : \"\"});\n}},{key:\"manageCheckbox\",value:function manageCheckbox(row){//find if this number is in the list\nvar found=false;for(var i=0;i<this._checkedRows.length;i++){if(this._checkedRows[i]===row){//if it is in the list remove it which unchecks\nthis._checkedRows.splice(i,1);this.setState({checkedRows:this._checkedRows});found=true;}}if(found===false){this._checkedRows.push(row);this.setState({checkedRows:this._checkedRows});}//handle selecting the checked\n//First reset the cell selection\nthis.selectionSet=[];for(var _i2=0;_i2<this._checkedRows.length;_i2++){for(var j=0;j<this.state.workingDataSet[this._checkedRows[_i2]].length;j++){var selectedCell={row:this._checkedRows[_i2]+2,cell:j+2,selected:true,columnName:this.props.columnsData[j].columnName};this.selectionSet.push(selectedCell);}}this.setState({selectionSet:this.selectionSet});if(this.props.selectionCallback!==undefined){this.props.selectionCallback(this.state.selectionSet,this.state.checkedRows,\"checkbox-launched\");}//once people use the tool, we can hide the tool tip\ntoolTipContent.showSelectRow=false;}},{key:\"switchToEditModeFromCheckBoxMode\",value:function switchToEditModeFromCheckBoxMode(){//handle switching from checkbox mode to cell selection mode\n//First reset the cell selection\nconsole.log(\"switch to edit mode\");this._checkedRows=[];this.setState({checkedRows:this._checkedRows});console.log(\"switch to edit mode\",this.selectionSet);console.log(\"switch to edit mode\",this.state.selectionSet);if(this.props.selectionCallback!==undefined){this.props.selectionCallback(this.state.selectionSet,this.state.checkedRows,\"checkbox-launched\");}}},{key:\"getGridItems\",value:function getGridItems(){var _this3=this;var cells=[];var _loop=function _loop(i){var _loop2=function _loop2(j){if(j===0){cells.push(/*#__PURE__*/React.createElement(\"div\",{id:\"row-\".concat(i+2,\"-start\"),className:\"cell checkbox-main \",style:{gridColumn:j+1,gridRow:i+2,zIndex:100+(_this3.numRows-i)}},/*#__PURE__*/React.createElement(AppButton,{OnClick:function OnClick(){return _this3.manageCheckbox(i);},hoverActions:[function(){return _this3.hoverRowAction(i+2);}],buttonType:\"transparent-bg\",tooltipType:\"custom\",tooltip:toolTipContent.selectRow(),classes:\"\".concat(_this3.iconForCheckBox(i)),iconCenter:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"\".concat(_this3.iconForCheckBox(i)),width:\"100%\",height:\"100%\"})}),/*#__PURE__*/React.createElement(CatmanIcon,{classes:\"shading-l-r\",iconName:\"fader-left-to-right\",width:\"0.5rem\",height:\"100%\"})));}var cell=/*#__PURE__*/React.createElement(\"div\",{draggable:false,className:\"cell row-\".concat(i+2),style:{gridColumn:j+2,gridRow:i+2}},/*#__PURE__*/React.createElement(Tile,{tileType:_this3.props.columnsData[j].control,tileLabel:_this3.state.workingDataSet[i][j].value,action:function action(){return _this3.clickCellsActions();},hoverActions:[function(){return _this3.hoverRowAction(i+2);}],mouseOutActions:[function(){return _this3.mouseOutRowAction();}],mouseDownActions:[function(){return _this3.mouseDownAction(i+2,j+2);}],mouseUpActions:[_this3.props.manageParentViews,function(){return _this3.mouseUpAction(i+2,j+2,_this3.props.columnsData[j].columnName);}],selectedClass:_this3.checkSelected(i+2,j+2)}));if(_this3.props.columnsData[j].control!==\"hidden\"){cells.push(cell);}if(j===_this3.state.workingDataSet[i].length-1&&_this3.props.hasDetailsActionButton){cells.push(/*#__PURE__*/React.createElement(\"div\",{className:\"cell details\",style:{gridColumn:j+3,gridRow:i+2,zIndex:100+(_this3.numRows-i)}},/*#__PURE__*/React.createElement(AppButton,{buttonType:\"nav-link\",navPath:\"/catalog/spreadsheet?product=\".concat(_this3.getProductUniqueID(i)),tooltipType:\"custom\",tooltip:toolTipContent.singleProduct(),iconCenter:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"go-arrow\",width:\"1rem\",height:\"100%\"})}),/*#__PURE__*/React.createElement(CatmanIcon,{classes:\"shading\",iconName:\"fader-right-to-left\",width:\"0.5rem\",height:\"100%\"})));}};for(var j=0;j<_this3.state.workingDataSet[i].length;j++){_loop2(j);}};for(var i=0;i<this.state.workingDataSet.length;i++){_loop(i);}return cells;}},{key:\"getColumnHeaders\",value:function getColumnHeaders(){var _this4=this;var columnsHeads=[];//Header checkbox for \"select all\"\nvar _loop3=function _loop3(i){var _this4$props$focusedI2;if(i===0){columnsHeads.push(/*#__PURE__*/React.createElement(\"div\",{className:\"cell checkbox-main grid-header\",style:{gridColumn:i+1,gridRow:1,zIndex:120+_this4.numCols}},/*#__PURE__*/React.createElement(AppButton,{OnClick:function OnClick(){return _this4.manageCheckbox(i);},buttonType:\"transparent-bg\",tooltipType:\"custom\",tooltip:toolTipContent.selectRow(),classes:\" \",iconCenter:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"\".concat(_this4.iconForCheckBox(i)),width:\"0.5rem\",height:\"100%\"})})));}//Handling the something-in-column selected visual indicator\nvar columnActiveCheck=function columnActiveCheck(){var _this4$props$focusedI;if(((_this4$props$focusedI=_this4.props.focusedItem)===null||_this4$props$focusedI===void 0?void 0:_this4$props$focusedI.cell)===i+2&&_this4.props.focusedItem.editDrawerOpen===true){return{tileType:\"header-active\",cellClass:\"active\"};}else{return{tileType:\"column-header\",cellClass:\"\"};}};var columnHead=/*#__PURE__*/React.createElement(\"div\",{className:\"cell grid-header \".concat(columnActiveCheck().cellClass),style:{gridColumn:i+2,gridRow:1,zIndex:_this4.numRows+100+i}},/*#__PURE__*/React.createElement(Tile,{tileType:columnActiveCheck().tileType,tileLabel:_this4.props.columnsData[i].columnLabel,toolTip:_this4.columnHeadTooltip(_this4.props.columnsData[i].tooltipType,_this4.props.columnsData[i].toolTip,_this4.props.columnsData[i].columnLabel),toolTipTimeOut:30000,mouseDownActions:[],mouseUpActions:[function(){return _this4.props.manageParentViews(true);}],selectedClass:\"\"}));if(_this4.props.columnsData[i].control!=\"hidden\"){columnsHeads.push(columnHead);}//final column head action\nif(i===_this4.props.columnsData.length-1){columnsHeads.push(/*#__PURE__*/React.createElement(\"div\",{className:\"cell details grid-header\",style:{gridColumn:_this4.props.columnsData.length+2,gridRow:1,zIndex:200+_this4.numCols+2}},/*#__PURE__*/React.createElement(AppButton,{buttonType:\"button-custom\",classes:\"add-column\",navPath:\"/catalog/spreadsheet\",OnClick:function OnClick(){return _this4.props.addAction(\"add-attribute\");},tooltipType:\"custom\",tooltip:toolTipContent.insertColumn(),iconCenter:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-plus\",width:\"0.5rem\",height:\"100%\"})}),/*#__PURE__*/React.createElement(CatmanIcon,{classes:\"shading-l-r\",iconName:\"fader-right-to-left\",width:\"0.5rem\",height:\"100%\"})));}//create the selected overlay\nif(((_this4$props$focusedI2=_this4.props.focusedItem)===null||_this4$props$focusedI2===void 0?void 0:_this4$props$focusedI2.cell)===i+2&&_this4.props.focusedItem.editDrawerOpen===true){var selectedIndicator=/*#__PURE__*/React.createElement(\"div\",{className:\"cell selected-indicator\",style:{gridColumn:i+2,gridRowStart:_this4.cellRange.startRow,gridRowEnd:_this4.cellRange.endRow+1}},/*#__PURE__*/React.createElement(\"div\",{className:\"handle\"}));columnsHeads.push(selectedIndicator);}else if(_this4.state.selectionSet.length==0){var _selectedIndicator=/*#__PURE__*/React.createElement(\"div\",{className:\"cell selected-indicator\",style:{gridColumn:4,gridRowStart:2,gridRowEnd:2}},/*#__PURE__*/React.createElement(\"div\",{className:\"handle\"}));columnsHeads.push(_selectedIndicator);}};for(var i=0;i<this.props.columnsData.length;i++){_loop3(i);}return columnsHeads;}//HOVER ROW STYLE\n},{key:\"gridStyles\",value:function gridStyles(){//This let's us have a hover row effect with css grid\n//This way we don't have to put containers around each row just for visual cue\n//     let style = `\n//     .row-${this.state.hoveredRow} {\n//         background-color: #f4f4f5;\n//     }\n//\n//     .row-${this.state.hoveredRow} .cell-editable{\n//         z-index:100;\n//     }\n//\n//     .row-${this.state.hoveredRow} p{\n//             color: #473F4A  ;\n//     }\n//     `;\n//\n//\n//\n// return <style dangerouslySetInnerHTML={{ __html: `${style}` }} />\n}},{key:\"clickCellsActions\",value:function clickCellsActions(){this.setState({mouseIsDown:false});}//DRAG AREA - create bounding box while dragging\n},{key:\"getDragArea\",value:function getDragArea(){var _this5=this;//Only run if mouse is down\nif(this.dragInterval!=undefined){if(this.state.mouseIsDown===true){var calcStyles=function calcStyles(){//calculate where the drag area will draw\nvar coordinates={top:_this5.state.initialMouseY,bottom:win.windowSize().height-_this5.state.mouseY,left:_this5.state.initialMouseX,right:win.windowSize().width-_this5.state.mouseX};if(_this5.state.initialMouseY<=_this5.state.mouseY){coordinates.top=_this5.state.initialMouseY;coordinates.bottom=win.windowSize().height-_this5.state.mouseY;}else if(_this5.state.initialMouseY>=_this5.state.mouseY){coordinates.top=win.mousePos.y;coordinates.bottom=win.windowSize().height-_this5.state.initialMouseY;}if(_this5.state.mouseX>=_this5.state.initialMouseX){coordinates.left=_this5.state.initialMouseX;coordinates.right=win.windowSize().width-_this5.state.mouseX;}else if(_this5.state.mouseY>=_this5.state.initialMouseY){coordinates.left=win.mousePos.x;coordinates.right=win.windowSize().width-_this5.state.initialMouseX;}if(_this5.state.mouseX<=_this5.state.initialMouseX&&_this5.state.initialMouseY>=_this5.state.mouseY){coordinates.left=_this5.state.mouseX;coordinates.right=win.windowSize().width-_this5.state.initialMouseX;}return coordinates;};var dragArea=/*#__PURE__*/React.createElement(\"div\",{className:\"drag-area\",style:calcStyles()},/*#__PURE__*/React.createElement(\"div\",{className:\"drag-inner-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"tool-tip\"},toolTipContent.clickDragGrid())));return ReactDOM.createPortal(dragArea,this.root());}else{if(this.dragInterval!=null){clearInterval(this.dragInterval);}}}}//Mouse move, this is used for defining the drag area rectangle but could be used for other stuff\n},{key:\"mouseMoveActions\",value:function mouseMoveActions(){if(this.dragCounter%2===0&&this.state.mouseIsDown===true){this.setState({mouseX:win.mousePos.x,mouseY:win.mousePos.y});}}},{key:\"selectionIndicator\",value:function selectionIndicator(){console.log(\"selection set\",this.state.selectionSet.length);var selectedIndicator=/*#__PURE__*/React.createElement(\"div\",{className:\"cell selected-indicator\",style:{gridRowStart:2,gridColumnStart:2,gridRowEnd:2,gridColumnEnd:\"auto\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"handle\"}));return selectedIndicator;}//APP CUES aka Super tooltips\n},{key:\"manageAppCues\",value:function manageAppCues(){if(this.selectionSet.length>1){toolTipContent.gridDragTutorial++;}}},{key:\"manageKeyBoardEffect\",value:function manageKeyBoardEffect(key,keyAction){console.log(key,\" \",keyAction);switch(key){case\"ArrowDown\":break;case\"ArrowUp\":break;case\"ArrowLeft\":break;case\"ArrowRight\":break;case\"Enter\":console.log(\"Hit Enter\");this.clearSelection();break;case\"Meta\":if(keyAction==\"up\"){this.controlDown=false;}else if(keyAction==\"down\"){this.controlDown=true;}break;default:}}},{key:\"componentDidMount\",value:function componentDidMount(){var _this6=this;window.addEventListener(\"keyup\",function(evt){_this6.manageKeyBoardEffect(evt.key,\"up\");});window.addEventListener(\"keydown\",function(evt){_this6.manageKeyBoardEffect(evt.key,\"down\");});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var _this7=this;//Clear keyboard events for this component\nwindow.removeEventListener(\"keyup\",function(evt){_this7.manageKeyBoardEffect(evt.key,\"up\");});window.removeEventListener(\"keydown\",function(evt){_this7.manageKeyBoardEffect(evt.key,\"down\");});}},{key:\"render\",value:function render(){var _this8=this;var columnHeaders=this.getColumnHeaders();// let testTooltip : ReactElement = (\n//     <div className=\"tool-tip\" style={{height : \"344px\"}}>\n//         {toolTipContent.clickDragGrid()}\n//     </div>\n// );\nvar gridStyle=\"1rem repeat(\".concat(this.getNumColumns(),\", minmax(max-content, 1fr)) max-content\");var constructedGrid=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"data-grid \".concat(this.props.classes)},this.gridStyles(),/*#__PURE__*/React.createElement(\"div\",{style:{display:'grid',gridTemplateColumns:gridStyle},className:\"viewport\",onMouseMove:function onMouseMove(){return _this8.mouseMoveActions();}},columnHeaders,this.getGridItems())),this.getDragArea());return constructedGrid;}}]);return DataGrid;}(React.Component);","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/data-grid/data-grid.tsx"],"names":["React","AppButton","CatmanIcon","Tile","toolTipContent","ToolTipContent","ReactDOM","win","DataGrid","props","selectionSet","selectedCells","numCols","numRows","startSelectionRow","startSelectionCell","dragInterval","dragCounter","root","document","getElementById","cellRange","_checkedRows","shiftDown","controlDown","iconForCheckBox","row","i","state","checkedRows","length","updateSelectionState","setState","columnHeadTooltip","tooltiptype","tooltip","header","workingDataSet","data","hoveredRow","mouseIsDown","mouseX","mouseY","initialMouseX","initialMouseY","startCell","endCell","startRow","endRow","getNumColumns","getNumRows","cell","columnName","clearSelection","push","selected","columnsData","j","splice","selectionCallback","undefined","selectedItems","lastRow","newItem","cells","productFields","x","y","notifySelections","index","value","mousePos","window","setInterval","console","log","manageSelection","manageKeyBoardEffect","clearInterval","manageAppCues","found","selectedCell","showSelectRow","gridColumn","gridRow","zIndex","manageCheckbox","hoverRowAction","selectRow","control","clickCellsActions","mouseOutRowAction","mouseDownAction","manageParentViews","mouseUpAction","checkSelected","hasDetailsActionButton","getProductUniqueID","singleProduct","columnsHeads","columnActiveCheck","focusedItem","editDrawerOpen","tileType","cellClass","columnHead","columnLabel","tooltipType","toolTip","addAction","insertColumn","selectedIndicator","gridRowStart","gridRowEnd","calcStyles","coordinates","top","bottom","windowSize","height","left","right","width","dragArea","clickDragGrid","createPortal","gridColumnStart","gridColumnEnd","gridDragTutorial","key","keyAction","addEventListener","evt","removeEventListener","columnHeaders","getColumnHeaders","gridStyle","constructedGrid","classes","gridStyles","display","gridTemplateColumns","mouseMoveActions","getGridItems","getDragArea","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport {iDataGridItem} from \"../../_catman-data-types\";\nimport AppButton from \"../button/app-button\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport {selectedStateType, Tile} from \"../tiles/tile-component\";\nimport {toolTipContent} from \"../../views/tool-tip-content/content-tool-tips\";\nimport camelcase from \"camelcase\";\nimport {iColumn} from \"../../_catman-data-types\";\nimport {DataManager} from \"../../data-components/data-manager/data-manager\";\nimport classesIllustration from \"../../images/SVG/illustration-classes.svg\";\nimport {ToolTipContent} from \"../heru-tool-tip/tool-tip-content\";\nimport ReactDOM from \"react-dom\";\nimport {win} from \"../../index\";\nimport {focusInputType} from \"../../views/catalog-views/catalog-details/catalog-details-view\";\n\n\n//data grid data should be an array of arrays\n//each product is an array of attributes\ninterface iPROPS {\n    data : iDataGridItem[][];\n    manageParentViews : Function;\n    selectionCallback? : Function;\n    columnsData : iColumn[];\n    classes? : string;\n    addAction : Function;\n    focusedItem? : focusInputType;\n    hasDetailsActionButton : boolean\n    notifySelections? : Function\n}\n\ninterface iSTATE {\n    selectionSet : selectionObject[];\n    checkedRows :number[];\n    workingDataSet : iDataGridItem[][];\n    hoveredRow : string;\n    mouseIsDown : boolean;\n    mouseX : number;\n    mouseY : number;\n    initialMouseX : number;\n    initialMouseY : number;\n}\n\nexport type selectionObject = {\n    row : number;\n    cell : number;\n    selected : boolean;\n    columnName : string;\n}\n\nexport class DataGrid extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n        this.state = {\n            workingDataSet : this.props.data,\n            selectionSet : [],\n            checkedRows : [],\n            hoveredRow : \"\",\n            mouseIsDown : false,\n            mouseX : 0,\n            mouseY : 0,\n            initialMouseX : 0,\n            initialMouseY : 0\n        };\n        this.startSelectionRow = 0;\n        this.startSelectionCell = 0;\n\n        this.cellRange = {\n            startCell : 0,\n            endCell : 0,\n            startRow : 0,\n            endRow : 0,\n        };\n\n        this.numCols = this.getNumColumns();\n        this.numRows = this.getNumRows();\n    }\n    selectionSet : selectionObject[] = [];\n    selectedCells : iDataGridItem[] = [];\n    numCols : number;\n    numRows: number;\n    startSelectionRow : number;\n    startSelectionCell : number;\n    dragInterval : number | null = null;\n    dragCounter : number = 0;\n\n    //used root for portals for overlays\n    root = ()=>{\n        let root : any | HTMLElement = document.getElementById(\"root\");\n        if(root != null){\n            return root;\n        }\n    };\n\n    cellRange : any;\n    _checkedRows : number[] = [];\n\n    shiftDown : boolean = false;\n    controlDown : boolean = false;\n\n    manageSelection(row:number, cell:number, columnName : string,  clearSelection : boolean){\n\n        if(clearSelection){\n            this.selectionSet = [];\n            this._checkedRows = [];\n        }\n\n        if(this.startSelectionRow > row){\n            this.cellRange.startRow = row;\n            this.cellRange.endRow = this.startSelectionRow\n        }else{\n            this.cellRange.startRow = this.startSelectionRow;\n            this.cellRange.endRow = row;\n        }\n\n        if(this.startSelectionCell > cell){\n            this.cellRange.startCell = cell;\n            this.cellRange.endCell = this.startSelectionCell;\n        }else {\n            this.cellRange.startCell = this.startSelectionCell;\n            this.cellRange.endCell = cell;\n        }\n\n        if(row === this.startSelectionRow && cell === this.startSelectionCell){\n            this.selectionSet.push(\n                {\n                    row: row,\n                    cell: cell,\n                    selected : true,\n                    columnName : this.props.columnsData[cell-2].columnName\n                    //columnName : appColumns.getColumns[cell-2].columnName\n                }\n            );\n        }\n\n        for( let i = this.cellRange.startRow; i < this.cellRange.endRow+1; i++){\n            for(let j= this.cellRange.startCell; j < this.cellRange.endCell+1; j++){\n                this.selectionSet.push(\n                    {\n                        row: i,\n                        cell: j,\n                        selected : true,\n                        columnName : this.props.columnsData[j-2].columnName\n                    }\n                );\n            }\n        }\n\n        // handle single cell as start and end\n\n        if(this.selectionSet.length === 2){\n            if( this.selectionSet[0].row === this.selectionSet[1].row && this.selectionSet[0].cell === this.selectionSet[1].cell  ){\n                this.selectionSet.splice(1,1);\n            }\n        }\n\n        this.setState({\n            selectionSet : this.selectionSet,\n            checkedRows : this._checkedRows\n        });\n\n\n        if(this.props.selectionCallback !== undefined && this.props.selectionCallback !== null){\n           type iSelectedItem = { row : number, cells : number[], productFields : iDataGridItem[] };\n            let selectedItems : iSelectedItem[] = [  ];\n            let lastRow : number = 0;\n\n            // work through the selection set to organize things\n\n           i: for(let i=0; i < this.selectionSet.length; i++){\n                if(i===0){\n                    //if it's the first one let's create a new entry\n                    lastRow = this.selectionSet[0].row;\n                    let newItem : iSelectedItem = { row : lastRow, cells:[], productFields : []};\n                    selectedItems.push(newItem);\n                }\n\n                //loop over the existing list of rows to create new ones\n                    if(this.selectionSet[i].row === lastRow){\n                        //one more loop over the list to grab all the cells that belong to the row\n                        if(selectedItems[selectedItems.length-1].cells.length === 0){\n                            for(let j=0; j < this.selectionSet.length; j++){\n                                if(this.selectionSet[j].row === lastRow){\n                                    //if the row matches the last row, then push in the selected cell\n                                    selectedItems[selectedItems.length-1].cells.push( this.selectionSet[j].cell );\n                                }\n                            }\n                        }\n                    }else{\n                        lastRow = this.selectionSet[i].row;\n                        let newItem : iSelectedItem = { row : lastRow, cells:[], productFields : []};\n                        selectedItems.push(newItem);\n                    }\n            }\n\n           for(let x=0; x < selectedItems.length; x++){\n                for(let y=0; y < this.state.workingDataSet[selectedItems[x].row-2].length; y++){\n                    selectedItems[x].productFields.push(this.state.workingDataSet[selectedItems[x].row-2][y] )\n                }\n\n           }\n\n\n            this.props.selectionCallback(selectedItems, this._checkedRows, \"standard-launch\", row, cell);\n         }\n    }\n\n    clearSelection(){\n        this.setState({selectionSet:[], checkedRows:[]});\n        this._checkedRows = [];\n        this.selectionSet = [];\n        if(this.props.notifySelections != undefined)\n        {\n            this.props.notifySelections();\n        }\n    }\n\n    checkSelected(row:number, cell:number):selectedStateType{\n        for(let i=0; i<this.state.selectionSet.length; i++){\n            if( this.state.selectionSet[i].row === row && this.state.selectionSet[i].cell === cell){\n                return \"selected\";\n            }\n        }\n        //if nothing is found, return false because it isn't selected\n        return \"\";\n    }\n\n    getNumColumns(){\n        //TODO swap this out to calculating total normalized columns\n\n        return this.props.columnsData.length;\n    }\n\n    getNumRows(){\n       if(this.state.workingDataSet.length > 0){\n           return this.state.workingDataSet.length;\n       }else{\n           return this.props.data.length;\n       }\n    }\n\n    getProductUniqueID(index : number){\n\n        for(let j=0; j < this.state.workingDataSet[index].length; j++){\n            if(this.state.workingDataSet[index][j].columnName === \"uniqueID\"){\n                return this.state.workingDataSet[index][j].value;\n            }\n        }\n    }\n\n    mouseDownAction(row : number, cell:number){\n        //start up the resize box\n        this.setState({mouseX : win.mousePos.x, mouseY : win.mousePos.y})\n\n        //set timer for dragging\n        this.dragInterval = window.setInterval(()=>{\n            // set timer for spacing out the times we poll for updating drag window\n             this.dragCounter++;\n            console.log(\"set interval\", this.dragInterval);\n        }, 200);\n\n        this.startSelectionCell = cell;\n        this.startSelectionRow = row;\n        this.setState({\n            mouseIsDown : true,\n            initialMouseX : win.mousePos.x,\n            initialMouseY : win.mousePos.y\n        });\n    }\n\n    mouseUpAction(row:number, cell:number, columnName : string){\n        this.setState({mouseIsDown : false});\n        this.manageSelection(row, cell, columnName, true);\n        this.manageKeyBoardEffect(\"dfdf\", \"up\");\n        //clear dragging timer\n        if(this.dragInterval != null)\n        {\n            window.clearInterval(this.dragInterval);\n            this.dragCounter = 0;\n        }\n        this.manageAppCues();\n    }\n\n    hoverRowAction(row:number){\n        //this.setState({hoveredRow : row.toString()});\n    }\n\n    mouseOutRowAction(){\n      //  this.setState({hoveredRow : \"\"});\n    }\n\n    manageCheckbox(row : number){\n\n        //find if this number is in the list\n        let found : boolean = false;\n\n\n\n        for(let i=0; i < this._checkedRows.length; i++){\n            if(this._checkedRows[i] === row){\n                //if it is in the list remove it which unchecks\n                this._checkedRows.splice(i, 1);\n                this.setState({checkedRows : this._checkedRows});\n                found = true;\n            }\n        }\n        if(found === false){\n            this._checkedRows.push(row);\n            this.setState({checkedRows : this._checkedRows});\n\n        }\n\n        //handle selecting the checked\n        //First reset the cell selection\n        this.selectionSet = [];\n\n        for(let i=0; i < this._checkedRows.length; i++){\n            for(let j=0; j < this.state.workingDataSet[this._checkedRows[i]].length; j++ ){\n                let selectedCell : selectionObject = {\n                    row : this._checkedRows[i]+2,\n                    cell : j+2,\n                    selected : true,\n                    columnName : this.props.columnsData[j].columnName\n                };\n                this.selectionSet.push(selectedCell);\n            }\n        }\n\n\n        this.setState({selectionSet : this.selectionSet});\n        if(this.props.selectionCallback !== undefined){\n            this.props.selectionCallback(this.state.selectionSet, this.state.checkedRows, \"checkbox-launched\");\n        }\n        //once people use the tool, we can hide the tool tip\n        toolTipContent.showSelectRow = false;\n    }\n\n    switchToEditModeFromCheckBoxMode(){\n        //handle switching from checkbox mode to cell selection mode\n        //First reset the cell selection\n\n        console.log(\"switch to edit mode\");\n\n\n        this._checkedRows = [];\n        this.setState({\n            checkedRows : this._checkedRows\n        });\n        console.log(\"switch to edit mode\", this.selectionSet);\n        console.log(\"switch to edit mode\", this.state.selectionSet);\n        if(this.props.selectionCallback !== undefined){\n            this.props.selectionCallback(this.state.selectionSet, this.state.checkedRows, \"checkbox-launched\");\n        }\n    }\n\n    iconForCheckBox = (row : number):string=>{\n        for(let i=0; i < this.state.checkedRows.length; i++){\n            if(row === this.state.checkedRows[i]){\n                return \"checkbox-checked\"\n            }\n        }\n        return \"checkbox-unchecked\"\n    };\n\n    updateSelectionState = ()=>{\n        this.setState({selectionSet : this.selectionSet});\n    };\n\n\n\n    getGridItems(){\n        let cells : ReactElement[] = [];\n        for(let i=0; i < this.state.workingDataSet.length; i++){\n            for(let j=0; j < this.state.workingDataSet[i].length; j++){\n                if(j === 0){\n                    cells.push(\n                        <div id={`row-${i+2}-start`} className={`cell checkbox-main `} style={{gridColumn : j+1, gridRow : i+2, zIndex : 100 + (this.numRows - i) }}>\n                            <AppButton\n                                OnClick={()=>this.manageCheckbox(i)}\n                                hoverActions={[()=>this.hoverRowAction(i+2)]}\n                                buttonType=\"transparent-bg\"\n                                tooltipType=\"custom\"\n                                tooltip={toolTipContent.selectRow()}\n                                classes={`${this.iconForCheckBox(i)}`}\n                                iconCenter={(\n                                    <CatmanIcon\n                                        iconName={`${this.iconForCheckBox(i)}`}\n                                        width=\"100%\"\n                                        height=\"100%\"\n                                    />\n                                )}\n                            />\n                            <CatmanIcon\n                                classes={\"shading-l-r\"}\n                                iconName=\"fader-left-to-right\"\n                                width=\"0.5rem\"\n                                height=\"100%\"\n                            />\n                        </div>\n                    )\n                }\n\n                let cell = (\n                    <div draggable={false} className={`cell row-${i+2}`} style={{gridColumn : j+2, gridRow : i+2 }}>\n                        <Tile\n                            tileType={this.props.columnsData[j].control}\n                            tileLabel={this.state.workingDataSet[i][j].value}\n                            action={() => this.clickCellsActions()}\n                            hoverActions={[()=>this.hoverRowAction(i+2)]}\n                            mouseOutActions={[()=>this.mouseOutRowAction()]}\n                            mouseDownActions={\n                                [() => this.mouseDownAction(i+2,j+2)]\n                            }\n                            mouseUpActions={\n                                [\n                                    this.props.manageParentViews,\n                                    () => this.mouseUpAction(i+2,j+2, this.props.columnsData[j].columnName)\n                                ]\n                            }\n                            selectedClass={this.checkSelected(i+2, j+2)}\n\n                        />\n\n                    </div>\n                );\n\n                if( this.props.columnsData[j].control !== \"hidden\"){\n                    cells.push(cell);\n                }\n\n                if(j === this.state.workingDataSet[i].length-1 && this.props.hasDetailsActionButton){\n                    cells.push(\n                        <div className=\"cell details\" style={{gridColumn : j+3, gridRow : i+2, zIndex : 100 + (this.numRows - i) }}>\n                            <AppButton\n                                buttonType=\"nav-link\"\n                                navPath={`/catalog/spreadsheet?product=${this.getProductUniqueID(i)}`}\n                                tooltipType=\"custom\"\n                                tooltip={toolTipContent.singleProduct()}\n                                iconCenter={(\n                                    <CatmanIcon\n                                        iconName=\"go-arrow\"\n                                        width=\"1rem\"\n                                        height=\"100%\"\n                                    />\n                                )}\n                            />\n                            <CatmanIcon\n                                classes={\"shading\"}\n                                iconName=\"fader-right-to-left\"\n                                width=\"0.5rem\"\n                                height=\"100%\"\n                            />\n\n                        </div>\n                    )\n                }\n            }\n        }\n\n        return cells;\n    }\n\n    columnHeadTooltip = (tooltiptype : \"custom\" | \"basic\", tooltip:ReactElement | string, header:string)=>{\n\n        switch (tooltiptype) {\n            case \"basic\":\n                return(<ToolTipContent\n                    header={header}\n                    copy={ tooltip }\n                    tooltipType=\"deluxe\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"info-icon-help\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />);\n            case \"custom\":\n                return tooltip;\n        }\n\n        return (<></>)\n    };\n\n    getColumnHeaders(){\n        let columnsHeads : ReactElement[] = [];\n\n        //Header checkbox for \"select all\"\n        for(let i=0; i < this.props.columnsData.length; i++ ){\n            if(i === 0){\n                columnsHeads.push(\n                    <div className=\"cell checkbox-main grid-header\" style={{gridColumn : i+1, gridRow : 1, zIndex : 120 + (this.numCols) }}>\n                        <AppButton\n                            OnClick={()=>this.manageCheckbox(i)}\n                            buttonType=\"transparent-bg\"\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.selectRow()}\n                            classes={` `}\n                            iconCenter={(\n                                <CatmanIcon\n                                    iconName={`${this.iconForCheckBox(i)}`}\n                                    width=\"0.5rem\"\n                                    height=\"100%\"\n                                />\n                            )}\n                        />\n                    </div>\n                )\n            }\n\n            //Handling the something-in-column selected visual indicator\n            const columnActiveCheck = ()=>{\n                if(this.props.focusedItem?.cell === (i+2) && this.props.focusedItem.editDrawerOpen === true){\n                    return {tileType:\"header-active\", cellClass:\"active\"};\n                }else{\n                    return {tileType:\"column-header\", cellClass:\"\"};\n                }\n            };\n\n\n            let columnHead = (\n                <div className={`cell grid-header ${columnActiveCheck().cellClass}`} style={{gridColumn : i+2, gridRow : 1, zIndex: this.numRows+100+i  }}>\n                    <Tile\n                        tileType={columnActiveCheck().tileType}\n                        tileLabel={this.props.columnsData[i].columnLabel}\n                        toolTip={ this.columnHeadTooltip(\n                            this.props.columnsData[i].tooltipType,\n                            this.props.columnsData[i].toolTip,\n                            this.props.columnsData[i].columnLabel\n                        )}\n                        toolTipTimeOut={30000}\n                        mouseDownActions={\n                            [ ]\n                        }\n                        mouseUpActions={\n                            [\n                                () => this.props.manageParentViews(true)\n                            ]\n                        }\n                        selectedClass={\"\"}\n                    />\n                </div>\n            );\n\n            if(this.props.columnsData[i].control != \"hidden\"){\n                columnsHeads.push(columnHead);\n            }\n\n            //final column head action\n            if(i === this.props.columnsData.length-1){\n                columnsHeads.push(\n                    <div className=\"cell details grid-header\"\n                         style={{gridColumn : this.props.columnsData.length+2, gridRow : 1, zIndex : (200 + this.numCols+2) }}\n                        >\n                        <AppButton\n                            buttonType=\"button-custom\"\n                            classes=\"add-column\"\n                            navPath={`/catalog/spreadsheet`}\n                            OnClick={()=>this.props.addAction(\"add-attribute\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.insertColumn()}\n                            iconCenter={(\n                                <CatmanIcon\n                                    iconName=\"icon-plus\"\n                                    width=\"0.5rem\"\n                                    height=\"100%\"\n                                />\n                            )}\n                        />\n                        <CatmanIcon\n                            classes={\"shading-l-r\"}\n                            iconName=\"fader-right-to-left\"\n                            width=\"0.5rem\"\n                            height=\"100%\"\n                        />\n                    </div>\n                )\n            }\n\n\n            //create the selected overlay\n            if(this.props.focusedItem?.cell === (i+2) && this.props.focusedItem.editDrawerOpen === true){\n                           let selectedIndicator = (\n                               <div className=\"cell selected-indicator\" style={{gridColumn : i+2, gridRowStart : this.cellRange.startRow, gridRowEnd:this.cellRange.endRow+1 }}>\n                                <div className=\"handle\"></div>\n                               </div>\n                           );\n                columnsHeads.push(selectedIndicator)\n            }else if(this.state.selectionSet.length == 0)\n            {\n                let selectedIndicator = (\n                    <div className=\"cell selected-indicator\" style={{gridColumn : 4, gridRowStart : 2, gridRowEnd: 2 }}>\n                        <div className=\"handle\"></div>\n                    </div>\n                );\n                columnsHeads.push(selectedIndicator)\n            }\n\n\n        }\n\n        return( columnsHeads );\n    }\n\n    //HOVER ROW STYLE\n    gridStyles(){\n        //This let's us have a hover row effect with css grid\n        //This way we don't have to put containers around each row just for visual cue\n        //     let style = `\n        //     .row-${this.state.hoveredRow} {\n        //         background-color: #f4f4f5;\n        //     }\n        //\n        //     .row-${this.state.hoveredRow} .cell-editable{\n        //         z-index:100;\n        //     }\n        //\n        //     .row-${this.state.hoveredRow} p{\n        //             color: #473F4A  ;\n        //     }\n        //     `;\n        //\n        //\n        //\n        // return <style dangerouslySetInnerHTML={{ __html: `${style}` }} />\n    }\n\n    clickCellsActions(){\n        this.setState({mouseIsDown : false})\n    }\n\n    //DRAG AREA - create bounding box while dragging\n    getDragArea(){\n        //Only run if mouse is down\n        if(this.dragInterval != undefined){\n            if(this.state.mouseIsDown === true  ){\n\n                let calcStyles =()=> {\n                    //calculate where the drag area will draw\n                    let coordinates = {\n                        top : this.state.initialMouseY,\n                        bottom : win.windowSize().height - this.state.mouseY,\n                        left : this.state.initialMouseX,\n                        right: win.windowSize().width - this.state.mouseX\n                    };\n\n                    if(this.state.initialMouseY <=  this.state.mouseY ){\n                        coordinates.top = this.state.initialMouseY;\n                        coordinates.bottom = win.windowSize().height - this.state.mouseY;\n                    }else if(this.state.initialMouseY >= this.state.mouseY){\n                        coordinates.top = win.mousePos.y;\n                        coordinates.bottom = win.windowSize().height - this.state.initialMouseY;\n                    }\n\n                    if( this.state.mouseX >=  this.state.initialMouseX ){\n                        coordinates.left = this.state.initialMouseX;\n                        coordinates.right = win.windowSize().width - this.state.mouseX;\n                    }else if( this.state.mouseY >= this.state.initialMouseY){\n                        coordinates.left = win.mousePos.x;\n                        coordinates.right = win.windowSize().width - this.state.initialMouseX;\n                    }\n\n                    if( this.state.mouseX <=  this.state.initialMouseX && this.state.initialMouseY >=  this.state.mouseY ){\n                        coordinates.left = this.state.mouseX;\n                        coordinates.right = win.windowSize().width - this.state.initialMouseX;\n                    }\n                    return coordinates;\n                };\n                let dragArea = (\n                    <div\n                        className=\"drag-area\"\n                        style={ calcStyles() }\n                    >\n                        <div className=\"drag-inner-container\">\n                            <div className=\"tool-tip\">\n                                {toolTipContent.clickDragGrid()}\n                            </div>\n                        </div>\n                    </div>\n                );\n                return ReactDOM.createPortal(dragArea, this.root());\n            }else{\n                if(this.dragInterval != null){\n                    clearInterval(this.dragInterval);\n                }\n            }\n        }\n    }\n\n    //Mouse move, this is used for defining the drag area rectangle but could be used for other stuff\n    mouseMoveActions(){\n        if(this.dragCounter % 2 === 0 && this.state.mouseIsDown === true){\n             this.setState({mouseX : win.mousePos.x, mouseY : win.mousePos.y})\n        }\n    }\n\n    selectionIndicator()\n    {\n        console.log(\"selection set\", this.state.selectionSet.length);\n\n            let selectedIndicator = (\n                <div className=\"cell selected-indicator\" style={{gridRowStart : 2, gridColumnStart : 2, gridRowEnd: 2, gridColumnEnd : \"auto\" }}>\n                    <div className=\"handle\"></div>\n                </div>\n            );\n\n            return selectedIndicator;\n\n    }\n\n    //APP CUES aka Super tooltips\n    manageAppCues(){\n        if(this.selectionSet.length > 1){\n            toolTipContent.gridDragTutorial++;\n        }\n    }\n\n    manageKeyBoardEffect(key : string, keyAction:\"up\" | \"down\"){\n        console.log(key, \" \", keyAction);\n        switch (key) {\n            case \"ArrowDown\":\n\n                break;\n            case \"ArrowUp\":\n\n                break;\n            case \"ArrowLeft\":\n\n                break;\n            case \"ArrowRight\":\n\n                break;\n            case \"Enter\":\n                console.log(\"Hit Enter\");\n                this.clearSelection();\n                break;\n            case \"Meta\":\n                    if(keyAction == \"up\"){\n                        this.controlDown = false;\n                    }else if(keyAction == \"down\"){\n                        this.controlDown = true;\n                    }\n                break;\n            default:\n\n        }\n    }\n\n    componentDidMount(): void {\n\n        window.addEventListener(\"keyup\", (evt: KeyboardEvent)=>{\n            this.manageKeyBoardEffect(evt.key, \"up\");\n        });\n\n        window.addEventListener(\"keydown\", (evt: KeyboardEvent)=>{\n            this.manageKeyBoardEffect(evt.key, \"down\");\n        });\n    }\n\n    componentWillUnmount(): void {\n        //Clear keyboard events for this component\n        window.removeEventListener(\"keyup\", (evt: KeyboardEvent)=>{\n            this.manageKeyBoardEffect(evt.key, \"up\");\n        });\n\n        window.removeEventListener(\"keydown\", (evt: KeyboardEvent)=>{\n            this.manageKeyBoardEffect(evt.key, \"down\");\n        });\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n\n        let columnHeaders : ReactElement[] = this.getColumnHeaders();\n\n        // let testTooltip : ReactElement = (\n        //     <div className=\"tool-tip\" style={{height : \"344px\"}}>\n        //         {toolTipContent.clickDragGrid()}\n        //     </div>\n        // );\n\n        let gridStyle = `1rem repeat(${this.getNumColumns()}, minmax(max-content, 1fr)) max-content`;\n\n        let constructedGrid : ReactElement = (\n            <>\n                <div className={`data-grid ${this.props.classes}`}>\n                    {this.gridStyles()}\n\n                    <div style={{ display:'grid', gridTemplateColumns:gridStyle}} className=\"viewport\" onMouseMove={()=>this.mouseMoveActions()}>\n                        {columnHeaders}\n                        {this.getGridItems()}\n                    </div>\n                </div>\n                {this.getDragArea()}\n\n            </>\n        );\n\n        return constructedGrid;\n    }\n}"]},"metadata":{},"sourceType":"module"}