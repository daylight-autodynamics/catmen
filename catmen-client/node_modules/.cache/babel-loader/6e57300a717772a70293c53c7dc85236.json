{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/text-input/standard-text-input.tsx\";\nimport * as React from \"react\";\nexport class StandardTextInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.value = this.props.currentValue;\n\n    this.reportCurrentValue = () => this.props.onChangeAction(this.props.row, this.props.cell, this.value, this.props.columnName);\n\n    this.state = {\n      value: this.props.currentValue\n    };\n  }\n\n  getInputVal(e) {\n    //console.log(this.props.row, this.props.cell, this.state.value, this.props.columnName);\n    let keyVal = e.target;\n    this.value = keyVal.value;\n    this.setState({\n      value: keyVal.value\n    });\n    this.reportCurrentValue();\n  }\n\n  getElements() {\n    switch (this.props.controlType) {\n      case \"with-label\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pl-TextInput-wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pl-FloatLabel-text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }\n        }, this.props.label), /*#__PURE__*/React.createElement(\"input\", {\n          onChange: evt => this.getInputVal(evt),\n          type: \"text\",\n          value: this.state.value || '',\n          placeholder: \"\",\n          className: \"InputBox pl-TextInput-input has-text pl-FloatLabel-input\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }\n        }));\n\n      case \"no-label\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pl-TextInput-wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          onChange: evt => this.getInputVal(evt),\n          type: \"text\",\n          value: this.state.value || '',\n          placeholder: \"\",\n          className: \"InputBox pl-TextInput-input has-text pl-FloatLabel-input\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }\n        }));\n\n      case undefined:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pl-TextInput-wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pl-FloatLabel-text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }\n        }, this.props.label), /*#__PURE__*/React.createElement(\"input\", {\n          onChange: evt => this.getInputVal(evt),\n          type: \"text\",\n          value: this.state.value || '',\n          placeholder: \"\",\n          className: \"InputBox pl-TextInput-input has-text pl-FloatLabel-input\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }\n        }));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.getElements());\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/text-input/standard-text-input.tsx"],"names":["React","StandardTextInput","Component","constructor","props","value","currentValue","reportCurrentValue","onChangeAction","row","cell","columnName","state","getInputVal","e","keyVal","target","setState","getElements","controlType","label","evt","undefined","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAkBA,OAAO,MAAMC,iBAAN,SAAgCD,KAAK,CAACE,SAAtC,CAA+D;AAClEC,EAAAA,WAAW,CAACC,KAAD,EAAiB;AACxB,UAAMA,KAAN;AADwB,SAM5BC,KAN4B,GAMpB,KAAKD,KAAL,CAAWE,YANS;;AAAA,SAgB5BC,kBAhB4B,GAgBT,MAAI,KAAKH,KAAL,CAAWI,cAAX,CAA0B,KAAKJ,KAAL,CAAWK,GAArC,EAA0C,KAAKL,KAAL,CAAWM,IAArD,EAA2D,KAAKL,KAAhE,EAAuE,KAAKD,KAAL,CAAWO,UAAlF,CAhBK;;AAExB,SAAKC,KAAL,GAAa;AACTP,MAAAA,KAAK,EAAG,KAAKD,KAAL,CAAWE;AADV,KAAb;AAGH;;AAGDO,EAAAA,WAAW,CAACC,CAAD,EAAsB;AAC7B;AACA,QAAIC,MAAM,GAAGD,CAAC,CAACE,MAAf;AACA,SAAKX,KAAL,GAAaU,MAAM,CAACV,KAApB;AACA,SAAKY,QAAL,CAAc;AAACZ,MAAAA,KAAK,EAAGU,MAAM,CAACV;AAAhB,KAAd;AACA,SAAKE,kBAAL;AACH;;AAIDW,EAAAA,WAAW,GAAE;AACT,YAAQ,KAAKd,KAAL,CAAWe,WAAnB;AACI,WAAK,YAAL;AACI,4BACI;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqC,KAAKf,KAAL,CAAWgB,KAAhD,CADJ,eAEI;AAAO,UAAA,QAAQ,EAAGC,GAAD,IAAyB,KAAKR,WAAL,CAAiBQ,GAAjB,CAA1C;AAAuF,UAAA,IAAI,EAAC,MAA5F;AAAmG,UAAA,KAAK,EAAE,KAAKT,KAAL,CAAWP,KAAX,IAAoB,EAA9H;AAAkI,UAAA,WAAW,EAAC,EAA9I;AAAiJ,UAAA,SAAS,EAAC,0DAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ;;AAMJ,WAAK,UAAL;AACI,4BACI;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAO,UAAA,QAAQ,EAAGgB,GAAD,IAAyB,KAAKR,WAAL,CAAiBQ,GAAjB,CAA1C;AAAuF,UAAA,IAAI,EAAC,MAA5F;AAAmG,UAAA,KAAK,EAAE,KAAKT,KAAL,CAAWP,KAAX,IAAoB,EAA9H;AAAkI,UAAA,WAAW,EAAC,EAA9I;AAAiJ,UAAA,SAAS,EAAC,0DAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;;AAIJ,WAAKiB,SAAL;AACI,4BACI;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqC,KAAKlB,KAAL,CAAWgB,KAAhD,CADJ,eAEI;AAAO,UAAA,QAAQ,EAAGC,GAAD,IAAyB,KAAKR,WAAL,CAAiBQ,GAAjB,CAA1C;AAAuF,UAAA,IAAI,EAAC,MAA5F;AAAmG,UAAA,KAAK,EAAE,KAAKT,KAAL,CAAWP,KAAX,IAAoB,EAA9H;AAAkI,UAAA,WAAW,EAAC,EAA9I;AAAiJ,UAAA,SAAS,EAAC,0DAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ;AAdR;AAoBH;;AACDkB,EAAAA,MAAM,GAAsK;AACxK,wBACI,0CAAG,KAAKL,WAAL,EAAH,CADJ;AAGH;;AA7CiE","sourcesContent":["import * as React from \"react\";\nimport {ChangeEvent} from \"react\";\n\n\ninterface iPROPS {\n    label : string;\n    currentValue : string;\n    onChangeAction : Function\n    row? : number;\n    cell? : number;\n    columnName? : string;\n    controlType?: \"with-label\" | \"no-label\" | undefined\n}\n\ninterface iSTATE{\n    value : string;\n}\n\nexport class StandardTextInput extends React.Component<iPROPS, iSTATE>{\n    constructor(props : iPROPS) {\n        super(props);\n        this.state = {\n            value : this.props.currentValue\n        }\n    }\n    value = this.props.currentValue;\n\n    getInputVal(e: React.ChangeEvent){\n        //console.log(this.props.row, this.props.cell, this.state.value, this.props.columnName);\n        let keyVal = e.target as HTMLInputElement;\n        this.value = keyVal.value\n        this.setState({value : keyVal.value});\n        this.reportCurrentValue();\n    }\n\n    reportCurrentValue=()=>this.props.onChangeAction(this.props.row, this.props.cell, this.value, this.props.columnName);\n\n    getElements(){\n        switch (this.props.controlType) {\n            case \"with-label\":\n                return(\n                    <div className=\"pl-TextInput-wrapper\" >\n                        <div className=\"pl-FloatLabel-text\">{this.props.label}</div>\n                        <input onChange={(evt:React.ChangeEvent)=>this.getInputVal(evt as React.ChangeEvent)}  type=\"text\" value={this.state.value || ''} placeholder=\"\" className=\"InputBox pl-TextInput-input has-text pl-FloatLabel-input\" />\n                    </div>\n                );\n            case \"no-label\":\n                return(\n                    <div className=\"pl-TextInput-wrapper\" >\n                        <input onChange={(evt:React.ChangeEvent)=>this.getInputVal(evt as React.ChangeEvent)}  type=\"text\" value={this.state.value || ''} placeholder=\"\" className=\"InputBox pl-TextInput-input has-text pl-FloatLabel-input\" />\n                    </div>);\n            case undefined:\n                return(\n                    <div className=\"pl-TextInput-wrapper\" >\n                        <div className=\"pl-FloatLabel-text\">{this.props.label}</div>\n                        <input onChange={(evt:React.ChangeEvent)=>this.getInputVal(evt as React.ChangeEvent)}  type=\"text\" value={this.state.value || ''} placeholder=\"\" className=\"InputBox pl-TextInput-input has-text pl-FloatLabel-input\" />\n                    </div>);\n        }\n    }\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (\n            <>{this.getElements()}</>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}