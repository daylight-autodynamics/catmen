{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/intra-app-navigation/intra-app-navigation.tsx\";\nimport * as React from \"react\";\nimport AppButton from \"../button/app-button\";\nexport class Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  sortNavItems() {\n    let groupedItems = [];\n    groupedItems.push([this.props.navElements[0]]); //loop over each element and compare its group name to  , if not we'll create a new group\n\n    i: for (let i = 1; i < this.props.navElements.length; i++) {\n      //we'll start at one since we already pushed the first at zero\n      h: for (let h = 0; h < groupedItems.length; h++) {\n        if (groupedItems[h][0].presentationGroup === this.props.navElements[i].presentationGroup) {\n          groupedItems[h].push(this.props.navElements[i]);\n        } else {\n          //if we are at the end of both arrays then let's create a new group\n          if (h === groupedItems.length - 1) {\n            groupedItems.push([this.props.navElements[i]]);\n            continue i;\n          }\n        }\n      }\n    }\n\n    return groupedItems;\n  }\n\n  createElements() {\n    let itemGroups = this.sortNavItems();\n    console.log(\"grouped items: \", itemGroups);\n    let constructedMenuItems = [];\n\n    for (let i = 0; i < itemGroups.length; i++) {\n      let subMenuItems = [];\n\n      for (let j = 0; j < itemGroups[i].length; j++) {\n        let newButton = /*#__PURE__*/React.createElement(AppButton, {\n          buttonType: \"menu-button\",\n          buttonLabel: itemGroups[i][j].label,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 49\n          }\n        });\n      }\n\n      let subMenuGroup = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"menu-sub-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 48\n        }\n      }, subMenuItems);\n      constructedMenuItems.push(subMenuGroup);\n    }\n\n    let finalMenu = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 41\n      }\n    }, constructedMenuItems);\n    return finalMenu;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.createElements());\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/intra-app-navigation/intra-app-navigation.tsx"],"names":["React","AppButton","Navigation","Component","constructor","props","sortNavItems","groupedItems","push","navElements","i","length","h","presentationGroup","createElements","itemGroups","console","log","constructedMenuItems","subMenuItems","j","newButton","label","subMenuGroup","finalMenu","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,OAAOC,SAAP,MAAsB,sBAAtB;AAiBA,OAAO,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyD;AAC5DC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;AACH;;AAEDC,EAAAA,YAAY,GAAiB;AACzB,QAAIC,YAA2B,GAAG,EAAlC;AACAA,IAAAA,YAAY,CAACC,IAAb,CAAkB,CAAC,KAAKH,KAAL,CAAWI,WAAX,CAAuB,CAAvB,CAAD,CAAlB,EAFyB,CAIzB;;AACAC,IAAAA,CAAC,EAAE,KAAI,IAAIA,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAG,KAAKL,KAAL,CAAWI,WAAX,CAAuBE,MAAxC,EAAgDD,CAAC,EAAjD,EAAoD;AACnD;AACDE,MAAAA,CAAC,EAAE,KAAI,IAAIA,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGL,YAAY,CAACI,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;AACzC,YAAIL,YAAY,CAACK,CAAD,CAAZ,CAAgB,CAAhB,EAAmBC,iBAAnB,KAAyC,KAAKR,KAAL,CAAWI,WAAX,CAAuBC,CAAvB,EAA0BG,iBAAvE,EAA0F;AACtFN,UAAAA,YAAY,CAACK,CAAD,CAAZ,CAAgBJ,IAAhB,CAAqB,KAAKH,KAAL,CAAWI,WAAX,CAAuBC,CAAvB,CAArB;AACH,SAFD,MAEK;AACD;AACA,cAAGE,CAAC,KAAKL,YAAY,CAACI,MAAb,GAAoB,CAA7B,EAA+B;AAC3BJ,YAAAA,YAAY,CAACC,IAAb,CAAkB,CAAC,KAAKH,KAAL,CAAWI,WAAX,CAAuBC,CAAvB,CAAD,CAAlB;AACA,qBAASA,CAAT;AACH;AACJ;AACJ;AACJ;;AAED,WAAOH,YAAP;AACH;;AAEDO,EAAAA,cAAc,GAAE;AACZ,QAAIC,UAAU,GAAG,KAAKT,YAAL,EAAjB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,UAA/B;AACA,QAAIG,oBAAqC,GAAG,EAA5C;;AACA,SAAI,IAAIR,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGK,UAAU,CAACJ,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,UAAIS,YAA6B,GAAG,EAApC;;AAEA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGL,UAAU,CAACL,CAAD,CAAV,CAAcC,MAA/B,EAAuCS,CAAC,EAAxC,EAA2C;AACvC,YAAIC,SAAwB,gBAAI,oBAAC,SAAD;AAAW,UAAA,UAAU,EAAC,aAAtB;AAAoC,UAAA,WAAW,EAAEN,UAAU,CAACL,CAAD,CAAV,CAAcU,CAAd,EAAiBE,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhC;AACH;;AAED,UAAIC,YAA2B,gBAAI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCJ,YAAjC,CAAnC;AACAD,MAAAA,oBAAoB,CAACV,IAArB,CAA0Be,YAA1B;AACH;;AAED,QAAIC,SAAwB,gBAAI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCN,oBAAjC,CAAhC;AACA,WAAOM,SAAP;AACH;;AAEDC,EAAAA,MAAM,GAAE;AAGJ,wBAAQ,0CACH,KAAKX,cAAL,EADG,CAAR;AAGH;;AArD2D","sourcesContent":["import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport App from \"../../App\";\nimport AppButton from \"../button/app-button\";\n\nexport interface iNavItem{\n    label : string;\n    navPath : string;\n    presentationGroup : string;\n    infoPanel? : ReactElement\n}\n\ninterface iPROPS {\n    navElements : iNavItem[]\n}\n\ninterface iSTATE{\n    \n}\n\nexport class Navigation extends React.Component<iPROPS, iSTATE> {\n    constructor(props:iPROPS) {\n        super(props)\n    }\n\n    sortNavItems() : iNavItem[][]{\n        let groupedItems : iNavItem[][] = [];\n        groupedItems.push([this.props.navElements[0]]);\n\n        //loop over each element and compare its group name to  , if not we'll create a new group\n        i: for(let i=1; i < this.props.navElements.length; i++){\n            //we'll start at one since we already pushed the first at zero\n           h: for(let h=0; h < groupedItems.length; h++ ){\n                if( groupedItems[h][0].presentationGroup === this.props.navElements[i].presentationGroup ){\n                    groupedItems[h].push(this.props.navElements[i]);\n                }else{\n                    //if we are at the end of both arrays then let's create a new group\n                    if(h === groupedItems.length-1){\n                        groupedItems.push([this.props.navElements[i]]);\n                        continue i;\n                    }\n                }\n            }\n        }\n\n        return groupedItems;\n    }\n\n    createElements(){\n        let itemGroups = this.sortNavItems();\n        console.log(\"grouped items: \", itemGroups);\n        let constructedMenuItems : ReactElement[] = [];\n        for(let i=0; i < itemGroups.length; i++ ){\n            let subMenuItems : ReactElement[] = [];\n\n            for(let j=0; j < itemGroups[i].length; j++){\n                let newButton : ReactElement = (<AppButton buttonType=\"menu-button\" buttonLabel={itemGroups[i][j].label} /> )\n            }\n\n            let subMenuGroup : ReactElement = (<div className=\"menu-sub-group\">{subMenuItems}</div>)\n            constructedMenuItems.push(subMenuGroup);\n        }\n\n        let finalMenu : ReactElement = (<div className=\"menu-container\">{constructedMenuItems}</div>);\n        return finalMenu;\n    }\n\n    render(){\n\n\n        return (<>\n            {this.createElements()}\n        </>);\n    }\n}"]},"metadata":{},"sourceType":"module"}