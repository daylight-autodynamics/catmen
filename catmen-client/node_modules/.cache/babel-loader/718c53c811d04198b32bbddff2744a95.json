{"ast":null,"code":"import _classCallCheck from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";export var DividerLine=/*#__PURE__*/function(_React$Component){_inherits(DividerLine,_React$Component);var _super=_createSuper(DividerLine);function DividerLine(props){_classCallCheck(this,DividerLine);return _super.call(this,props);}_createClass(DividerLine,[{key:\"getLine\",value:function getLine(){switch(this.props.dividerType){case\"solid\":return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"divider-line\"}));case\"labeled\":return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(this.props.classes,\" divider-line\")},/*#__PURE__*/React.createElement(\"div\",{className:\"divider-left\"}),/*#__PURE__*/React.createElement(\"p\",{className:\"label\"},this.props.labelText),/*#__PURE__*/React.createElement(\"div\",{className:\"divider-right\"})));}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,this.getLine());}}]);return DividerLine;}(React.Component);","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/divider-line/divider-line.tsx"],"names":["React","DividerLine","props","dividerType","classes","labelText","getLine","Component"],"mappings":"gsBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAaA,UAAaC,CAAAA,WAAb,sHACI,qBAAYC,KAAZ,CAA0B,2DAChBA,KADgB,EAEzB,CAHL,iEAKa,CACL,OAAQ,KAAKA,KAAL,CAAWC,WAAnB,EACI,IAAK,OAAL,CACI,mBACI,qDACI,2BAAK,SAAS,CAAC,cAAf,EADJ,CADJ,CAKJ,IAAK,SAAL,CACI,mBACI,qDACI,2BAAK,SAAS,WAAK,KAAKD,KAAL,CAAWE,OAAhB,iBAAd,eACI,2BAAK,SAAS,CAAC,cAAf,EADJ,cAEI,yBAAG,SAAS,CAAC,OAAb,EAAsB,KAAKF,KAAL,CAAWG,SAAjC,CAFJ,cAGI,2BAAK,SAAS,CAAC,eAAf,EAHJ,CADJ,CADJ,CARR,CAkBH,CAxBL,uCA0BgL,CACxK,mBAAQ,wCAAG,KAAKC,OAAL,EAAH,CAAR,CACH,CA5BL,yBAAiCN,KAAK,CAACO,SAAvC","sourcesContent":["import * as React from \"react\";\n\n\ninterface iPROPS {\n    dividerType : \"solid\" | \"labeled\";\n    labelText? : string;\n    classes? : string;\n}\n\ninterface iSTATE {\n\n}\n\nexport class DividerLine extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n    }\n\n    getLine(){\n        switch (this.props.dividerType) {\n            case \"solid\":\n                return(\n                    <>\n                        <div className=\"divider-line\"></div>\n                    </>\n                );\n            case \"labeled\":\n                return(\n                    <>\n                        <div className={`${this.props.classes} divider-line`}>\n                            <div className=\"divider-left\"></div>\n                            <p className=\"label\">{this.props.labelText}</p>\n                            <div className=\"divider-right\"></div>\n                        </div>\n                    </>\n                )\n        }\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (<>{this.getLine()}</>);\n    }\n}"]},"metadata":{},"sourceType":"module"}