{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/text-input/standard-text-input.tsx\";\nimport * as React from \"react\";\nexport class StandardTextInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.reportCurrentValue = () => this.props.onChangeAction(this.props.row, this.props.cell, this.state.value, this.props.columnName);\n\n    this.state = {\n      value: this.props.currentValue\n    };\n  }\n\n  getInputVal(e) {\n    console.log(this.props.row, this.props.cell, this.state.value, this.props.columnName);\n    let keyVal = e.target;\n    this.setState({\n      value: keyVal.value\n    });\n    this.reportCurrentValue();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-TextInput-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pl-FloatLabel-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, this.props.label), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: evt => this.getInputVal(evt),\n      type: \"text\",\n      value: this.state.value || '',\n      placeholder: \"\",\n      className: \"InputBox pl-TextInput-input has-text pl-FloatLabel-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/text-input/standard-text-input.tsx"],"names":["React","StandardTextInput","Component","constructor","props","reportCurrentValue","onChangeAction","row","cell","state","value","columnName","currentValue","getInputVal","e","console","log","keyVal","target","setState","render","label","evt"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAiBA,OAAO,MAAMC,iBAAN,SAAgCD,KAAK,CAACE,SAAtC,CAA+D;AAClEC,EAAAA,WAAW,CAACC,KAAD,EAAiB;AACxB,UAAMA,KAAN;;AADwB,SAe5BC,kBAf4B,GAeT,MAAI,KAAKD,KAAL,CAAWE,cAAX,CAA0B,KAAKF,KAAL,CAAWG,GAArC,EAA0C,KAAKH,KAAL,CAAWI,IAArD,EAA2D,KAAKC,KAAL,CAAWC,KAAtE,EAA6E,KAAKN,KAAL,CAAWO,UAAxF,CAfK;;AAExB,SAAKF,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAG,KAAKN,KAAL,CAAWQ;AADV,KAAb;AAGH;;AAEDC,EAAAA,WAAW,CAACC,CAAD,EAAsB;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWG,GAAvB,EAA4B,KAAKH,KAAL,CAAWI,IAAvC,EAA6C,KAAKC,KAAL,CAAWC,KAAxD,EAA+D,KAAKN,KAAL,CAAWO,UAA1E;AACA,QAAIM,MAAM,GAAGH,CAAC,CAACI,MAAf;AACA,SAAKC,QAAL,CAAc;AAACT,MAAAA,KAAK,EAAGO,MAAM,CAACP;AAAhB,KAAd;AACA,SAAKL,kBAAL;AAEH;;AAIDe,EAAAA,MAAM,GAAsK;AACxK,wBACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqC,KAAKhB,KAAL,CAAWiB,KAAhD,CADJ,eAEI;AAAO,MAAA,QAAQ,EAAGC,GAAD,IAAyB,KAAKT,WAAL,CAAiBS,GAAjB,CAA1C;AAAuF,MAAA,IAAI,EAAC,MAA5F;AAAmG,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,KAAX,IAAoB,EAA9H;AAAkI,MAAA,WAAW,EAAC,EAA9I;AAAiJ,MAAA,SAAS,EAAC,0DAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAOH;;AA1BiE","sourcesContent":["import * as React from \"react\";\nimport {ChangeEvent} from \"react\";\n\n\ninterface iPROPS {\n    label : string;\n    currentValue : string;\n    onChangeAction : Function\n    row? : number;\n    cell? : number;\n    columnName? : string;\n}\n\ninterface iSTATE{\n    value : string;\n}\n\nexport class StandardTextInput extends React.Component<iPROPS, iSTATE>{\n    constructor(props : iPROPS) {\n        super(props);\n        this.state = {\n            value : this.props.currentValue\n        }\n    }\n\n    getInputVal(e: React.ChangeEvent){\n        console.log(this.props.row, this.props.cell, this.state.value, this.props.columnName)\n        let keyVal = e.target as HTMLInputElement;\n        this.setState({value : keyVal.value});\n        this.reportCurrentValue();\n\n    }\n\n    reportCurrentValue=()=>this.props.onChangeAction(this.props.row, this.props.cell, this.state.value, this.props.columnName);\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (\n            <div className=\"pl-TextInput-wrapper\" >\n                <div className=\"pl-FloatLabel-text\">{this.props.label}</div>\n                <input onChange={(evt:React.ChangeEvent)=>this.getInputVal(evt as React.ChangeEvent)}  type=\"text\" value={this.state.value || ''} placeholder=\"\" className=\"InputBox pl-TextInput-input has-text pl-FloatLabel-input\" />\n\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}