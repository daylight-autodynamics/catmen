{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/heru-tool-tip/tool-tip.tsx\";\nimport * as React from \"react\";\nimport { win } from \"../../index\";\nexport class WindowLevelCapture {\n  constructor() {\n    this.mousePosition = void 0;\n    this.mousePosition = {\n      x: -1000,\n      y: -1000\n    };\n  }\n\n  get mousePos() {\n    return this.mousePosition;\n  }\n\n  getMousePosition(evt) {\n    this.mousePosition = {\n      x: evt.clientX,\n      y: evt.clientY\n    }; //console.log(\"mouse position\", evt.clientX, evt.clientY);\n  }\n\n  windowEvent() {\n    window.addEventListener('mousemove', evt => this.getMousePosition(evt));\n  }\n\n}\nexport class ToolTip extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toolTipContainerRef = void 0;\n    this.intervalID = 0;\n    this.state = {\n      mousePosition: {\n        x: -window.innerWidth,\n        y: -window.innerHeight\n      },\n      isHovering: false\n    };\n    this.toolTipContainerRef = React.createRef();\n  }\n\n  updateMousePos() {\n    //Only update if the mouse is moving, check if position values have changed\n    console.log(\"check update mouse\");\n\n    if (this.state.mousePosition.x !== win.mousePos.x && this.state.mousePosition.y !== win.mousePos.y) {\n      this.setState({\n        mousePosition: {\n          x: win.mousePos.x,\n          y: win.mousePos.y\n        }\n      });\n      console.log(\"state changed\", \"x:\", this.state.mousePosition.x, \"y: \", this.state.mousePosition.y);\n    }\n\n    let checkMouseIsOver = () => {\n      var _this$props$btnRefere;\n\n      let hoverCheck = true;\n\n      if (((_this$props$btnRefere = this.props.btnReference) === null || _this$props$btnRefere === void 0 ? void 0 : _this$props$btnRefere.current) != undefined) {\n        var _this$props$btnRefere2, _this$props$btnRefere3;\n\n        let rect = (_this$props$btnRefere2 = this.props.btnReference) === null || _this$props$btnRefere2 === void 0 ? void 0 : (_this$props$btnRefere3 = _this$props$btnRefere2.current) === null || _this$props$btnRefere3 === void 0 ? void 0 : _this$props$btnRefere3.getBoundingClientRect(); // if mouse is too far the the left, the mouse x is less that the button x\n\n        if (this.state.mousePosition.x < rect.x) {\n          hoverCheck = false;\n        } // if mouse is too far to the right\n\n\n        if (this.state.mousePosition.x > rect.x + (rect === null || rect === void 0 ? void 0 : rect.width)) {\n          hoverCheck = false;\n        } // if mouse is too far the the left, the mouse x is less that the button x\n\n\n        if (this.state.mousePosition.y < rect.y) {\n          hoverCheck = false;\n        } // if mouse is too far to the right\n\n\n        if (this.state.mousePosition.y > rect.y + (rect === null || rect === void 0 ? void 0 : rect.height)) {\n          hoverCheck = false;\n        }\n      }\n\n      return hoverCheck;\n    };\n\n    if (checkMouseIsOver() === false) {\n      this.clearHover();\n      console.log(\"false caused hover clear\");\n    } else {\n      if (this.toolTipContainerRef.current !== null) {\n        this.toolTipContainerRef.current.style.top = this.state.mousePosition.y.toString();\n        this.toolTipContainerRef.current.style.left = this.state.mousePosition.x.toString();\n      } //top : this.state.mousePosition.y, left: this.state.mousePosition.x\n\n\n      this.setState({\n        isHovering: true\n      });\n    }\n\n    console.log(this.state.isHovering);\n  }\n\n  getToolTip() {\n    var _this$props$tooltipSt, _this$props$tooltipSt2;\n\n    if (this.state.isHovering === false) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n\n    let tooltipInner = /*#__PURE__*/React.createElement(React.Fragment, null);\n\n    switch (this.props.tooltipType) {\n      case \"standard\":\n        tooltipInner = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"app-tool-tip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }\n        }, (_this$props$tooltipSt = this.props.tooltipStandardContent) === null || _this$props$tooltipSt === void 0 ? void 0 : _this$props$tooltipSt.headerText), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }\n        }, (_this$props$tooltipSt2 = this.props.tooltipStandardContent) === null || _this$props$tooltipSt2 === void 0 ? void 0 : _this$props$tooltipSt2.copy)));\n        break;\n\n      case \"custom\":\n        tooltipInner = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"app-tool-tip\",\n          style: {\n            top: this.state.mousePosition.y,\n            left: this.state.mousePosition.x,\n            width: \"100px\",\n            height: \"100px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }\n        }, \"my custom tooltip\"), this.props.toolTipCustomElement));\n        break;\n    }\n\n    return (\n      /*#__PURE__*/\n      //<div ref={this.toolTipContainerRef} style={{zIndex: 10000, border: \"3px solid red\", width:\"1px\", height:\"1px\", position: \"fixed\", top : this.state.mousePosition.y, left: this.state.mousePosition.x}} >\n      React.createElement(\"div\", {\n        ref: this.toolTipContainerRef,\n        style: {\n          zIndex: 10000,\n          border: \"3px solid red\",\n          width: \"1px\",\n          height: \"1px\",\n          position: \"fixed\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, tooltipInner)\n    );\n  }\n\n  componentWillUnmount() {\n    this.clearHover();\n    this.clearInterval();\n  }\n\n  clearInterval() {\n    console.log(\"clear interval\");\n    clearInterval(this.intervalID);\n  }\n\n  startHover() {\n    console.log(\"start hover\");\n    this.intervalID = setInterval(() => this.updateMousePos(), 50);\n  }\n\n  clearHover() {\n    console.log(\"clear hover\");\n    this.setState({\n      isHovering: false\n    });\n    clearInterval(this.intervalID);\n  }\n\n  componentDidMount() {//this.startHover();\n  }\n\n  render() {\n    let constructedToolTip = /*#__PURE__*/React.createElement(React.Fragment, null, this.getToolTip(), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        right: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 16\n      }\n    }, `x: ${this.state.mousePosition.x} y: ${this.state.mousePosition.y} `));\n    return constructedToolTip;\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/heru-tool-tip/tool-tip.tsx"],"names":["React","win","WindowLevelCapture","constructor","mousePosition","x","y","mousePos","getMousePosition","evt","clientX","clientY","windowEvent","window","addEventListener","ToolTip","Component","props","toolTipContainerRef","intervalID","state","innerWidth","innerHeight","isHovering","createRef","updateMousePos","console","log","setState","checkMouseIsOver","hoverCheck","btnReference","current","undefined","rect","getBoundingClientRect","width","height","clearHover","style","top","toString","left","getToolTip","tooltipInner","tooltipType","tooltipStandardContent","headerText","copy","toolTipCustomElement","zIndex","border","position","componentWillUnmount","clearInterval","startHover","setInterval","componentDidMount","render","constructedToolTip","right"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {win} from \"../../index\";\nimport {ReactElement, RefObject} from \"react\";\n\ninterface iMousePos{\n    x:number;\n    y:number;\n}\n\ninterface iWindow{\n\n}\nexport class WindowLevelCapture implements iWindow{\n    private mousePosition : iMousePos;\n    constructor() {\n        this.mousePosition = {x:-1000,y:-1000};\n    }\n\n    get mousePos(){\n        return this.mousePosition;\n    }\n\n    getMousePosition(evt:MouseEvent){\n        this.mousePosition = { x : evt.clientX, y : evt.clientY};\n        //console.log(\"mouse position\", evt.clientX, evt.clientY);\n\n    }\n\n    windowEvent(){\n        window.addEventListener('mousemove',\n            (evt)=>this.getMousePosition(evt) )\n    }\n}\n\ninterface iPROPS{\n    tooltipType? : \"standard\" | \"custom\";\n    tooltipStandardContent? : {\n        headerText : string,\n        copy : string\n    }\n    toolTipCustomElement? : ReactElement;\n    btnReference? : RefObject<HTMLButtonElement>;\n    linkReference? : RefObject<HTMLAnchorElement>;\n}\n\ninterface iSTATE {\n    mousePosition : {\n        x : number,\n        y : number\n    };\n    isHovering : boolean;\n}\n\nexport class ToolTip extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n        this.state ={\n            mousePosition : {x:-window.innerWidth, y:-window.innerHeight},\n            isHovering : false\n        };\n        this.toolTipContainerRef = React.createRef<HTMLDivElement>();\n    }\n    toolTipContainerRef : React.RefObject<HTMLDivElement>;\n    private intervalID : any = 0;\n\n    updateMousePos(){\n        //Only update if the mouse is moving, check if position values have changed\n        console.log(\"check update mouse\");\n        if(this.state.mousePosition.x !== win.mousePos.x && this.state.mousePosition.y !== win.mousePos.y){\n            this.setState(\n                {\n                    mousePosition: {\n                        x: win.mousePos.x,\n                        y: win.mousePos.y\n                    }\n                });\n\n           console.log(\"state changed\", \"x:\", this.state.mousePosition.x, \"y: \", this.state.mousePosition.y);\n        }\n\n        let checkMouseIsOver = ()=>{\n            let hoverCheck : boolean = true;\n            if(this.props.btnReference?.current != undefined){\n                let rect = this.props.btnReference?.current?.getBoundingClientRect();\n                // if mouse is too far the the left, the mouse x is less that the button x\n                if(this.state.mousePosition.x < rect.x ){\n                    hoverCheck = false;\n                }\n\n                // if mouse is too far to the right\n                if(this.state.mousePosition.x > (rect.x + rect?.width) ){\n                    hoverCheck = false\n                }\n\n                // if mouse is too far the the left, the mouse x is less that the button x\n                if(this.state.mousePosition.y < rect.y ){\n                    hoverCheck = false;\n                }\n\n                // if mouse is too far to the right\n                if(this.state.mousePosition.y > (rect.y + rect?.height) ){\n                    hoverCheck = false\n                }\n            }\n            return hoverCheck;\n        };\n\n        if(checkMouseIsOver() === false){\n            this.clearHover();\n            console.log(\"false caused hover clear\");\n        }else{\n            if(this.toolTipContainerRef.current !== null){\n                this.toolTipContainerRef.current.style.top = (this.state.mousePosition.y).toString();\n                this.toolTipContainerRef.current.style.left = (this.state.mousePosition.x).toString();\n            }\n\n            //top : this.state.mousePosition.y, left: this.state.mousePosition.x\n            this.setState({isHovering : true})\n        }\n        console.log(this.state.isHovering);\n\n    }\n\n    getToolTip(){\n        if(this.state.isHovering === false){\n            return <></>;\n        }\n\n        let tooltipInner : ReactElement = (<></>);\n\n        switch(this.props.tooltipType){\n            case \"standard\":\n                tooltipInner = (<>\n                    <div className=\"app-tool-tip\">\n                        <h3>{this.props.tooltipStandardContent?.headerText}</h3>\n                        <p>{this.props.tooltipStandardContent?.copy}</p>\n                    </div>\n                </>);\n                break;\n\n            case \"custom\":\n                tooltipInner = (<>\n                    <div\n                        className=\"app-tool-tip\"\n                        style={\n                            {\n                                top: this.state.mousePosition.y,\n                                left: this.state.mousePosition.x,\n                                width:\"100px\",\n                                height:\"100px\"\n                            }\n                        }\n                    >\n                        <h2>my custom tooltip</h2>\n                        {this.props.toolTipCustomElement}\n                    </div>\n                </>);\n                break;\n        }\n\n\n        return (\n            //<div ref={this.toolTipContainerRef} style={{zIndex: 10000, border: \"3px solid red\", width:\"1px\", height:\"1px\", position: \"fixed\", top : this.state.mousePosition.y, left: this.state.mousePosition.x}} >\n            <div ref={this.toolTipContainerRef} style={{zIndex: 10000, border: \"3px solid red\", width:\"1px\", height:\"1px\", position: \"fixed\"}} >\n                {tooltipInner}\n            </div>\n        )\n    }\n\n    componentWillUnmount(): void {\n        this.clearHover();\n        this.clearInterval();\n    }\n\n    clearInterval(){\n        console.log(\"clear interval\");\n        clearInterval(this.intervalID);\n    }\n\n    startHover(){\n        console.log(\"start hover\");\n        this.intervalID = setInterval(()=>this.updateMousePos(), 50);\n    }\n\n    clearHover(){\n        console.log(\"clear hover\");\n        this.setState({isHovering:false} );\n        clearInterval(this.intervalID);\n    }\n\n    componentDidMount(): void {\n        //this.startHover();\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n\n        let constructedToolTip = (\n          <>\n              {this.getToolTip()}\n               <p style={{position:\"fixed\", top:0, right:0}}>{`x: ${this.state.mousePosition.x} y: ${this.state.mousePosition.y} `}</p>\n          </>\n        );\n\n        return constructedToolTip;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}