{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/tiles/tile-component.tsx\";\nimport * as React from \"react\";\nexport class Tile extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  mouseDownAction() {\n    if (this.props.mouseDownActions !== null && this.props.mouseDownActions !== undefined) {\n      for (let i = 0; i < this.props.mouseDownActions.length; i++) {\n        this.props.mouseDownActions[i]();\n      }\n    }\n  }\n\n  mouseUpAction() {\n    if (this.props.mouseUpActions !== null && this.props.mouseUpActions !== undefined) {\n      for (let i = 0; i < this.props.mouseUpActions.length; i++) {\n        this.props.mouseUpActions[i]();\n      }\n    }\n  }\n\n  getTile() {\n    switch (this.props.tileType) {\n      case \"edit-cell\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          draggable: \"false\",\n          onMouseUp: () => this.mouseUpAction(),\n          onMouseDown: () => this.mouseDownAction(),\n          className: `${this.props.selectedClass} cell-editable`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: `${this.props.selectedClass}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }\n        }, `${this.props.tileLabel} &nbsp`), /*#__PURE__*/React.createElement(\"div\", {\n          className: `affordance ${this.props.selectedClass}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }\n        }));\n\n      case \"read-only-cell\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }\n        }, this.props.tileLabel));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.getTile());\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/tiles/tile-component.tsx"],"names":["React","Tile","Component","constructor","props","mouseDownAction","mouseDownActions","undefined","i","length","mouseUpAction","mouseUpActions","getTile","tileType","selectedClass","tileLabel","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAiBA,OAAO,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAkD;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;AACH;;AAEDC,EAAAA,eAAe,GAAE;AACb,QAAG,KAAKD,KAAL,CAAWE,gBAAX,KAAgC,IAAhC,IAAwC,KAAKF,KAAL,CAAWE,gBAAX,KAAgCC,SAA3E,EAAqF;AACjF,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAG,KAAKJ,KAAL,CAAWE,gBAAX,CAA4BG,MAA7C,EAAqDD,CAAC,EAAtD,EAAyD;AACrD,aAAKJ,KAAL,CAAWE,gBAAX,CAA4BE,CAA5B;AACH;AACJ;AACJ;;AAEDE,EAAAA,aAAa,GAAE;AACX,QAAG,KAAKN,KAAL,CAAWO,cAAX,KAA8B,IAA9B,IAAsC,KAAKP,KAAL,CAAWO,cAAX,KAA8BJ,SAAvE,EAAiF;AAC7E,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAG,KAAKJ,KAAL,CAAWO,cAAX,CAA0BF,MAA3C,EAAmDD,CAAC,EAApD,EAAuD;AACnD,aAAKJ,KAAL,CAAWO,cAAX,CAA0BH,CAA1B;AACH;AACJ;AACJ;;AAEDI,EAAAA,OAAO,GAAE;AACL,YAAQ,KAAKR,KAAL,CAAWS,QAAnB;AACI,WAAK,WAAL;AACI,4BACI;AACI,UAAA,SAAS,EAAE,OADf;AAEI,UAAA,SAAS,EAAE,MAAI,KAAKH,aAAL,EAFnB;AAGI,UAAA,WAAW,EAAE,MAAI,KAAKL,eAAL,EAHrB;AAII,UAAA,SAAS,EAAG,GAAE,KAAKD,KAAL,CAAWU,aAAc,gBAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAMI;AAAG,UAAA,SAAS,EAAG,GAAE,KAAKV,KAAL,CAAWU,aAAc,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+C,GAAE,KAAKV,KAAL,CAAWW,SAAU,QAAtE,CANJ,eAOI;AAAK,UAAA,SAAS,EAAG,cAAa,KAAKX,KAAL,CAAWU,aAAc,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ,CADJ;;AAWJ,WAAK,gBAAL;AACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,KAAKV,KAAL,CAAWW,SAAf,CADJ,CADJ;AAdR;AAoBH;;AAEDC,EAAAA,MAAM,GAAsK;AACxK,wBAAQ,0CAAG,KAAKJ,OAAL,EAAH,CAAR;AACH;;AA9CoD","sourcesContent":["import * as React from \"react\";\nimport {ReactElement} from \"react\";\n\nexport type selectedStateType = \"selected\" | \"active\" | \"inactive\" | \"\";\ninterface iPROPS{\n    tileType : string;\n    tileLabel : string;\n    tileCustomElement? : ReactElement;\n    mouseDownActions? : Function[];\n    mouseUpActions? : Function[];\n    selectedClass : selectedStateType;\n}\n\ninterface iSTATE{\n\n}\n\nexport class Tile extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n    }\n\n    mouseDownAction(){\n        if(this.props.mouseDownActions !== null && this.props.mouseDownActions !== undefined){\n            for(let i=0; i < this.props.mouseDownActions.length; i++){\n                this.props.mouseDownActions[i]();\n            }\n        }\n    }\n\n    mouseUpAction(){\n        if(this.props.mouseUpActions !== null && this.props.mouseUpActions !== undefined){\n            for(let i=0; i < this.props.mouseUpActions.length; i++){\n                this.props.mouseUpActions[i]();\n            }\n        }\n    }\n\n    getTile(){\n        switch (this.props.tileType) {\n            case \"edit-cell\":\n                return (\n                    <div\n                        draggable={\"false\"}\n                        onMouseUp={()=>this.mouseUpAction()}\n                        onMouseDown={()=>this.mouseDownAction()}\n                        className={`${this.props.selectedClass} cell-editable`}\n                    >\n                        <p className={`${this.props.selectedClass}`}>{`${this.props.tileLabel} &nbsp`}</p>\n                        <div className={`affordance ${this.props.selectedClass}`}></div>\n                    </div>\n                );\n            case \"read-only-cell\":\n                return (\n                    <div>\n                        <p>{this.props.tileLabel}</p>\n                    </div>\n                )\n        }\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (<>{this.getTile()}</>);\n    }\n}"]},"metadata":{},"sourceType":"module"}