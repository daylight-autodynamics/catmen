{"ast":null,"code":"import _classCallCheck from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import{CatmanIcon}from\"../../../svg/icons/icons\";import{catmanData}from\"../../../_sample-data/products-data\";import StickyThing from\"../../../view-components/sticky-panel/sticky-panel\";import{toolTipContent}from\"../../tool-tip-content/content-tool-tips\";import AppButton from\"../../../view-components/button/app-button\";import{CatalogSingleProduct}from\"./single-product-view\";import{TextInput}from\"../../../view-components/text-input/text-input\";import{ModalView}from\"../../../view-components/modal/modal\";import{AddVariantsWizard}from\"../../wizards/create-product-group/add-variants-wizard\";import{dataManagerMain}from\"../../../index\";import{CreateProductGroupWizard}from\"../../wizards/create-product-group/create-product-group-wizard\";import{DataGridWithEditDrawer}from\"../../../view-components/data-grid/data-grid-with-edit-drawer\";export var CatalogDetailsView=/*#__PURE__*/function(_React$Component){_inherits(CatalogDetailsView,_React$Component);var _super=_createSuper(CatalogDetailsView);function CatalogDetailsView(props){var _this;_classCallCheck(this,CatalogDetailsView);_this=_super.call(this,props);_this.workingDataSet=void 0;_this.initialized=false;_this.dataGridRef=React.createRef();_this.editDrawerRef=React.createRef();_this.editDrawer=/*#__PURE__*/React.createElement(React.Fragment,null);_this.selectionSet=[];_this.columns=void 0;_this.drawerFirstOpen=false;_this.drawerInputsLength=0;_this.inputsControls=void 0;_this.closeSingleProductEdit=function(){window.history.back();};_this.updateValues=function(row,cell,value,colName){if(_this.dataGridRef.current!=null&&_this.dataGridRef.current!=undefined){_this.selectionSet=_this.dataGridRef.current.selectionSet;console.log(\"cat details view selection set: \",_this.selectionSet);}console.log(\"inside drawer\",value,\" col name:\",colName);//the minus 2 is the offset for the extra columns checkbox and edit\nfor(var i=0;i<_this.selectionSet.length;i++){if(_this.selectionSet[i].columnName===colName){var myRow=_this.selectionSet[i].row-2;var myCell=_this.selectionSet[i].cell-2;//this.workingDataSet[ myRow-2][myCell-2].value = value;\nvar updateSet={row:myRow,cell:myCell,newData:value};//this.props.gridData.setProductData = updateSet\n_this.props.gridData.setData(\"product-data\",updateSet);}}//TODO remove all of these .getProductData() and replace with generic version\n_this.setState({workingData:_this.props.gridData.getProductData()});console.log(\"working data set:\",_this.state.workingData);};_this.inputFocusAction=function(row,cell){//console.log(\"row: \", row, \" cell:\", cell);\nif(_this.state.editDrawerOpen===true){_this.setState({focusedInput:{row:row,cell:cell,editDrawerOpen:_this.state.editDrawerOpen}});}};_this.openFooter=function(){if(_this.dataGridRef.current!=undefined){var checkedCount=0;if(_this.dataGridRef.current.getCheckedRows()!=undefined&&_this.dataGridRef.current!=undefined){// @ts-ignore\ncheckedCount=_this.dataGridRef.current.getCheckedRows().length;}if(checkedCount>0){console.log(\"checked from selection Actions: \",checkedCount);_this.setState({footerOpen:true});}else if(checkedCount===0){_this.setState({footerOpen:false});}}};_this.columns=_this.props.columnsData.getProductColumns();_this.state={workingData:_this.props.gridData.getProductData(),columnsData:_this.props.columnsData.getProductColumns(),productViewOpen:false,editDrawerOpen:false,editDrawerMaximized:false,footerOpen:false,footerMode:\"default\",selectionSet:[],modalState:\"closed\",focusedInput:{row:0,cell:0,editDrawerOpen:false}};_this.workingDataSet=_this.props.gridData.getProductData();return _this;}_createClass(CatalogDetailsView,[{key:\"getCheckBoxesSelection\",value:function getCheckBoxesSelection(){if(this.dataGridRef.current!==null&&this.dataGridRef.current!==undefined){return this.dataGridRef.current.getCheckedRows();}}},{key:\"getProductViewDrawer\",value:function getProductViewDrawer(){if(this.props.query!=\"none\"&&this.props.query!=null&&this.props.query!=undefined){return/*#__PURE__*/React.createElement(StickyThing,{enterFromThisSide:\"right\",lastResortClasses:\"product-view\",animateIn:true,heightIncludeUnits:\"100vh\",widthIncludeUnits:\"100vw\",stickyOpen:true,bgColor:\"#CECECE\",doAnimation:true},/*#__PURE__*/React.createElement(CatalogSingleProduct,{uniqueID:this.props.query,productData:this.state.workingData,closeSingleProduct:this.closeSingleProductEdit}));}}},{key:\"getColumnLabel\",value:function getColumnLabel(colName){//utility method for getting column data obj from\nvar columnLabel=\"\";for(var i=0;i<this.columns.length;i++){if(this.columns[i].columnName===colName){columnLabel=this.columns[i].columnLabel;}}return columnLabel;}},{key:\"shiftFocus\",//TODO this should be a generic method\nvalue:function shiftFocus(shiftIndex){console.log(\"shifted focus: \",shiftIndex);var inputs=document.getElementsByClassName(\"InputBox\");if(inputs[0]!=undefined){if(shiftIndex===inputs.length-1){console.log(\"shifted focus on end\");// @ts-ignore\ninputs[0].focus();// @ts-ignore\ninputs[0].select();}}}},{key:\"getEditDrawer\",value:function getEditDrawer(){var _this2=this;if(this.state.editDrawerOpen===false){return/*#__PURE__*/React.createElement(React.Fragment,null);}if(this.dataGridRef.current!=null&&this.dataGridRef.current!=undefined){this.selectionSet=this.dataGridRef.current.selectionSet;// console.log(\"cat details view selection set: \", this.selectionSet)\n}var inputs=[];var selectedItems=[];//Create list of selection items that need inputs (i.e. one input per column)\ni:for(var i=0;i<this.selectionSet.length;i++){j:for(var j=0;j<selectedItems.length;j++){if(this.selectionSet[i].columnName===selectedItems[j].columnName){continue i;}}var row=this.selectionSet[i].row;var cell=this.selectionSet[i].cell;//TODO this needs to be genericized\n//let productDataItem = catmanData.productData[row-2][cell-2];\nvar productDataItem=catmanData.productData[row-2][cell-2];selectedItems.push(productDataItem);}//Store number of inputs for later use\nthis.drawerInputsLength=selectedItems.length;var _loop=function _loop(_i){var input=/*#__PURE__*/React.createElement(TextInput,{row:_this2.selectionSet[_i].row,cell:_this2.selectionSet[_i].cell,columnName:_this2.selectionSet[_i].columnName,label:_this2.getColumnLabel(selectedItems[_i].columnName),currentValue:selectedItems[_i].value,onChangeAction:_this2.updateValues,onFocusAction:_this2.inputFocusAction,onBlurActions:[function(){return _this2.shiftFocus(_i);}]});inputs.push(input);};for(var _i=0;_i<selectedItems.length;_i++){_loop(_i);}var maximize=function maximize(valueCheck){if(valueCheck===true){return\"maximized\";}else{return\"catman-edit-default restored\";}};var restoreAndMaximizeTooltip=function restoreAndMaximizeTooltip(valueCheck){if(valueCheck===false){return toolTipContent.maximizeDrawer();}else{return toolTipContent.restoreDrawer();}};var restoreAndMaximizeBtnIcon=function restoreAndMaximizeBtnIcon(valueCheck){if(valueCheck===false){return\"icon-maximize\";}else{return\"icon-restore-btn\";}};var drawer=/*#__PURE__*/React.createElement(React.Fragment,null);if(this.state.editDrawerOpen===true){drawer=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(StickyThing,{ref:this.editDrawerRef,enterFromThisSide:\"bottom\",lastResortClasses:\"catman-edit-drawer \".concat(maximize(this.state.editDrawerMaximized)),animateIn:true,heightIncludeUnits:\"\",widthIncludeUnits:\"\",stickyOpen:true,bgColor:\"#CECECE\",doAnimation:true,toolBar:\"none\"},/*#__PURE__*/React.createElement(\"div\",{className:\"tool-bar\"},/*#__PURE__*/React.createElement(\"div\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"drawer-controls\"},/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"\",OnClick:function OnClick(){return _this2.maximizeEditDrawer();},tooltipType:\"custom\",tooltip:restoreAndMaximizeTooltip(this.state.editDrawerMaximized),toolTipTimeOutInMS:10000,classes:\"tool-bar-btn icon-only-btn\",iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"\".concat(restoreAndMaximizeBtnIcon(this.state.editDrawerMaximized)),classes:\" \",height:\"100%\",width:\"100%\"})}),/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"\",OnClick:function OnClick(){return _this2.closeEditDrawer();},tooltipType:\"custom\",tooltip:toolTipContent.closeDrawer(),toolTipTimeOutInMS:10000,classes:\"icon-only-btn\",iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-close\",classes:\" \",height:\"100%\",width:\"100%\"})}))),/*#__PURE__*/React.createElement(\"div\",{className:\"drawer-edit-area\"},inputs)));}return drawer;}},{key:\"maximizeEditDrawer\",value:function maximizeEditDrawer(){this.setState({editDrawerMaximized:!this.state.editDrawerMaximized});}},{key:\"closeEditDrawer\",value:function closeEditDrawer(){this.setState({editDrawerOpen:false,editDrawerMaximized:false,focusedInput:{row:0,cell:0,editDrawerOpen:false}});if(this.dataGridRef.current!=null&&this.dataGridRef.current!=undefined){this.dataGridRef.current.clearSelection();}this.drawerFirstOpen=false;}},{key:\"openEditDrawer\",value:function openEditDrawer(){this.drawerFirstOpen=true;this.setState({editDrawerOpen:true});}//FOOTER RELATED\n},{key:\"getFooterMenu\",value:function getFooterMenu(){var _this3=this;var footer=/*#__PURE__*/React.createElement(React.Fragment,null);var buttons=/*#__PURE__*/React.createElement(React.Fragment,null);switch(this.state.footerMode){case\"default\":buttons=/*#__PURE__*/React.createElement(\"div\",{className:\"footer-btn-bar catman-footer\"},/*#__PURE__*/React.createElement(AppButton,{classes:\"separate-left\",buttonType:\"secondary-action\",buttonLabel:\"Edit Selected\",OnClick:function OnClick(){return _this3.switchToEditMode();},tooltipType:\"custom\",tooltip:toolTipContent.footerEditSelection(),toolTipTimeOutInMS:10000,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-edit\",classes:\" \",height:\"100%\",width:\"100%\"})}),/*#__PURE__*/React.createElement(AppButton,{classes:\" \",buttonType:\"secondary-action\",buttonLabel:\"Add Variant\",OnClick:function OnClick(){return _this3.manageModals(\"add-to-product-group\");},tooltipType:\"custom\",tooltip:toolTipContent.footerAddVariant(),toolTipTimeOutInMS:10000,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-add\",classes:\" \",height:\"100%\",width:\"100%\"})}),/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"Clear Selection\",OnClick:function OnClick(){return _this3.footerActions(\"cancel\");},tooltipType:\"custom\",tooltip:toolTipContent.clearSelection(),toolTipTimeOutInMS:10000,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"clear\",classes:\" \",height:\"100%\",width:\"100%\"})}),/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"Delete Selected\",OnClick:function OnClick(){return _this3.footerActions(\"cancel\");},tooltipType:\"custom\",tooltip:toolTipContent.footerDelete(),toolTipTimeOutInMS:10000,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-delete\",classes:\" \",height:\"100%\",width:\"100%\"})}));break;case\"multiple-selected\":buttons=/*#__PURE__*/React.createElement(\"div\",{className:\"footer-btn-bar catman-footer\"},/*#__PURE__*/React.createElement(AppButton,{classes:\"\",buttonType:\"secondary-action\",buttonLabel:\"Edit Selected\",OnClick:function OnClick(){return _this3.switchToEditMode();},tooltipType:\"custom\",tooltip:toolTipContent.footerEditSelection(),toolTipTimeOutInMS:10000,tooltipXOffset:0,tooltipYOffset:20,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-edit\",classes:\" \",height:\"100%\",width:\"100%\"})}),/*#__PURE__*/React.createElement(AppButton,{classes:\" \",buttonType:\"secondary-action\",buttonLabel:\"Make Into a Variant Group\",OnClick:function OnClick(){return _this3.manageModals(\"create-product-group\");},tooltipType:\"custom\",tooltip:toolTipContent.footerCreateVariant(),toolTipTimeOutInMS:10000,tooltipXOffset:0,tooltipYOffset:20,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-add\",classes:\" \",height:\"100%\",width:\"100%\"})}),/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"Clear Selection\",OnClick:function OnClick(){return _this3.footerActions(\"cancel\");},tooltipType:\"custom\",tooltip:toolTipContent.clearSelection(),toolTipTimeOutInMS:10000,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"clear\",classes:\" \",height:\"100%\",width:\"100%\"})}),/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"Delete Selected\",OnClick:function OnClick(){return _this3.footerActions(\"cancel\");},tooltipType:\"custom\",tooltip:toolTipContent.footerDelete(),toolTipTimeOutInMS:10000,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-delete\",classes:\" \",height:\"100%\",width:\"100%\"})}));break;case\"has-group\":buttons=/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\" \",OnClick:function OnClick(){return _this3.footerActions(\"cancel\");},tooltipType:\"custom\",tooltip:toolTipContent.mainNav(),toolTipTimeOutInMS:10000,iconRight:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"down-arrow\",classes:\"ui-icon\",height:\"100%\",width:\"100%\"})});}if(this.state.footerOpen===true){var buttonBar=/*#__PURE__*/React.createElement(React.Fragment,null);footer=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(StickyThing,{enterFromThisSide:\"bottom\",lastResortClasses:\"catman-footer-container\",animateIn:true,heightIncludeUnits:\"3.75rem\",widthIncludeUnits:\"100%\",stickyOpen:true,bgColor:\"rgba(0,0,0,0)\",doAnimation:true},buttons));}return footer;}},{key:\"footerActions\",value:function footerActions(action){switch(action){case\"cancel\":this.setState({footerOpen:false});this.initialized=false;if(this.dataGridRef.current!==null&&this.dataGridRef.current!==undefined){this.dataGridRef.current.clearSelection();}break;case\"add-group\":break;case\"edit\":this.setState({footerOpen:false});this.initialized=false;break;}}},{key:\"addAction\",value:function addAction(addType){console.log(\"added item or items: \",addType);switch(addType){case\"add-attribute\":return/*#__PURE__*/React.createElement(React.Fragment,null);case\"add-products\":return/*#__PURE__*/React.createElement(React.Fragment,null);}}//FOOTER ACTIONS\n},{key:\"switchToEditMode\",value:function switchToEditMode(){if(this.dataGridRef.current!==null&&this.dataGridRef.current!==undefined){this.dataGridRef.current.switchToEditMode();}}//MODALS modalStateType = \"closed\" | \"add-to-product-group\" | \"create-product-group\" | \"delete-confirmation\";\n},{key:\"manageModals\",value:function manageModals(modalState){console.log(\"close the dang modal!!!!\",modalState);this.setState({modalState:modalState});}},{key:\"getModals\",value:function getModals(){var _this4=this;switch(this.state.modalState){case\"add-to-product-group\":return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ModalView,{closeModalFunc:function closeModalFunc(){return _this4.manageModals(\"closed\");},modalTitle:\"\"},/*#__PURE__*/React.createElement(AddVariantsWizard,{addAction:dataManagerMain.addToProductGroup,groups:dataManagerMain.getGroups(),selectedCheckBoxes:this.getCheckBoxesSelection(),manageModal:function manageModal(){return _this4.manageModals(\"closed\");}})));case\"create-product-group\":return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ModalView,{closeModalFunc:function closeModalFunc(){return _this4.manageModals(\"closed\");},modalTitle:\"\"},/*#__PURE__*/React.createElement(CreateProductGroupWizard,{addAction:dataManagerMain.addToProductGroup,groups:dataManagerMain.getGroups(),selectedCheckBoxes:this.getCheckBoxesSelection(),manageModal:function manageModal(){return _this4.manageModals(\"closed\");}})));}}//SELECTION ACTIONS from grid\n},{key:\"render\",//RENDERING AND PORTALS\nvalue:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(DataGridWithEditDrawer,{gridData:dataManagerMain.getProductData(),columnsData:dataManagerMain.getProductColumns(),dataManager:dataManagerMain,targetDataSet:\"product-data\",selectionActions:[this.openFooter],ref:this.dataGridRef,gridHasDetailsButton:true}),this.getEditDrawer(),this.getFooterMenu(),this.getProductViewDrawer(),this.getModals());}}]);return CatalogDetailsView;}(React.Component);","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/catalog-views/catalog-details/catalog-details-view.tsx"],"names":["React","CatmanIcon","catmanData","StickyThing","toolTipContent","AppButton","CatalogSingleProduct","TextInput","ModalView","AddVariantsWizard","dataManagerMain","CreateProductGroupWizard","DataGridWithEditDrawer","CatalogDetailsView","props","workingDataSet","initialized","dataGridRef","createRef","editDrawerRef","editDrawer","selectionSet","columns","drawerFirstOpen","drawerInputsLength","inputsControls","closeSingleProductEdit","window","history","back","updateValues","row","cell","value","colName","current","undefined","console","log","i","length","columnName","myRow","myCell","updateSet","newData","gridData","setData","setState","workingData","getProductData","state","inputFocusAction","editDrawerOpen","focusedInput","openFooter","checkedCount","getCheckedRows","footerOpen","columnsData","getProductColumns","productViewOpen","editDrawerMaximized","footerMode","modalState","query","columnLabel","shiftIndex","inputs","document","getElementsByClassName","focus","select","selectedItems","j","productDataItem","productData","push","input","getColumnLabel","shiftFocus","maximize","valueCheck","restoreAndMaximizeTooltip","maximizeDrawer","restoreDrawer","restoreAndMaximizeBtnIcon","drawer","maximizeEditDrawer","closeEditDrawer","closeDrawer","clearSelection","footer","buttons","switchToEditMode","footerEditSelection","manageModals","footerAddVariant","footerActions","footerDelete","footerCreateVariant","mainNav","buttonBar","action","addType","addToProductGroup","getGroups","getCheckBoxesSelection","getEditDrawer","getFooterMenu","getProductViewDrawer","getModals","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {Navigation} from \"../../../view-components/list-menu/intra-app-navigation\";\nimport {MainHeaderArea} from \"../../_common/main-header-area/main-header-area\";\n\n//Configuration data:\nimport {mainNavConfig} from \"../../_catman-configuration/common-app-configuration\";\nimport {CatmanIcon} from \"../../../svg/icons/icons\";\nimport {ToolTipContent} from \"../../../view-components/heru-tool-tip/tool-tip-content\";\nimport {DataGrid, selectionObject} from \"../../../view-components/data-grid/data-grid\";\nimport {catmanData} from \"../../../_sample-data/products-data\";\nimport {TitleArea} from \"../../../view-components/title-area/title-area\";\nimport {Route, RouteComponentProps, Switch, useRouteMatch} from \"react-router-dom\";\nimport StickyThing from \"../../../view-components/sticky-panel/sticky-panel\";\nimport {ReactElement} from \"react\";\nimport {iDataGridItem} from \"../../../_catman-data-types\";\nimport {toolTipContent} from \"../../tool-tip-content/content-tool-tips\";\nimport AppButton from \"../../../view-components/button/app-button\";\nimport {iColumn} from \"../../../_catman-data-types\";\nimport {CatalogSingleProduct} from \"./single-product-view\";\nimport {TextInput} from \"../../../view-components/text-input/text-input\";\n\nimport {DataManager, dataSetType, iUpdateSet} from \"../../../data-components/data-manager/data-manager\";\nimport {ModalView} from \"../../../view-components/modal/modal\";\nimport {AddVariantsWizard} from \"../../wizards/create-product-group/add-variants-wizard\";\nimport {dataManagerMain} from \"../../../index\";\n\nimport {CreateProductGroupWizard} from \"../../wizards/create-product-group/create-product-group-wizard\";\nimport {DataGridWithEditDrawer} from \"../../../view-components/data-grid/data-grid-with-edit-drawer\";\n\n\ninterface iPROPS   {\n    message: string;\n    query:string | null;\n    gridData : DataManager;\n    columnsData : DataManager;\n    targetDataSet : dataSetType;\n}\n\nexport type modalStateType = \"closed\" | \"add-to-product-group\" | \"create-product-group\" | \"delete-confirmation\";\n//TODO need to make these types into a definitions file\nexport type focusInputType = { row : number, cell : number, editDrawerOpen : boolean};\n\ninterface iSTATE{\n    productViewOpen : boolean;\n    editDrawerOpen : boolean;\n    editDrawerMaximized : boolean;\n    modalState : modalStateType;\n    footerOpen : boolean;\n    footerMode : \"default\" | \"has-group\" | \"no-group\" | \"multiple-selected\" ;\n    selectionSet : selectionObject[];\n    workingData : iDataGridItem[][];\n    columnsData : iColumn[];\n    focusedInput : focusInputType;\n}\n\nexport class CatalogDetailsView extends React.Component<iPROPS, iSTATE>{\n     constructor(props:iPROPS) {\n         super(props);\n         this.columns = this.props.columnsData.getProductColumns();\n         this.state = {\n             workingData : this.props.gridData.getProductData(),\n             columnsData : this.props.columnsData.getProductColumns(),\n             productViewOpen : false,\n             editDrawerOpen : false,\n             editDrawerMaximized : false,\n             footerOpen : false,\n             footerMode : \"default\",\n             selectionSet : [],\n             modalState : \"closed\",\n             focusedInput : { row:0, cell:0, editDrawerOpen : false}\n         };\n\n         this.workingDataSet = this.props.gridData.getProductData();\n     }\n     workingDataSet : iDataGridItem[][];\n     //just for the fist launch of checkbox editing\n     initialized:boolean = false;\n     dataGridRef = React.createRef<DataGridWithEditDrawer>();\n     editDrawerRef = React.createRef<StickyThing>();\n     editDrawer : ReactElement = (<></>);\n     selectionSet : selectionObject[] = [];\n     columns : iColumn[];\n     //manage selection in the drawer\n     drawerFirstOpen = false;\n     drawerInputsLength = 0;\n     inputsControls: any;\n\n\n    getCheckBoxesSelection(){\n        if(this.dataGridRef.current !== null && this.dataGridRef.current !== undefined){\n            return this.dataGridRef.current.getCheckedRows();\n        }\n    }\n\n     closeSingleProductEdit = ()=>{\n        window.history.back();\n    };\n\n     getProductViewDrawer( ){\n         if(this.props.query != \"none\" && this.props.query != null && this.props.query != undefined ){\n\n             return(\n                 <StickyThing\n                     enterFromThisSide=\"right\"\n                     lastResortClasses={\"product-view\"}\n                     animateIn={true}\n                     heightIncludeUnits=\"100vh\"\n                     widthIncludeUnits={\"100vw\"}\n                     stickyOpen={true}\n                     bgColor={\"#CECECE\"}\n                     doAnimation={true}\n                 >\n                    <CatalogSingleProduct\n                        uniqueID={this.props.query}\n                        productData={this.state.workingData}\n                        closeSingleProduct={this.closeSingleProductEdit}\n                    />\n\n                 </StickyThing>\n             )\n         }\n     }\n\n     getColumnLabel(colName : string) : string{\n         //utility method for getting column data obj from\n         let columnLabel = \"\";\n         for(let i = 0; i < this.columns.length; i++){\n             if(this.columns[i].columnName === colName){\n                 columnLabel = this.columns[i].columnLabel;\n             }\n         }\n         return columnLabel;\n     }\n\n     updateValues=(row : number, cell:number, value:string, colName : string)=>{\n         if(this.dataGridRef.current != null && this.dataGridRef.current != undefined ){\n             this.selectionSet = this.dataGridRef.current.selectionSet;\n             console.log(\"cat details view selection set: \", this.selectionSet)\n         }\n         console.log(\"inside drawer\", value, \" col name:\", colName);\n         //the minus 2 is the offset for the extra columns checkbox and edit\n         for(let i =0; i < this.selectionSet.length; i++){\n             if(this.selectionSet[i].columnName === colName){\n                 let myRow = this.selectionSet[i].row-2;\n                 let myCell = this.selectionSet[i].cell-2;\n\n                 //this.workingDataSet[ myRow-2][myCell-2].value = value;\n                 const updateSet : iUpdateSet = { row:myRow ,cell:myCell, newData:value }\n                 //this.props.gridData.setProductData = updateSet\n                 this.props.gridData.setData(\"product-data\", updateSet)\n             }\n\n         }\n\n         //TODO remove all of these .getProductData() and replace with generic version\n         this.setState({workingData : this.props.gridData.getProductData()});\n         console.log( \"working data set:\", this.state.workingData );\n     };\n\n     inputFocusAction=(row : number, cell:number)=>{\n         //console.log(\"row: \", row, \" cell:\", cell);\n         if(this.state.editDrawerOpen === true){\n             this.setState({focusedInput : { row : row, cell : cell, editDrawerOpen: this.state.editDrawerOpen}})\n         }\n     };\n\n     //TODO this should be a generic method\n     shiftFocus(shiftIndex: number){\n\n         console.log(\"shifted focus: \", shiftIndex);\n             let inputs: HTMLCollection = document.getElementsByClassName(\"InputBox\");\n             if(inputs[0] != undefined){\n                 if(shiftIndex === inputs.length-1){\n                     console.log(\"shifted focus on end\");\n                     // @ts-ignore\n                     inputs[0].focus();\n                     // @ts-ignore\n                     inputs[0].select();\n                 }\n         }\n     };\n\n     getEditDrawer():ReactElement{\n\n         if(this.state.editDrawerOpen === false){\n             return(<></>);\n         }\n\n         if(this.dataGridRef.current != null && this.dataGridRef.current != undefined ){\n             this.selectionSet = this.dataGridRef.current.selectionSet;\n            // console.log(\"cat details view selection set: \", this.selectionSet)\n         }\n\n         let inputs : ReactElement[] = [];\n         let selectedItems : iDataGridItem[] = [];\n\n         //Create list of selection items that need inputs (i.e. one input per column)\n        i: for(let i=0; i < this.selectionSet.length; i++){\n           j: for(let j=0; j < selectedItems.length; j++){\n                if(this.selectionSet[i].columnName === selectedItems[j].columnName){\n                    continue i;\n                }\n            }\n                 let row = this.selectionSet[i].row;\n                 let cell = this.selectionSet[i].cell;\n                 //TODO this needs to be genericized\n                 //let productDataItem = catmanData.productData[row-2][cell-2];\n                 let productDataItem = catmanData.productData[row-2][cell-2];\n                 selectedItems.push(productDataItem);\n        }\n\n        //Store number of inputs for later use\n         this.drawerInputsLength = selectedItems.length;\n\n         for( let i=0; i < selectedItems.length; i++){\n             let input = (\n                 <TextInput\n                     row={this.selectionSet[i].row}\n                     cell={this.selectionSet[i].cell}\n                     columnName={this.selectionSet[i].columnName}\n                     label={this.getColumnLabel( selectedItems[i].columnName )}\n                     currentValue={ selectedItems[i].value}\n                     onChangeAction={this.updateValues}\n                     onFocusAction={this.inputFocusAction}\n                     onBlurActions={[ ()=>this.shiftFocus(i) ]}\n                 />\n             );\n             inputs.push(input)\n         }\n\n        let maximize = (valueCheck : boolean)=>{\n             if(valueCheck === true){\n                 return \"maximized\"\n             }else{\n                 return \"catman-edit-default restored\"\n             }\n        };\n\n         let restoreAndMaximizeTooltip = (valueCheck : boolean)=>{\n            if(valueCheck === false){\n                return toolTipContent.maximizeDrawer();\n            }else{\n                return toolTipContent.restoreDrawer();\n            }\n         };\n\n         let restoreAndMaximizeBtnIcon = (valueCheck : boolean)=>{\n             if(valueCheck === false){\n                 return \"icon-maximize\"\n             }else{\n                 return \"icon-restore-btn\"\n             }\n         }\n\n\n         let drawer = (<></>);\n             if(this.state.editDrawerOpen === true){\n                 drawer = (\n                     <>\n                         <StickyThing\n                             ref = {this.editDrawerRef}\n                             enterFromThisSide=\"bottom\"\n                             lastResortClasses={`catman-edit-drawer ${maximize(this.state.editDrawerMaximized)}`}\n                             animateIn={true}\n                             heightIncludeUnits=\"\"\n                             widthIncludeUnits={\"\"}\n                             stickyOpen={true}\n                             bgColor={\"#CECECE\"}\n                             doAnimation={true}\n                             toolBar=\"none\"\n                         >\n                             <div className={\"tool-bar\"}>\n                                 <div></div>\n                                 <div className=\"drawer-controls\">\n                                      <AppButton\n                                         buttonType={\"secondary-action\"}\n                                         buttonLabel=\"\"\n                                         OnClick={()=>this.maximizeEditDrawer()}\n                                         tooltipType=\"custom\"\n                                         tooltip={restoreAndMaximizeTooltip(this.state.editDrawerMaximized)}\n                                         toolTipTimeOutInMS={10000}\n                                         classes=\"tool-bar-btn icon-only-btn\"\n                                         iconLeft={\n                                             <CatmanIcon\n                                                 iconName={`${restoreAndMaximizeBtnIcon(this.state.editDrawerMaximized)}`}\n                                                 classes=\" \"\n                                                 height=\"100%\"\n                                                 width=\"100%\"\n                                             />\n                                         }\n                                     />\n                                     <AppButton\n                                         buttonType={\"secondary-action\"}\n                                         buttonLabel=\"\"\n                                         OnClick={()=>this.closeEditDrawer()}\n                                         tooltipType=\"custom\"\n                                         tooltip={toolTipContent.closeDrawer()}\n                                         toolTipTimeOutInMS={10000}\n                                         classes=\"icon-only-btn\"\n                                         iconLeft={\n                                             <CatmanIcon\n                                                 iconName=\"icon-close\"\n                                                 classes=\" \"\n                                                 height=\"100%\"\n                                                 width=\"100%\"\n                                             />\n                                         }\n                                     />\n\n                                 </div>\n                             </div>\n\n                             <div className=\"drawer-edit-area\">\n                                 {inputs}\n                             </div>\n                         </StickyThing>\n                     </>\n                 );\n             }\n         return drawer;\n     }\n\n     maximizeEditDrawer(){\n         this.setState({editDrawerMaximized : !this.state.editDrawerMaximized})\n     }\n\n     closeEditDrawer(){\n         this.setState({\n             editDrawerOpen : false,\n             editDrawerMaximized : false,\n             focusedInput : {row:0, cell:0, editDrawerOpen:false}\n         });\n         if(this.dataGridRef.current != null && this.dataGridRef.current != undefined){\n             this.dataGridRef.current.clearSelection();\n         }\n         this.drawerFirstOpen = false;\n     }\n\n     openEditDrawer( ){\n         this.drawerFirstOpen = true;\n         this.setState({editDrawerOpen : true});\n     }\n\n     //FOOTER RELATED\n     getFooterMenu(){\n        let footer = (<></>);\n        let buttons = (<></>);\n\n        switch(this.state.footerMode){\n            case \"default\":\n                buttons = (\n                    <div className=\"footer-btn-bar catman-footer\">\n                        <AppButton\n                            classes={\"separate-left\"}\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Edit Selected\"\n                            OnClick={()=>this.switchToEditMode()}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerEditSelection()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-edit\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            classes={\" \"}\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Add Variant\"\n                            OnClick={()=>this.manageModals(\"add-to-product-group\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerAddVariant()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-add\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Clear Selection\"\n                            OnClick={()=>this.footerActions(\"cancel\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.clearSelection()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"clear\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Delete Selected\"\n                            OnClick={()=>this.footerActions(\"cancel\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerDelete()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-delete\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n\n\n                    </div>\n                );\n                break;\n\n            case \"multiple-selected\":\n                buttons = (\n                    <div className=\"footer-btn-bar catman-footer\">\n                        <AppButton\n                            classes={\"\"}\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Edit Selected\"\n                            OnClick={()=>this.switchToEditMode()}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerEditSelection()}\n                            toolTipTimeOutInMS={10000}\n                            tooltipXOffset={0}\n                            tooltipYOffset={20}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-edit\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            classes={\" \"}\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Make Into a Variant Group\"\n                            OnClick={()=>this.manageModals(\"create-product-group\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerCreateVariant()}\n                            toolTipTimeOutInMS={10000}\n                            tooltipXOffset={0}\n                            tooltipYOffset={20}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-add\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Clear Selection\"\n                            OnClick={()=>this.footerActions(\"cancel\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.clearSelection()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"clear\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                        <AppButton\n                            buttonType={\"secondary-action\"}\n                            buttonLabel=\"Delete Selected\"\n                            OnClick={()=>this.footerActions(\"cancel\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.footerDelete()}\n                            toolTipTimeOutInMS={10000}\n                            iconLeft={\n                                <CatmanIcon\n                                    iconName=\"icon-delete\"\n                                    classes=\" \"\n                                    height=\"100%\"\n                                    width=\"100%\"\n                                />\n                            }\n                        />\n                    </div>\n                );\n                break;\n\n            case \"has-group\":\n                buttons = (<AppButton\n                    buttonType={\"secondary-action\"}\n                    buttonLabel=\" \"\n                    OnClick={()=>this.footerActions(\"cancel\")}\n                    tooltipType=\"custom\"\n                    tooltip={toolTipContent.mainNav()}\n                    toolTipTimeOutInMS={10000}\n                    iconRight={\n                        <CatmanIcon\n                            iconName=\"down-arrow\"\n                            classes=\"ui-icon\"\n                            height=\"100%\"\n                            width=\"100%\"\n                        />\n                    }\n                />)\n        }\n\n        if(this.state.footerOpen === true){\n\n            let buttonBar : ReactElement = (<>\n            </>);\n\n            footer = (\n                <>\n                    <StickyThing\n                        enterFromThisSide=\"bottom\"\n                        lastResortClasses={\"catman-footer-container\"}\n                        animateIn={true}\n                        heightIncludeUnits=\"3.75rem\"\n                        widthIncludeUnits={\"100%\"}\n                        stickyOpen={true}\n                        bgColor={\"rgba(0,0,0,0)\"}\n                        doAnimation={true}\n                    >\n                        {buttons}\n                    </StickyThing>\n                </>\n            );\n        }\n        return footer;\n    }\n\n     footerActions(action : \"cancel\" | \"add-group\" | \"edit\"){\n         switch (action) {\n\n             case \"cancel\":\n                 this.setState({footerOpen : false});\n                 this.initialized = false;\n                 if(this.dataGridRef.current !== null && this.dataGridRef.current !== undefined){\n                     this.dataGridRef.current.clearSelection();\n                 }\n                 break;\n             case \"add-group\":\n\n                 break;\n             case \"edit\":\n                 this.setState({footerOpen : false});\n                 this.initialized = false;\n\n                 break;\n         }\n     }\n\n     addAction(addType:string){\n         console.log(\"added item or items: \", addType );\n         switch (addType) {\n             case \"add-attribute\":\n\n                 return(<></>);\n             case \"add-products\":\n\n                 return(<></>);\n\n\n\n         }\n     }\n\n        //FOOTER ACTIONS\n     switchToEditMode(){\n         if(this.dataGridRef.current !== null && this.dataGridRef.current !== undefined){\n             this.dataGridRef.current.switchToEditMode();\n         }\n     }\n\n     //MODALS modalStateType = \"closed\" | \"add-to-product-group\" | \"create-product-group\" | \"delete-confirmation\";\n    manageModals(modalState : modalStateType){\n         console.log(\"close the dang modal!!!!\", modalState);\n          this.setState({modalState : modalState});\n    }\n\n     getModals(){\n\n         switch(this.state.modalState){\n             case \"add-to-product-group\":\n                 return(\n                 <>\n                     <ModalView\n                         closeModalFunc={()=>this.manageModals(\"closed\")}\n                         modalTitle=\"\"\n                     >\n                        <AddVariantsWizard\n                            addAction={dataManagerMain.addToProductGroup}\n                            groups={dataManagerMain.getGroups()}\n                            selectedCheckBoxes={this.getCheckBoxesSelection()}\n                            manageModal = {()=>this.manageModals(\"closed\")}\n                        />\n\n                     </ModalView>\n                 </>\n\n                     );\n             case \"create-product-group\":\n                 return(\n                     <>\n                         <ModalView\n                             closeModalFunc={()=>this.manageModals(\"closed\")}\n                             modalTitle=\"\"\n                         >\n                             <CreateProductGroupWizard\n                                 addAction={dataManagerMain.addToProductGroup}\n                                 groups={dataManagerMain.getGroups()}\n                                 selectedCheckBoxes={this.getCheckBoxesSelection()}\n                                 manageModal = {()=>this.manageModals(\"closed\")}\n                             />\n\n                         </ModalView>\n                     </>\n\n                  )\n         }\n     }\n\n     //SELECTION ACTIONS from grid\n    openFooter = ()=>\n    {\n\n        if(this.dataGridRef.current != undefined)\n        {\n            let checkedCount : number = 0;\n\n\n            if(this.dataGridRef.current.getCheckedRows() != undefined && this.dataGridRef.current != undefined ){\n                // @ts-ignore\n                checkedCount = this.dataGridRef.current.getCheckedRows().length;\n            }\n            if\n            (checkedCount > 0)\n            {\n                console.log(\"checked from selection Actions: \", checkedCount);\n                this.setState({footerOpen : true});\n            }\n            else if\n            (checkedCount === 0)\n            {\n                this.setState({footerOpen : false});\n            }\n        }\n    };\n\n     //RENDERING AND PORTALS\n\n\n    render(){\n         return (\n             <>\n                 <DataGridWithEditDrawer\n                     gridData={dataManagerMain.getProductData()}\n                     columnsData={dataManagerMain.getProductColumns()}\n                     dataManager={dataManagerMain}\n                     targetDataSet={\"product-data\"}\n                     selectionActions={[ this.openFooter ]}\n                     ref={this.dataGridRef}\n                     gridHasDetailsButton={true}\n                 />\n                 {this.getEditDrawer() }\n                 {this.getFooterMenu() }\n                 {this.getProductViewDrawer()}\n                 {this.getModals()}\n                 {/*<button onClick={()=>this.switchToEditMode()}>Switch</button>*/}\n             </>\n         )\n     }\n}\n"]},"metadata":{},"sourceType":"module"}