{"ast":null,"code":"import * as React from \"react\";\nexport class Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  sortNavItems() {\n    let groupedItems = [];\n    groupedItems.push([this.props.navElements[0]]); //loop over each group to see if our element matches, if not we'll create a new group\n\n    for (let h = 0; h < groupedItems.length; h++) {\n      //we'll start at one since we already pushed the first at zero\n      for (let i = 1; i < this.props.navElements.length; i++) {\n        if (groupedItems[h][0].presentationGroup === this.props.navElements[i].presentationGroup) {\n          groupedItems[h].push(this.props.navElements[i]);\n        } else {\n          if (h === groupedItems.length) {\n            groupedItems.push([this.props.navElements[i]]);\n          }\n        }\n      }\n    }\n\n    return groupedItems;\n  }\n\n  createElements() {\n    let items = this.sortNavItems();\n    console.log(\"grouped items: \", items);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.createElements());\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/intra-app-navigation/intra-app-navigation.tsx"],"names":["React","Navigation","Component","constructor","props","sortNavItems","groupedItems","push","navElements","h","length","i","presentationGroup","createElements","items","console","log","render"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAkBA,OAAO,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyD;AAC5DC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;AACH;;AAEDC,EAAAA,YAAY,GAAiB;AACzB,QAAIC,YAA2B,GAAG,EAAlC;AACAA,IAAAA,YAAY,CAACC,IAAb,CAAkB,CAAC,KAAKH,KAAL,CAAWI,WAAX,CAAuB,CAAvB,CAAD,CAAlB,EAFyB,CAIzB;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGH,YAAY,CAACI,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC;AACA,WAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAG,KAAKP,KAAL,CAAWI,WAAX,CAAuBE,MAAxC,EAAgDC,CAAC,EAAjD,EAAoD;AAChD,YAAIL,YAAY,CAACG,CAAD,CAAZ,CAAgB,CAAhB,EAAmBG,iBAAnB,KAAyC,KAAKR,KAAL,CAAWI,WAAX,CAAuBG,CAAvB,EAA0BC,iBAAvE,EAA0F;AACtFN,UAAAA,YAAY,CAACG,CAAD,CAAZ,CAAgBF,IAAhB,CAAqB,KAAKH,KAAL,CAAWI,WAAX,CAAuBG,CAAvB,CAArB;AACH,SAFD,MAEK;AACD,cAAGF,CAAC,KAAKH,YAAY,CAACI,MAAtB,EAA6B;AACzBJ,YAAAA,YAAY,CAACC,IAAb,CAAkB,CAAC,KAAKH,KAAL,CAAWI,WAAX,CAAuBG,CAAvB,CAAD,CAAlB;AACH;AACJ;AACJ;AACJ;;AAED,WAAOL,YAAP;AACH;;AAEDO,EAAAA,cAAc,GAAE;AACZ,QAAIC,KAAK,GAAG,KAAKT,YAAL,EAAZ;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAA/B;AACH;;AAEDG,EAAAA,MAAM,GAAE;AAGJ,wBAAQ,0CACH,KAAKJ,cAAL,EADG,CAAR;AAGH;;AArC2D","sourcesContent":["import * as React from \"react\";\nimport {ReactElement} from \"react\";\n\nexport interface iNavItem{\n    label : string;\n    navPath : string;\n    presentationGroup : string;\n    infoPanel? : ReactElement\n}\n\ninterface iPROPS {\n    navElements : iNavItem[]\n}\n\ninterface iSTATE{\n    \n}\n\nexport class Navigation extends React.Component<iPROPS, iSTATE> {\n    constructor(props:iPROPS) {\n        super(props)\n    }\n\n    sortNavItems() : iNavItem[][]{\n        let groupedItems : iNavItem[][] = [];\n        groupedItems.push([this.props.navElements[0]]);\n\n        //loop over each group to see if our element matches, if not we'll create a new group\n        for(let h=0; h < groupedItems.length; h++){\n            //we'll start at one since we already pushed the first at zero\n            for(let i=1; i < this.props.navElements.length; i++){\n                if( groupedItems[h][0].presentationGroup === this.props.navElements[i].presentationGroup ){\n                    groupedItems[h].push(this.props.navElements[i]);\n                }else{\n                    if(h === groupedItems.length){\n                        groupedItems.push([this.props.navElements[i]]);\n                    }\n                }\n            }\n        }\n\n        return groupedItems;\n    }\n\n    createElements(){\n        let items = this.sortNavItems()\n        console.log(\"grouped items: \", items);\n    }\n\n    render(){\n\n\n        return (<>\n            {this.createElements()}\n        </>);\n    }\n}"]},"metadata":{},"sourceType":"module"}