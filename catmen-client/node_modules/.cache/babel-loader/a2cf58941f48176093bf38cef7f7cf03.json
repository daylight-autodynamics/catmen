{"ast":null,"code":"import _classCallCheck from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import AppButton from\"../button/app-button\";import{CatmanIcon}from\"../../svg/icons/icons\";import{Tile}from\"../tiles/tile-component\";import{toolTipContent}from\"../../views/tool-tip-content/content-tool-tips\";import{ToolTipContent}from\"../heru-tool-tip/tool-tip-content\";//data grid data should be an array of arrays\n//each product is an array of attributes\nexport var DataGrid=/*#__PURE__*/function(_React$Component){_inherits(DataGrid,_React$Component);var _super=_createSuper(DataGrid);function DataGrid(props){var _this;_classCallCheck(this,DataGrid);_this=_super.call(this,props);_this.selectionSet=[];_this.selectedCells=[];_this.numCols=void 0;_this.numRows=void 0;_this.startSelectionRow=void 0;_this.startSelectionCell=void 0;_this.cellRange=void 0;_this._checkedRows=[];_this.iconCheck=function(row){for(var i=0;i<_this.state.checkedRows.length;i++){if(row===_this.state.checkedRows[i]){return\"checkbox-checked\";}}return\"checkbox-unchecked\";};_this.updateSelectionState=function(){_this.setState({selectionSet:_this.selectionSet});};_this.state={workingDataSet:_this.props.data,selectionSet:[],checkedRows:[],hoveredRow:\"\"};_this.startSelectionRow=0;_this.startSelectionCell=0;_this.cellRange={startCell:0,endCell:0,startRow:0,endRow:0};_this.numCols=_this.getNumColumns();_this.numRows=_this.getNumRows();return _this;}_createClass(DataGrid,[{key:\"manageSelection\",value:function manageSelection(row,cell,columnName,clearSelection){if(clearSelection){this.selectionSet=[];this._checkedRows=[];}if(this.startSelectionRow>row){this.cellRange.startRow=row;this.cellRange.endRow=this.startSelectionRow;}else{this.cellRange.startRow=this.startSelectionRow;this.cellRange.endRow=row;}if(this.startSelectionCell>cell){this.cellRange.startCell=cell;this.cellRange.endCell=this.startSelectionCell;}else{this.cellRange.startCell=this.startSelectionCell;this.cellRange.endCell=cell;}if(row===this.startSelectionRow&&cell===this.startSelectionCell){this.selectionSet.push({row:row,cell:cell,selected:true,columnName:this.props.columnsData[cell-2].columnName//columnName : appColumns.getColumns[cell-2].columnName\n});}for(var i=this.cellRange.startRow;i<this.cellRange.endRow+1;i++){for(var j=this.cellRange.startCell;j<this.cellRange.endCell+1;j++){this.selectionSet.push({row:i,cell:j,selected:true,columnName:this.props.columnsData[j-2].columnName});}}// handle single cell as start and end\nconsole.log(\"@@@ this.selectionSet: \",this.selectionSet);console.log(\"*** this.state.selectionSet: \",this.state.selectionSet);if(this.selectionSet.length===2){if(this.selectionSet[0].row===this.selectionSet[1].row&&this.selectionSet[0].cell===this.selectionSet[1].cell){this.selectionSet.splice(1,1);}}this.setState({selectionSet:this.selectionSet,checkedRows:this._checkedRows});if(this.props.selectionCallback!==undefined&&this.props.selectionCallback!==null){var selectedItems=[];var lastRow=0;// work through the selection set to organize things\ni:for(var _i=0;_i<this.selectionSet.length;_i++){if(_i===0){//if it's the first one let's create a new entry\nlastRow=this.selectionSet[0].row;var newItem={row:lastRow,cells:[],productFields:[]};selectedItems.push(newItem);}//loop over the existing list of rows to create new ones\nif(this.selectionSet[_i].row===lastRow){//one more loop over the list to grab all the cells that belong to the row\nif(selectedItems[selectedItems.length-1].cells.length===0){for(var _j=0;_j<this.selectionSet.length;_j++){if(this.selectionSet[_j].row===lastRow){//if the row matches the last row, then push in the selected cell\nselectedItems[selectedItems.length-1].cells.push(this.selectionSet[_j].cell);}}}}else{lastRow=this.selectionSet[_i].row;var _newItem={row:lastRow,cells:[],productFields:[]};selectedItems.push(_newItem);}}for(var x=0;x<selectedItems.length;x++){for(var y=0;y<this.state.workingDataSet[selectedItems[x].row-2].length;y++){selectedItems[x].productFields.push(this.state.workingDataSet[selectedItems[x].row-2][y]);}}this.props.selectionCallback(selectedItems,this._checkedRows,\"standard-launch\");}}},{key:\"clearSelection\",value:function clearSelection(){this.setState({selectionSet:[],checkedRows:[]});this._checkedRows=[];this.selectionSet=[];}},{key:\"checkSelected\",value:function checkSelected(row,cell){for(var i=0;i<this.state.selectionSet.length;i++){if(this.state.selectionSet[i].row===row&&this.state.selectionSet[i].cell===cell){return\"selected\";}}//if nothing is found, return false because it isn't selected\nreturn\"\";}},{key:\"getNumColumns\",value:function getNumColumns(){//TODO swap this out to calculating total normalized columns\nreturn this.props.columnsData.length;}},{key:\"getNumRows\",value:function getNumRows(){if(this.state.workingDataSet.length>0){return this.state.workingDataSet.length;}else{return this.props.data.length;}}},{key:\"getProductUniqueID\",value:function getProductUniqueID(index){for(var j=0;j<this.state.workingDataSet[index].length;j++){if(this.state.workingDataSet[index][j].columnName===\"uniqueID\"){return this.state.workingDataSet[index][j].value;}}}},{key:\"mouseDownAction\",value:function mouseDownAction(row,cell){this.startSelectionCell=cell;this.startSelectionRow=row;}},{key:\"mouseUpAction\",value:function mouseUpAction(row,cell,columnName){//console.log(\"@@@check\", row, \" \", cell, \" \", columnName);\nthis.manageSelection(row,cell,columnName,true);console.log(\"selection set: \",this.selectionSet);}},{key:\"hoverRowAction\",value:function hoverRowAction(row){this.setState({hoveredRow:row.toString()});}},{key:\"moueOutRowAction\",value:function moueOutRowAction(){this.setState({hoveredRow:\"\"});}},{key:\"manageCheckbox\",value:function manageCheckbox(row){//find if this number is in the list\nvar found=false;console.log(\"@@ checked rows: \",row);for(var i=0;i<this._checkedRows.length;i++){if(this._checkedRows[i]===row){//if it is in the list remove it which unchecks\nthis._checkedRows.splice(i,1);this.setState({checkedRows:this._checkedRows});found=true;}}if(found===false){this._checkedRows.push(row);this.setState({checkedRows:this._checkedRows});}//handle selecting the checked\n//First reset the cell selection\nthis.selectionSet=[];for(var _i2=0;_i2<this._checkedRows.length;_i2++){for(var j=0;j<this.state.workingDataSet[this._checkedRows[_i2]].length;j++){var selectedCell={row:this._checkedRows[_i2]+2,cell:j+2,selected:true,columnName:this.props.columnsData[j].columnName};this.selectionSet.push(selectedCell);}}this.setState({selectionSet:this.selectionSet});if(this.props.selectionCallback!==undefined){this.props.selectionCallback(this.state.selectionSet,this.state.checkedRows,\"checkbox-launched\");}//once people use the tool, we can hide the tool tip\ntoolTipContent.showSelectRow=false;}},{key:\"switchToEditModeFromCheckBoxMode\",value:function switchToEditModeFromCheckBoxMode(){//handle switching from checkbox mode to cell selection mode\n//First reset the cell selection\nconsole.log(\"switch to edit mode\");// for(let i=0; i < this._checkedRows.length; i++){\n//     for(let j=0; j < this.state.workingDataSet[this._checkedRows[i]].length; j++ ){\n//         let selectedCell : selectionObject = {\n//             row : this._checkedRows[i]+2,\n//             cell : j+2,\n//             selected : true,\n//             columnName : this.props.columnsData[j].columnName\n//         };\n//         this.selectionSet.push(selectedCell);\n//     }\n// }\nthis._checkedRows=[];this.setState({checkedRows:this._checkedRows});console.log(\"switch to edit mode\",this.selectionSet);console.log(\"switch to edit mode\",this.state.selectionSet);if(this.props.selectionCallback!==undefined){this.props.selectionCallback(this.state.selectionSet,this.state.checkedRows,\"checkbox-launched\");}}},{key:\"getGridItems\",value:function getGridItems(){var _this2=this;var cells=[];var _loop=function _loop(i){var _loop2=function _loop2(j){if(j===0){cells.push(/*#__PURE__*/React.createElement(\"div\",{id:\"row-\".concat(i+2,\"-start\"),className:\"cell checkbox-main \",style:{gridColumn:j+1,gridRow:i+2,zIndex:100+(_this2.numRows-i)}},/*#__PURE__*/React.createElement(AppButton,{OnClick:function OnClick(){return _this2.manageCheckbox(i);},hoverActions:[function(){return _this2.hoverRowAction(i+2);}],buttonType:\"transparent-bg\",tooltipType:\"custom\",tooltip:toolTipContent.selectRow(),classes:\"\".concat(_this2.iconCheck(i)),iconCenter:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"\".concat(_this2.iconCheck(i)),width:\"100%\",height:\"100%\"})}),/*#__PURE__*/React.createElement(CatmanIcon,{classes:\"shading-l-r\",iconName:\"fader-left-to-right\",width:\"0.5rem\",height:\"100%\"})));}var cell=/*#__PURE__*/React.createElement(\"div\",{className:\"cell row-\".concat(i+2),style:{gridColumn:j+2,gridRow:i+2}},/*#__PURE__*/React.createElement(Tile,{tileType:_this2.props.columnsData[j].control,tileLabel:_this2.state.workingDataSet[i][j].value,hoverActions:[function(){return _this2.hoverRowAction(i+2);}],mouseOutActions:[function(){return _this2.moueOutRowAction();}],mouseDownActions:[function(){return _this2.mouseDownAction(i+2,j+2);}],mouseUpActions:[function(){return _this2.props.manageParentViews();},function(){return _this2.mouseUpAction(i+2,j+2,_this2.props.columnsData[j].columnName);}],selectedClass:_this2.checkSelected(i+2,j+2)}));if(_this2.props.columnsData[j].control!==\"hidden\"){cells.push(cell);}if(j===_this2.state.workingDataSet[i].length-1){cells.push(/*#__PURE__*/React.createElement(\"div\",{className:\"cell details\",style:{gridColumn:j+3,gridRow:i+2,zIndex:100+(_this2.numRows-i)}},/*#__PURE__*/React.createElement(AppButton,{buttonType:\"nav-link\",navPath:\"/catalog/spreadsheet?product=\".concat(_this2.getProductUniqueID(i)),tooltipType:\"custom\",tooltip:toolTipContent.singleProduct(),iconCenter:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"go-arrow\",width:\"1rem\",height:\"100%\"})}),/*#__PURE__*/React.createElement(CatmanIcon,{classes:\"shading\",iconName:\"fader-right-to-left\",width:\"0.5rem\",height:\"100%\"})));}};for(var j=0;j<_this2.state.workingDataSet[i].length;j++){_loop2(j);}};for(var i=0;i<this.state.workingDataSet.length;i++){_loop(i);}return cells;}},{key:\"getColumnHeaders\",value:function getColumnHeaders(){var _this3=this;var columnsHeads=[];var _loop3=function _loop3(i){if(i===0){columnsHeads.push(/*#__PURE__*/React.createElement(\"div\",{className:\"cell checkbox-main grid-header\",style:{gridColumn:i+1,gridRow:1,zIndex:120+_this3.numCols}},/*#__PURE__*/React.createElement(AppButton,{OnClick:function OnClick(){return _this3.manageCheckbox(i);},buttonType:\"transparent-bg\",tooltipType:\"custom\",tooltip:toolTipContent.selectRow(),classes:\" \",iconCenter:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"\".concat(_this3.iconCheck(i)),width:\"0.5rem\",height:\"100%\"})})));}var columnHeadTooltip=function columnHeadTooltip(tooltiptype,tooltip,header){switch(tooltiptype){case\"basic\":return/*#__PURE__*/React.createElement(ToolTipContent,{header:header,copy:tooltip,tooltipType:\"deluxe\",icon:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-add-invert\",classes:\"\",height:\"1.5rem\",width:\"1.5rem\"})});case\"custom\":return _this3.props.columnsData[i].toolTip;}return/*#__PURE__*/React.createElement(React.Fragment,null);};var columnHead=/*#__PURE__*/React.createElement(\"div\",{className:\"cell grid-header\",style:{gridColumn:i+2,gridRow:1,zIndex:_this3.numRows+100+i}},/*#__PURE__*/React.createElement(Tile,{tileType:\"column-header\",tileLabel:_this3.props.columnsData[i].columnLabel,toolTip:columnHeadTooltip(_this3.props.columnsData[i].tooltipType,_this3.props.columnsData[i].toolTip,_this3.props.columnsData[i].columnLabel),mouseDownActions:[],mouseUpActions:[function(){return _this3.props.manageParentViews();}],selectedClass:\"\"}));if(_this3.props.columnsData[i].control!=\"hidden\"){columnsHeads.push(columnHead);}//final column head action\nif(i===_this3.props.columnsData.length-1){columnsHeads.push(/*#__PURE__*/React.createElement(\"div\",{className:\"cell details grid-header\",style:{gridColumn:_this3.props.columnsData.length+2,gridRow:1,zIndex:200+_this3.numCols+2}},/*#__PURE__*/React.createElement(AppButton,{buttonType:\"button-custom\",classes:\"add-column\",navPath:\"/catalog/spreadsheet\",OnClick:function OnClick(){return _this3.props.addAction(\"add-attribute\");},tooltipType:\"custom\",tooltip:toolTipContent.insertColumn(),iconCenter:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-plus\",width:\"0.5rem\",height:\"100%\"})}),/*#__PURE__*/React.createElement(CatmanIcon,{classes:\"shading-l-r\",iconName:\"fader-right-to-left\",width:\"0.5rem\",height:\"100%\"})));}};for(var i=0;i<this.props.columnsData.length;i++){_loop3(i);}return columnsHeads;}},{key:\"gridStyles\",value:function gridStyles(){var style=\"\\n            .row-\".concat(this.state.hoveredRow,\" {\\n                background-color: #f4f4f5;                \\n            }\\n            \\n            .row-\").concat(this.state.hoveredRow,\" .cell-editable{\\n                z-index:100;\\n            }\\n            \\n            .row-\").concat(this.state.hoveredRow,\" p{\\n                    color: #473F4A  ;\\n            }\\n            \");return/*#__PURE__*/React.createElement(\"style\",{dangerouslySetInnerHTML:{__html:\"\".concat(style)}});}},{key:\"render\",value:function render(){var columnHeaders=this.getColumnHeaders();//having some trouble with layout of grid and checkboxes\n// style={{gridTemplateColumns : `1.5rem repeat(${this.getNumColumns().toString()}, max-content) 1rem`}}\nvar constructedGrid=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"data-grid \".concat(this.props.classes)},this.gridStyles(),/*#__PURE__*/React.createElement(\"div\",{className:\"viewport\"},columnHeaders,this.getGridItems())));return constructedGrid;}}]);return DataGrid;}(React.Component);","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/data-grid/data-grid.tsx"],"names":["React","AppButton","CatmanIcon","Tile","toolTipContent","ToolTipContent","DataGrid","props","selectionSet","selectedCells","numCols","numRows","startSelectionRow","startSelectionCell","cellRange","_checkedRows","iconCheck","row","i","state","checkedRows","length","updateSelectionState","setState","workingDataSet","data","hoveredRow","startCell","endCell","startRow","endRow","getNumColumns","getNumRows","cell","columnName","clearSelection","push","selected","columnsData","j","console","log","splice","selectionCallback","undefined","selectedItems","lastRow","newItem","cells","productFields","x","y","index","value","manageSelection","toString","found","selectedCell","showSelectRow","gridColumn","gridRow","zIndex","manageCheckbox","hoverRowAction","selectRow","control","moueOutRowAction","mouseDownAction","manageParentViews","mouseUpAction","checkSelected","getProductUniqueID","singleProduct","columnsHeads","columnHeadTooltip","tooltiptype","tooltip","header","toolTip","columnHead","columnLabel","tooltipType","addAction","insertColumn","style","__html","columnHeaders","getColumnHeaders","constructedGrid","classes","gridStyles","getGridItems","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport {iDataGridItem} from \"./data-types-for-data-grid\";\nimport AppButton from \"../button/app-button\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport {selectedStateType, Tile} from \"../tiles/tile-component\";\nimport {toolTipContent} from \"../../views/tool-tip-content/content-tool-tips\";\nimport camelcase from \"camelcase\";\nimport {appColumns, iColumn} from \"../../_sample-data/columns\";\nimport {DataManager} from \"../../data-components/data-manager/data-manager\";\nimport classesIllustration from \"../../images/SVG/illustration-classes.svg\";\nimport {ToolTipContent} from \"../heru-tool-tip/tool-tip-content\";\n\n//data grid data should be an array of arrays\n//each product is an array of attributes\ninterface iPROPS {\n    data : iDataGridItem[][];\n    manageParentViews : Function;\n    selectionCallback? : Function;\n    columnsData : iColumn[];\n    classes? : string;\n    addAction : Function;\n}\n\ninterface iSTATE {\n    selectionSet : selectionObject[];\n    checkedRows :number[];\n    workingDataSet : iDataGridItem[][];\n    hoveredRow : string;\n}\n\nexport type selectionObject = {\n    row : number;\n    cell : number;\n    selected : boolean;\n    columnName : string;\n}\n\nexport class DataGrid extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n        this.state = {\n            workingDataSet : this.props.data,\n            selectionSet : [],\n            checkedRows : [],\n            hoveredRow : \"\"\n        };\n        this.startSelectionRow = 0;\n        this.startSelectionCell = 0;\n\n        this.cellRange = {\n            startCell : 0,\n            endCell : 0,\n            startRow : 0,\n            endRow : 0,\n        };\n\n        this.numCols = this.getNumColumns();\n        this.numRows = this.getNumRows();\n    }\n    selectionSet : selectionObject[] = [];\n    selectedCells : iDataGridItem[] = [];\n    numCols : number;\n    numRows: number;\n    startSelectionRow : number;\n    startSelectionCell : number;\n\n    cellRange : any;\n    _checkedRows : number[] = [];\n\n    manageSelection(row:number, cell:number, columnName : string,  clearSelection : boolean){\n\n        if(clearSelection){\n            this.selectionSet = [];\n            this._checkedRows = [];\n        }\n\n        if(this.startSelectionRow > row){\n            this.cellRange.startRow = row;\n            this.cellRange.endRow = this.startSelectionRow\n        }else{\n            this.cellRange.startRow = this.startSelectionRow;\n            this.cellRange.endRow = row;\n        }\n\n        if(this.startSelectionCell > cell){\n            this.cellRange.startCell = cell;\n            this.cellRange.endCell = this.startSelectionCell;\n        }else {\n            this.cellRange.startCell = this.startSelectionCell;\n            this.cellRange.endCell = cell;\n        }\n\n        if(row === this.startSelectionRow && cell === this.startSelectionCell){\n            this.selectionSet.push(\n                {\n                    row: row,\n                    cell: cell,\n                    selected : true,\n                    columnName : this.props.columnsData[cell-2].columnName\n                    //columnName : appColumns.getColumns[cell-2].columnName\n                }\n            );\n        }\n\n        for( let i = this.cellRange.startRow; i < this.cellRange.endRow+1; i++){\n            for(let j= this.cellRange.startCell; j < this.cellRange.endCell+1; j++){\n                this.selectionSet.push(\n                    {\n                        row: i,\n                        cell: j,\n                        selected : true,\n                        columnName : this.props.columnsData[j-2].columnName\n                    }\n                );\n            }\n        }\n\n        // handle single cell as start and end\n\n        console.log(\"@@@ this.selectionSet: \", this.selectionSet);\n        console.log(\"*** this.state.selectionSet: \", this.state.selectionSet);\n\n        if(this.selectionSet.length === 2){\n            if( this.selectionSet[0].row === this.selectionSet[1].row && this.selectionSet[0].cell === this.selectionSet[1].cell  ){\n                this.selectionSet.splice(1,1);\n            }\n        }\n\n        this.setState({\n            selectionSet : this.selectionSet,\n            checkedRows : this._checkedRows\n        });\n\n\n        if(this.props.selectionCallback !== undefined && this.props.selectionCallback !== null){\n           type iSelectedItem = { row : number, cells : number[], productFields : iDataGridItem[] };\n            let selectedItems : iSelectedItem[] = [  ];\n            let lastRow : number = 0;\n\n            // work through the selection set to organize things\n\n           i: for(let i=0; i < this.selectionSet.length; i++){\n                if(i===0){\n                    //if it's the first one let's create a new entry\n                    lastRow = this.selectionSet[0].row;\n                    let newItem : iSelectedItem = { row : lastRow, cells:[], productFields : []};\n                    selectedItems.push(newItem);\n                }\n\n                //loop over the existing list of rows to create new ones\n                    if(this.selectionSet[i].row === lastRow){\n                        //one more loop over the list to grab all the cells that belong to the row\n                        if(selectedItems[selectedItems.length-1].cells.length === 0){\n                            for(let j=0; j < this.selectionSet.length; j++){\n                                if(this.selectionSet[j].row === lastRow){\n                                    //if the row matches the last row, then push in the selected cell\n                                    selectedItems[selectedItems.length-1].cells.push( this.selectionSet[j].cell );\n                                }\n                            }\n                        }\n                    }else{\n                        lastRow = this.selectionSet[i].row;\n                        let newItem : iSelectedItem = { row : lastRow, cells:[], productFields : []};\n                        selectedItems.push(newItem);\n                    }\n            }\n\n           for(let x=0; x < selectedItems.length; x++){\n                for(let y=0; y < this.state.workingDataSet[selectedItems[x].row-2].length; y++){\n                    selectedItems[x].productFields.push(this.state.workingDataSet[selectedItems[x].row-2][y] )\n                }\n\n           }\n\n\n            this.props.selectionCallback(selectedItems, this._checkedRows, \"standard-launch\");\n         }\n    }\n\n    clearSelection(){\n        this.setState({selectionSet:[], checkedRows:[]});\n        this._checkedRows = [];\n        this.selectionSet = [];\n    }\n\n    checkSelected(row:number, cell:number):selectedStateType{\n        for(let i=0; i<this.state.selectionSet.length; i++){\n            if( this.state.selectionSet[i].row === row && this.state.selectionSet[i].cell === cell){\n                return \"selected\";\n            }\n        }\n        //if nothing is found, return false because it isn't selected\n        return \"\";\n    }\n\n    getNumColumns(){\n        //TODO swap this out to calculating total normalized columns\n\n        return this.props.columnsData.length;\n    }\n\n    getNumRows(){\n       if(this.state.workingDataSet.length > 0){\n           return this.state.workingDataSet.length;\n       }else{\n           return this.props.data.length;\n       }\n    }\n\n    getProductUniqueID(index : number){\n\n        for(let j=0; j < this.state.workingDataSet[index].length; j++){\n            if(this.state.workingDataSet[index][j].columnName === \"uniqueID\"){\n                return this.state.workingDataSet[index][j].value;\n            }\n        }\n    }\n\n    mouseDownAction(row : number, cell:number){\n        this.startSelectionCell = cell;\n        this.startSelectionRow = row;\n    }\n\n    mouseUpAction(row:number, cell:number, columnName : string){\n\n        //console.log(\"@@@check\", row, \" \", cell, \" \", columnName);\n        this.manageSelection(row, cell, columnName, true);\n        console.log(\"selection set: \", this.selectionSet);\n    }\n\n    hoverRowAction(row:number){\n        this.setState({hoveredRow : row.toString()});\n\n    }\n    moueOutRowAction(){\n        this.setState({hoveredRow : \"\"});\n    }\n\n    manageCheckbox(row : number){\n\n        //find if this number is in the list\n        let found : boolean = false;\n\n        console.log(\"@@ checked rows: \",row);\n\n        for(let i=0; i < this._checkedRows.length; i++){\n            if(this._checkedRows[i] === row){\n                //if it is in the list remove it which unchecks\n                this._checkedRows.splice(i, 1);\n                this.setState({checkedRows : this._checkedRows});\n                found = true;\n            }\n        }\n        if(found === false){\n            this._checkedRows.push(row);\n            this.setState({checkedRows : this._checkedRows});\n\n        }\n\n        //handle selecting the checked\n        //First reset the cell selection\n        this.selectionSet = [];\n\n        for(let i=0; i < this._checkedRows.length; i++){\n            for(let j=0; j < this.state.workingDataSet[this._checkedRows[i]].length; j++ ){\n                let selectedCell : selectionObject = {\n                    row : this._checkedRows[i]+2,\n                    cell : j+2,\n                    selected : true,\n                    columnName : this.props.columnsData[j].columnName\n                };\n                this.selectionSet.push(selectedCell);\n            }\n        }\n\n\n        this.setState({selectionSet : this.selectionSet});\n        if(this.props.selectionCallback !== undefined){\n            this.props.selectionCallback(this.state.selectionSet, this.state.checkedRows, \"checkbox-launched\");\n        }\n        //once people use the tool, we can hide the tool tip\n        toolTipContent.showSelectRow = false;\n    }\n\n    switchToEditModeFromCheckBoxMode(){\n        //handle switching from checkbox mode to cell selection mode\n        //First reset the cell selection\n\n        console.log(\"switch to edit mode\");\n\n        // for(let i=0; i < this._checkedRows.length; i++){\n        //     for(let j=0; j < this.state.workingDataSet[this._checkedRows[i]].length; j++ ){\n        //         let selectedCell : selectionObject = {\n        //             row : this._checkedRows[i]+2,\n        //             cell : j+2,\n        //             selected : true,\n        //             columnName : this.props.columnsData[j].columnName\n        //         };\n        //         this.selectionSet.push(selectedCell);\n        //     }\n        // }\n\n        this._checkedRows = [];\n        this.setState({\n            checkedRows : this._checkedRows\n        });\n        console.log(\"switch to edit mode\", this.selectionSet);\n        console.log(\"switch to edit mode\", this.state.selectionSet);\n        if(this.props.selectionCallback !== undefined){\n            this.props.selectionCallback(this.state.selectionSet, this.state.checkedRows, \"checkbox-launched\");\n        }\n    }\n\n    iconCheck = (row : number):string=>{\n        for(let i=0; i < this.state.checkedRows.length; i++){\n            if(row === this.state.checkedRows[i]){\n                return \"checkbox-checked\"\n            }\n        }\n        return \"checkbox-unchecked\"\n    };\n\n    updateSelectionState = ()=>{\n        this.setState({selectionSet : this.selectionSet});\n\n    };\n\n    getGridItems(){\n        let cells : ReactElement[] = [];\n        for(let i=0; i < this.state.workingDataSet.length; i++){\n            for(let j=0; j < this.state.workingDataSet[i].length; j++){\n                if(j === 0){\n                    cells.push(\n                        <div id={`row-${i+2}-start`} className={`cell checkbox-main `} style={{gridColumn : j+1, gridRow : i+2, zIndex : 100 + (this.numRows - i) }}>\n                            <AppButton\n                                OnClick={()=>this.manageCheckbox(i)}\n                                hoverActions={[()=>this.hoverRowAction(i+2)]}\n                                buttonType=\"transparent-bg\"\n                                tooltipType=\"custom\"\n                                tooltip={toolTipContent.selectRow()}\n                                classes={`${this.iconCheck(i)}`}\n                                iconCenter={(\n                                    <CatmanIcon\n                                        iconName={`${this.iconCheck(i)}`}\n                                        width=\"100%\"\n                                        height=\"100%\"\n                                    />\n                                )}\n                            />\n                            <CatmanIcon\n                                classes={\"shading-l-r\"}\n                                iconName=\"fader-left-to-right\"\n                                width=\"0.5rem\"\n                                height=\"100%\"\n                            />\n                        </div>\n                    )\n                }\n\n                let cell = (\n                    <div className={`cell row-${i+2}`} style={{gridColumn : j+2, gridRow : i+2 }}>\n                        <Tile\n                            tileType={this.props.columnsData[j].control}\n                            tileLabel={this.state.workingDataSet[i][j].value}\n                            hoverActions={[()=>this.hoverRowAction(i+2)]}\n                            mouseOutActions={[()=>this.moueOutRowAction()]}\n                            mouseDownActions={\n                                [() => this.mouseDownAction(i+2,j+2)]\n                            }\n                            mouseUpActions={\n                                [\n                                    () => this.props.manageParentViews(),\n                                    () => this.mouseUpAction(i+2,j+2, this.props.columnsData[j].columnName)\n                                ]\n                            }\n                            selectedClass={this.checkSelected(i+2, j+2)}\n\n                        />\n\n                    </div>\n                );\n\n\n                if( this.props.columnsData[j].control !== \"hidden\"){\n                    cells.push(cell);\n                }\n\n                if(j === this.state.workingDataSet[i].length-1){\n                    cells.push(\n                        <div className=\"cell details\" style={{gridColumn : j+3, gridRow : i+2, zIndex : 100 + (this.numRows - i) }}>\n                            <AppButton\n                                buttonType=\"nav-link\"\n                                navPath={`/catalog/spreadsheet?product=${this.getProductUniqueID(i)}`}\n                                tooltipType=\"custom\"\n                                tooltip={toolTipContent.singleProduct()}\n                                iconCenter={(\n                                    <CatmanIcon\n                                        iconName=\"go-arrow\"\n                                        width=\"1rem\"\n                                        height=\"100%\"\n                                    />\n                                )}\n                            />\n                            <CatmanIcon\n                                classes={\"shading\"}\n                                iconName=\"fader-right-to-left\"\n                                width=\"0.5rem\"\n                                height=\"100%\"\n                            />\n\n                        </div>\n                    )\n                }\n            }\n        }\n\n        return cells;\n    }\n\n    getColumnHeaders(){\n        let columnsHeads : ReactElement[] = [];\n\n        for(let i=0; i < this.props.columnsData.length; i++ ){\n            if(i === 0){\n                columnsHeads.push(\n                    <div className=\"cell checkbox-main grid-header\" style={{gridColumn : i+1, gridRow : 1, zIndex : 120 + (this.numCols) }}>\n                        <AppButton\n                            OnClick={()=>this.manageCheckbox(i)}\n                            buttonType=\"transparent-bg\"\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.selectRow()}\n                            classes={` `}\n                            iconCenter={(\n                                <CatmanIcon\n                                    iconName={`${this.iconCheck(i)}`}\n                                    width=\"0.5rem\"\n                                    height=\"100%\"\n                                />\n                            )}\n                        />\n                    </div>\n                )\n            }\n\n          const columnHeadTooltip = (tooltiptype : \"custom\" | \"basic\", tooltip:ReactElement | string, header:string)=>{\n\n              switch (tooltiptype) {\n                  case \"basic\":\n                      return(<ToolTipContent\n                          header={header}\n                          copy={ tooltip }\n                          tooltipType=\"deluxe\"\n                          icon={\n                              <CatmanIcon\n                                  iconName=\"icon-add-invert\"\n                                  classes=\"\"\n                                  height=\"1.5rem\"\n                                  width=\"1.5rem\"\n                              />\n                          }\n                      />);\n                  case \"custom\":\n                      return this.props.columnsData[i].toolTip;\n              }\n\n              return (<></>)\n          };\n\n            let columnHead = (\n                <div className=\"cell grid-header\" style={{gridColumn : i+2, gridRow : 1, zIndex: this.numRows+100+i  }}>\n                    <Tile\n                        tileType=\"column-header\"\n                        tileLabel={this.props.columnsData[i].columnLabel}\n                        toolTip={ columnHeadTooltip(\n                            this.props.columnsData[i].tooltipType,\n                            this.props.columnsData[i].toolTip,\n                            this.props.columnsData[i].columnLabel\n                        )}\n                        mouseDownActions={\n                            [ ]\n                        }\n                        mouseUpActions={\n                            [\n                                () => this.props.manageParentViews()\n                            ]\n                        }\n                        selectedClass={\"\"}\n                    />\n                </div>\n            );\n\n            if(this.props.columnsData[i].control != \"hidden\"){\n                columnsHeads.push(columnHead);\n            }\n\n\n            //final column head action\n            if(i === this.props.columnsData.length-1){\n                columnsHeads.push(\n                    <div className=\"cell details grid-header\"\n                         style={{gridColumn : this.props.columnsData.length+2, gridRow : 1, zIndex : (200 + this.numCols+2) }}\n                        >\n                        <AppButton\n                            buttonType=\"button-custom\"\n                            classes=\"add-column\"\n                            navPath={`/catalog/spreadsheet`}\n                            OnClick={()=>this.props.addAction(\"add-attribute\")}\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.insertColumn()}\n                            iconCenter={(\n                                <CatmanIcon\n                                    iconName=\"icon-plus\"\n                                    width=\"0.5rem\"\n                                    height=\"100%\"\n                                />\n                            )}\n                        />\n                        <CatmanIcon\n                            classes={\"shading-l-r\"}\n                            iconName=\"fader-right-to-left\"\n                            width=\"0.5rem\"\n                            height=\"100%\"\n                        />\n                    </div>\n                )\n            }\n        }\n\n        return( columnsHeads );\n    }\n\n    gridStyles(){\n\n            let style = `\n            .row-${this.state.hoveredRow} {\n                background-color: #f4f4f5;                \n            }\n            \n            .row-${this.state.hoveredRow} .cell-editable{\n                z-index:100;\n            }\n            \n            .row-${this.state.hoveredRow} p{\n                    color: #473F4A  ;\n            }\n            `;\n\n\n\n        return <style dangerouslySetInnerHTML={{ __html: `${style}` }} />\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n\n        let columnHeaders : ReactElement[] = this.getColumnHeaders();\n\n        //having some trouble with layout of grid and checkboxes\n        // style={{gridTemplateColumns : `1.5rem repeat(${this.getNumColumns().toString()}, max-content) 1rem`}}\n        let constructedGrid : ReactElement = (\n            <>\n                <div className={`data-grid ${this.props.classes}`}>\n                    {this.gridStyles()}\n                    <div className=\"viewport\">\n                        {columnHeaders}\n                        {this.getGridItems()}\n                    </div>\n                </div>\n            </>\n        );\n\n        return constructedGrid;\n    }\n}"]},"metadata":{},"sourceType":"module"}