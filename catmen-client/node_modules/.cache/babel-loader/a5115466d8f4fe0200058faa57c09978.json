{"ast":null,"code":"import _classCallCheck from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import{toolTipContent}from\"../../../_common/tool-tip-content/content-tool-tips\";import{CatmanIcon}from\"../../../../svg/icons/icons\";import AppButton from\"../../../../view-components/button/app-button\";import{dataManagerMain}from\"../../../../index\";import{StandardTextInput}from\"../../../../view-components/text-input/standard-text-input\";export var CreateProductGroupWizard=/*#__PURE__*/function(_React$Component){_inherits(CreateProductGroupWizard,_React$Component);var _super=_createSuper(CreateProductGroupWizard);function CreateProductGroupWizard(props){var _this;_classCallCheck(this,CreateProductGroupWizard);_this=_super.call(this,props);_this.groupNameValue=\"\";_this.groupNameRef=React.createRef();_this.getInputValue=function(row,cell,value){console.log(\"input value\",row,\" \",cell,\" \",value);_this.groupNameValue=value;};_this.state={wizardPanel:\"start\"};return _this;}_createClass(CreateProductGroupWizard,[{key:\"createVariantGroup\",value:function createVariantGroup(){if(this.props.selectedCheckBoxes!=null){for(var i=0;i<this.props.selectedCheckBoxes.length;i++){var currentCheckIndex=this.props.selectedCheckBoxes[i];for(var j=0;j<dataManagerMain.productData[currentCheckIndex].length;j++){if(dataManagerMain.productData[currentCheckIndex][j].columnName===\"ProductGroup\"){dataManagerMain.productData[currentCheckIndex][j].value=this.groupNameValue;}}}}console.log(dataManagerMain.productData);this.props.manageModal();}},{key:\"element\",value:function element(){var _this2=this;switch(this.state.wizardPanel){case\"closed\":return/*#__PURE__*/React.createElement(React.Fragment,null);case\"start\":return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Create Product Group from Selection\"),/*#__PURE__*/React.createElement(\"div\",{className:\"add-blank-stubs-area\"},/*#__PURE__*/React.createElement(\"p\",null,\"Add\"),/*#__PURE__*/React.createElement(StandardTextInput,{label:\"Variant Group Name\",currentValue:\"\",onChangeAction:this.getInputValue,row:0,cell:0}),/*#__PURE__*/React.createElement(\"p\",null,\"Name Product Group: \"),/*#__PURE__*/React.createElement(AppButton,{buttonType:\"secondary-action\",buttonLabel:\"Go\",OnClick:function OnClick(){return _this2.createVariantGroup();},tooltipType:\"custom\",tooltip:toolTipContent.addBlankStubs(),toolTipTimeOutInMS:10000,tooltipXOffset:0,tooltipYOffset:20,iconLeft:/*#__PURE__*/React.createElement(CatmanIcon,{iconName:\"icon-add-invert\",classes:\"reverse\",height:\"100%\",width:\"100%\"})})));case\"upload-2\":return/*#__PURE__*/React.createElement(React.Fragment,null);}}},{key:\"render\",value:function render(){return this.element();}}]);return CreateProductGroupWizard;}(React.Component);// export let uploadWizard : iWizardStep[] = [\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard  wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     }\n// ];","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/_catman-configuration/wizards/create-product-group/create-product-group-wizard.tsx"],"names":["React","toolTipContent","CatmanIcon","AppButton","dataManagerMain","StandardTextInput","CreateProductGroupWizard","props","groupNameValue","groupNameRef","createRef","getInputValue","row","cell","value","console","log","state","wizardPanel","selectedCheckBoxes","i","length","currentCheckIndex","j","productData","columnName","manageModal","createVariantGroup","addBlankStubs","element","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {iWizardStep} from \"../../../../view-components/wizard/wizard\";\nimport {ReactElement} from \"react\";\nimport {toolTipContent} from \"../../../_common/tool-tip-content/content-tool-tips\";\nimport {CatmanIcon} from \"../../../../svg/icons/icons\";\nimport AppButton from \"../../../../view-components/button/app-button\";\nimport {DividerLine} from \"../../../../view-components/divider-line/divider-line\";\nimport {TextInput} from \"../../../../view-components/text-input/text-input\";\nimport {Illustration} from \"../../../../svg/illustrations/illustrations\";\nimport {dataManagerMain} from \"../../../../index\";\nimport {iDataGridItem} from \"../../../../view-components/data-grid/data-types-for-data-grid\";\nimport {RefObject} from \"react\";\nimport {StandardTextInput} from \"../../../../view-components/text-input/standard-text-input\";\n\ninterface iPROPS{\n    addAction : Function\n    selectedCheckBoxes? : number[];\n    groups : string[];\n    manageModal : Function;\n}\n\ninterface iSTATE{\n    wizardPanel : \"closed\" | \"start\" | \"upload-2\" | \"upload-3\";\n}\n\nexport class CreateProductGroupWizard extends React.Component<iPROPS, iSTATE>{\n\n    constructor(props:iPROPS) {\n        super(props);\n        this.state={\n            wizardPanel : \"start\"\n        }\n    }\n\n    groupNameValue : string = \"\";\n\n    groupNameRef:RefObject<StandardTextInput> = React.createRef<StandardTextInput>();\n\n    createVariantGroup(){\n\n        if(this.props.selectedCheckBoxes != null){\n            for(let i=0; i < this.props.selectedCheckBoxes.length; i++){\n                let currentCheckIndex : number = this.props.selectedCheckBoxes[i];\n                for(let j=0; j < dataManagerMain.productData[currentCheckIndex].length; j++){\n                    if(dataManagerMain.productData[currentCheckIndex][j].columnName === \"ProductGroup\" ){\n                        dataManagerMain.productData[currentCheckIndex][j].value = this.groupNameValue;\n                    }\n                }\n            }\n        }\n        console.log(dataManagerMain.productData);\n\n        this.props.manageModal();\n    }\n\n    getInputValue = (row:number, cell:number, value:string )=>{\n         console.log(\"input value\", row, \" \", cell, \" \", value);\n        this.groupNameValue = value;\n    };\n\n    element(){\n        switch (this.state.wizardPanel) {\n            case \"closed\":\n                return(<></>);\n            case \"start\":\n                return(\n                    <div>\n                        <h3>Create Product Group from Selection</h3>\n                        <div className={\"add-blank-stubs-area\"}>\n                            <p>Add</p>\n                            <StandardTextInput\n                                label={\"Variant Group Name\"}\n                                currentValue={\"\"}\n                                onChangeAction={this.getInputValue}\n                                row={0}\n                                cell={0}\n                            />\n                            <p>Name Product Group: </p>\n                            <AppButton\n                                buttonType={\"secondary-action\"}\n                                buttonLabel=\"Go\"\n                                OnClick={()=>this.createVariantGroup()}\n                                tooltipType=\"custom\"\n                                tooltip={toolTipContent.addBlankStubs()}\n                                toolTipTimeOutInMS={10000}\n                                tooltipXOffset={0}\n                                tooltipYOffset={20}\n                                iconLeft={\n                                    <CatmanIcon\n                                        iconName=\"icon-add-invert\"\n                                        classes=\"reverse\"\n                                        height=\"100%\"\n                                        width=\"100%\"\n                                    />\n                                }\n                            />\n                        </div>\n                    </div>\n                );\n            case \"upload-2\":\n                return(<></>)\n        }\n    }\n\n    render(){\n        return(this.element())\n    }\n}\n\n// export let uploadWizard : iWizardStep[] = [\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     },\n//     {\n//         titleHeader : \"string;\",\n//         instructionText : \"string;\",\n//         panel : (<UploadWizard  wizardActions={[]}/>),\n//         winCondition : (1 > 0)\n//     }\n// ];"]},"metadata":{},"sourceType":"module"}