{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/card/card.tsx\";\nimport * as React from \"react\";\nimport { toolTipContent } from \"../../views/tool-tip-content/content-tool-tips\";\nimport { CatmanIcon } from \"../../svg/icons/icons\";\nimport AppButton from \"../button/app-button\";\nexport class Card extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getCard(cardTitle, thumbImageUrl, assignedToTheseProducts, mediaResolution, shotType) {\n    switch (this.props.cardType) {\n      case \"media\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card media-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"header\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-header-menu\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"overflow\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 37\n          }\n        }, cardTitle)), /*#__PURE__*/React.createElement(AppButton, {\n          OnClick: () => {},\n          buttonType: \"transparent-bg\",\n          tooltipType: \"custom\",\n          tooltip: toolTipContent.selectRow(),\n          classes: ` `,\n          iconCenter: /*#__PURE__*/React.createElement(CatmanIcon, {\n            iconName: `checkbox-unchecked`,\n            width: \"1rem\",\n            height: \"100%\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 41\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"thumbnail-image\",\n          style: {\n            backgroundImage: `url(${thumbImageUrl})`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"thumb-type\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 26\n          }\n        }, shotType)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"data-area\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"data\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 37\n          }\n        }, \"Assigned to \", /*#__PURE__*/React.createElement(\"span\", {\n          className: \"emphasize\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 53\n          }\n        }, assignedToTheseProducts.length.toString()), \" \"), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 37\n          }\n        }, \"Media resolution: \", mediaResolution, \" \"), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 37\n          }\n        }, \"date uploaded: June 6 2020\"))));\n\n      case \"product\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  }\n\n  getMediaCards() {\n    let cardsCollections = [];\n\n    if (this.props.mediaData !== undefined) {\n      for (let i = 0; i < this.props.mediaData.length; i++) {\n        cardsCollections.push(this.getCard(this.props.mediaData[i].mediaName, this.props.mediaData[i].mediaPath, this.props.mediaData[i].productAssociations, this.props.mediaData[i].resolution, this.props.mediaData[i].shotType));\n      }\n    }\n\n    return cardsCollections;\n  }\n\n  render() {\n    switch (this.props.cardType) {\n      case \"media\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, this.getMediaCards());\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/card/card.tsx"],"names":["React","toolTipContent","CatmanIcon","AppButton","Card","Component","constructor","props","getCard","cardTitle","thumbImageUrl","assignedToTheseProducts","mediaResolution","shotType","cardType","selectRow","backgroundImage","length","toString","getMediaCards","cardsCollections","mediaData","undefined","i","push","mediaName","mediaPath","productAssociations","resolution","render"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {mediaObject} from \"../../_sample-data/media-library\";\nimport {ReactElement} from \"react\";\nimport {toolTipContent} from \"../../views/tool-tip-content/content-tool-tips\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport AppButton from \"../button/app-button\";\n\n\ninterface iPROPS{\n    cardType : \"media\" | \"product\";\n    mediaData? : mediaObject[]\n}\n\ninterface iSTATE{\n\n}\n\nexport class Card extends React.Component<iPROPS, iSTATE>{\n    constructor(props : iPROPS) {\n        super(props);\n    }\n\n    getCard( cardTitle : string,\n             thumbImageUrl : string,\n             assignedToTheseProducts : string[],\n             mediaResolution : string,\n             shotType : string\n    ):ReactElement{\n        switch(this.props.cardType){\n            case \"media\":\n                return(\n                    <div className=\"card media-card\">\n                        <header>\n                            <div className=\"card-header-menu\">\n                                <div className=\"overflow\">\n                                    <div className=\"name\">{cardTitle}</div>\n                                </div>\n                                <AppButton\n                                    OnClick={()=>{}}\n                                    buttonType=\"transparent-bg\"\n                                    tooltipType=\"custom\"\n                                    tooltip={toolTipContent.selectRow()}\n                                    classes={` `}\n                                    iconCenter={(\n                                        <CatmanIcon\n                                            iconName={`checkbox-unchecked`}\n                                            width=\"1rem\"\n                                            height=\"100%\"\n                                        />\n                                    )}\n                                />\n                            </div>\n                        </header>\n                        <div\n                            className=\"thumbnail-image\"\n                            style={{backgroundImage : `url(${thumbImageUrl})`}}\n                        >\n                         <div className=\"thumb-type\">{shotType}</div>\n                        </div>\n                        <div className=\"data-area\">\n                                <ul className=\"data\">\n                                    <li>Assigned to <span className=\"emphasize\">{assignedToTheseProducts.length.toString()}</span> </li>\n                                    <li>Media resolution: {mediaResolution} </li>\n                                    <li>date uploaded: June 6 2020</li>\n                                </ul>\n                        </div>\n                    </div>\n\n                );\n            case \"product\":\n                return(<></>);\n        }\n    }\n\n    getMediaCards(){\n        let cardsCollections : ReactElement[] = [];\n        if(this.props.mediaData !== undefined){\n            for(let i=0; i < this.props.mediaData.length; i++){\n                cardsCollections.push(\n                    this.getCard(\n                        this.props.mediaData[i].mediaName,\n                        this.props.mediaData[i].mediaPath,\n                        this.props.mediaData[i].productAssociations,\n                        this.props.mediaData[i].resolution,\n                        this.props.mediaData[i].shotType\n                    ));\n            }\n        }\n        return cardsCollections;\n    }\n\n\n    render(){\n\n        switch (this.props.cardType) {\n            case \"media\":\n                return (<>{this.getMediaCards()}</>)\n        }\n        return (<></>)\n    }\n}"]},"metadata":{},"sourceType":"module"}