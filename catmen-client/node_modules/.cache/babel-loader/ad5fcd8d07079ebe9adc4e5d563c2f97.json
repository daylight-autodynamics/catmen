{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/_common/main-header-area/main-header-area.tsx\";\nimport * as React from \"react\";\nimport StickyThing from \"../../../view-components/sticky-panel/sticky-panel\";\nimport AppButton from \"../../../view-components/button/app-button\";\nimport { CatmanIcon } from \"../../../svg/icons/icons\";\nimport { toolTipContent } from \"../tool-tip-content/content-tool-tips\";\nimport { ModalView } from \"../../../view-components/modal/modal\";\nexport class MainHeaderArea extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuIsOpen: false,\n      currentModal: \"none\"\n    };\n  }\n\n  navMenu() {\n    if (this.state.menuIsOpen === true) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StickyThing, {\n        enterFromThisSide: \"left\",\n        lastResortClasses: \"catman-main-nav\",\n        animateIn: true,\n        heightIncludeUnits: \"90vh\",\n        widthIncludeUnits: \"auto\",\n        stickyOpen: true,\n        bgColor: \"\",\n        doAnimation: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }, this.props.navigationElement), /*#__PURE__*/React.createElement(AppButton, {\n        tooltipType: \"none\",\n        buttonType: \"from-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => this.handleMenu(),\n        className: \"overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  }\n\n  handleMenu() {\n    let inverse = !this.state.menuIsOpen;\n    this.setState({\n      menuIsOpen: inverse\n    });\n  }\n\n  ribbonMenu() {}\n\n  navArea() {\n    if (this.state.menuIsOpen === false) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main-header-actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppButton, {\n        buttonType: \"from-left\",\n        buttonLabel: \"catalog manager\",\n        OnClick: () => this.handleMenu(),\n        tooltipType: \"custom\",\n        tooltip: toolTipContent.mainNav(),\n        toolTipTimeOutInMS: 10000,\n        iconRight: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"down-arrow\",\n          classes: \"ui-icon \",\n          height: \"100%\",\n          width: \"100%\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(AppButton, {\n        buttonType: \"main-action\",\n        classes: \"main-add-btn\",\n        buttonLabel: \"\",\n        OnClick: () => this.manageModals(\"add-products\"),\n        tooltipType: \"custom\",\n        tooltip: toolTipContent.addProducts(),\n        toolTipTimeOutInMS: 10000,\n        iconCenter: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"icon-add\",\n          classes: \" main-add\",\n          height: \"100%\",\n          width: \"100%\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"empty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n  getModals(modalName) {\n    switch (modalName) {\n      case \"add-products\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalView, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 26\n          }\n        }));\n\n      case \"add-product-variant\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 26\n          }\n        }, \"Product Variant\"));\n    }\n  }\n\n  manageModals(modalName) {\n    console.log(\"clicked\", modalName);\n\n    switch (modalName) {\n      case \"add-products\":\n        this.setState({\n          currentModal: \"add-products\"\n        });\n\n      case \"none\":\n        this.setState({\n          currentModal: \"none\"\n        });\n    }\n  }\n\n  render() {\n    let constructedHeader = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"header-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, this.navArea()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-ribbon header-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, this.props.ribbonElement), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, this.navMenu()), this.getModals(this.state.currentModal)));\n    return constructedHeader;\n  }\n\n}\nexport default MainHeaderArea;","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/_common/main-header-area/main-header-area.tsx"],"names":["React","StickyThing","AppButton","CatmanIcon","toolTipContent","ModalView","MainHeaderArea","Component","constructor","props","state","menuIsOpen","currentModal","navMenu","navigationElement","handleMenu","inverse","setState","ribbonMenu","navArea","mainNav","manageModals","addProducts","getModals","modalName","console","log","render","constructedHeader","ribbonElement"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport StickyThing from \"../../../view-components/sticky-panel/sticky-panel\";\nimport AppButton from \"../../../view-components/button/app-button\";\nimport {ToolTip} from \"../../../view-components/heru-tool-tip/tool-tip\";\nimport {CatmanIcon} from \"../../../svg/icons/icons\";\nimport {ContentToolTips, toolTipContent} from \"../tool-tip-content/content-tool-tips\";\nimport {ToolTipContent} from \"../../../view-components/heru-tool-tip/tool-tip-content\";\nimport {ModalView} from \"../../../view-components/modal/modal\";\n\ninterface iPROPS{\n    sectionTitle? : string;\n    navigationElement? : ReactElement;\n    ribbonElement? : ReactElement;\n}\n\ninterface iSTATE{\n    menuIsOpen : boolean;\n    currentModal : \"none\" | \"add-products\"\n}\n\nexport class MainHeaderArea extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n        this.state = {\n            menuIsOpen : false,\n            currentModal : \"none\"\n        }\n    }\n\n    navMenu(){\n\n        if(this.state.menuIsOpen === true){\n            return (\n                <>\n                    <StickyThing\n                        enterFromThisSide=\"left\"\n                        lastResortClasses={\"catman-main-nav\"}\n                        animateIn={true}\n                        heightIncludeUnits=\"90vh\"\n                        widthIncludeUnits={\"auto\"}\n                        stickyOpen={true}\n                        bgColor={\"\"}\n                        doAnimation={true}>\n                        {this.props.navigationElement}\n                    </StickyThing>\n                    <AppButton\n                        tooltipType=\"none\"\n                        buttonType=\"from-left\"\n                    />\n                    <div onClick={()=>this.handleMenu()} className=\"overlay\"/>\n                </>\n            );\n        }else{\n            return (<></>);\n        }\n    }\n\n    handleMenu(){\n        let inverse : boolean = !this.state.menuIsOpen;\n        this.setState({menuIsOpen : inverse})\n    }\n\n    ribbonMenu(){\n\n    }\n\n\n\n    navArea(){\n        if(this.state.menuIsOpen === false){\n\n            return (\n                <div className=\"main-header-actions\">\n                    <AppButton\n                        buttonType={\"from-left\"}\n                        buttonLabel=\"catalog manager\"\n                        OnClick={()=>this.handleMenu()}\n                        tooltipType=\"custom\"\n                        tooltip={toolTipContent.mainNav()}\n                        toolTipTimeOutInMS={10000}\n                        iconRight={\n                            <CatmanIcon\n                                iconName=\"down-arrow\"\n                                classes=\"ui-icon \"\n                                height=\"100%\"\n                                width=\"100%\"\n                            />\n                        }\n                    />\n                    <AppButton\n                        buttonType={\"main-action\"}\n                        classes={\"main-add-btn\"}\n                        buttonLabel=\"\"\n                        OnClick={()=>this.manageModals(\"add-products\")}\n                        tooltipType=\"custom\"\n                        tooltip={toolTipContent.addProducts()}\n                        toolTipTimeOutInMS={10000}\n                        iconCenter={\n                            <CatmanIcon\n                                iconName=\"icon-add\"\n                                classes=\" main-add\"\n                                height=\"100%\"\n                                width=\"100%\"\n                            />\n                        }\n                    />\n                </div>\n            )\n            }else{\n            return(<div className=\"empty\"></div>);\n        }\n    }\n\n    getModals(modalName : string){\n        switch(modalName){\n            case \"add-products\":\n                return(<><ModalView/></>);\n            case \"add-product-variant\":\n                return(<><p>Product Variant</p></>)\n        }\n    }\n\n    manageModals(modalName : string){\n        console.log(\"clicked\", modalName);\n        switch(modalName){\n            case \"add-products\":\n                this.setState({currentModal : \"add-products\"});\n            case \"none\":\n                this.setState({currentModal : \"none\"});\n        }\n    }\n\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        let constructedHeader = (\n          <>\n              <header className=\"header-area\">\n                  <div className=\"header-item\">\n                      {this.navArea()}\n                  </div>\n                  <div className=\"main-ribbon header-item\">\n                      {this.props.ribbonElement}\n                  </div>\n                  <div className=\"header-item\">\n                      {this.navMenu()}\n                  </div>\n                  {this.getModals(this.state.currentModal)}\n              </header>\n          </>\n        );\n\n        return constructedHeader;\n    }\n}\n\nexport default MainHeaderArea;"]},"metadata":{},"sourceType":"module"}