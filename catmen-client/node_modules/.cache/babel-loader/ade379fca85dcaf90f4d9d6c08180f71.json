{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/tiles/tile-component.tsx\";\nimport * as React from \"react\";\nimport { CatmanIcon } from \"../../svg/icons/icons\";\nimport { toolTipContent } from \"../../views/tool-tip-content/content-tool-tips\";\nimport AppButton from \"../button/app-button\";\nexport class Tile extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  mouseDownAction() {\n    if (this.props.mouseDownActions !== null && this.props.mouseDownActions !== undefined) {\n      for (let i = 0; i < this.props.mouseDownActions.length; i++) {\n        this.props.mouseDownActions[i]();\n      }\n    }\n  }\n\n  mouseUpAction() {\n    if (this.props.mouseUpActions !== null && this.props.mouseUpActions !== undefined) {\n      for (let i = 0; i < this.props.mouseUpActions.length; i++) {\n        this.props.mouseUpActions[i]();\n      }\n    }\n  }\n\n  doHoverActions() {\n    if (this.props.hoverActions != null) {\n      for (let i = 0; i < this.props.hoverActions.length; i++) {\n        if (this.props.hoverActions !== undefined) {\n          this.props.hoverActions[i]();\n        }\n      }\n    }\n  }\n\n  doMouseOutActions() {\n    if (this.props.mouseOutActions != null) {\n      for (let i = 0; i < this.props.mouseOutActions.length; i++) {\n        if (this.props.mouseOutActions !== undefined) {\n          this.props.mouseOutActions[i]();\n        }\n      }\n    }\n  }\n\n  getTile() {\n    switch (this.props.tileType) {\n      case \"column-header\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          draggable: \"true\",\n          onMouseUp: () => this.mouseUpAction(),\n          onMouseDown: () => this.mouseDownAction(),\n          className: `${this.props.selectedClass} column-header`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(AppButton, {\n          buttonType: \"button-custom\",\n          classes: `column-header-btn`,\n          buttonLabel: `${this.props.tileLabel} `,\n          OnClick: () => this.props.action,\n          tooltipType: \"custom\",\n          tooltip: this.props.toolTip,\n          iconRight: /*#__PURE__*/React.createElement(CatmanIcon, {\n            iconName: \"carat-down\",\n            width: \"0.5rem\",\n            height: \"100%\",\n            classes: \"column-carat\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: `affordance ${this.props.selectedClass}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }\n        }));\n\n      case \"text-input\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          draggable: \"false\",\n          onMouseUp: () => this.mouseUpAction(),\n          onMouseDown: () => this.mouseDownAction(),\n          onMouseOver: () => this.doHoverActions(),\n          onMouseOut: () => this.doMouseOutActions(),\n          className: `${this.props.selectedClass} cell-editable`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: `${this.props.selectedClass}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }\n        }, `${this.props.tileLabel}`, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: `affordance ${this.props.selectedClass}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }\n        }));\n\n      case \"media\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: `media-cell `,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(AppButton, {\n          buttonType: \"transparent-bg\",\n          tooltipType: \"custom\",\n          tooltip: toolTipContent.imageThumbnailPreview(this.props.tileLabel),\n          classes: ``,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"thumb\",\n          style: {\n            backgroundImage: `url(${this.props.tileLabel})`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: `affordance ${this.props.selectedClass}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }\n        }));\n\n      case \"hidden\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"hidden-cell\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }\n        });\n\n      case \"read-only-cell\":\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }\n        }, this.props.tileLabel));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.getTile());\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/tiles/tile-component.tsx"],"names":["React","CatmanIcon","toolTipContent","AppButton","Tile","Component","constructor","props","mouseDownAction","mouseDownActions","undefined","i","length","mouseUpAction","mouseUpActions","doHoverActions","hoverActions","doMouseOutActions","mouseOutActions","getTile","tileType","selectedClass","tileLabel","action","toolTip","imageThumbnailPreview","backgroundImage","render"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport {ToolTip} from \"../heru-tool-tip/tool-tip\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport {toolTipContent} from \"../../views/tool-tip-content/content-tool-tips\";\nimport AppButton from \"../button/app-button\";\n\nexport type selectedStateType = \"selected\" | \"active\" | \"inactive\" | \"\";\ninterface iPROPS{\n    tileType : string;\n    tileLabel : string;\n    tileCustomElement? : ReactElement;\n    mouseDownActions? : Function[];\n    mouseUpActions? : Function[];\n    hoverActions? : Function[];\n    mouseOutActions? : Function[];\n    selectedClass : selectedStateType;\n    classes? : string;\n    action? : Function;\n    toolTip? :  ReactElement | string;\n}\n\ninterface iSTATE{\n\n}\n\nexport class Tile extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n    }\n\n\n    mouseDownAction(){\n        if(this.props.mouseDownActions !== null && this.props.mouseDownActions !== undefined){\n            for(let i=0; i < this.props.mouseDownActions.length; i++){\n                this.props.mouseDownActions[i]();\n            }\n        }\n    }\n\n    mouseUpAction(){\n        if(this.props.mouseUpActions !== null && this.props.mouseUpActions !== undefined){\n            for(let i=0; i < this.props.mouseUpActions.length; i++){\n                this.props.mouseUpActions[i]();\n            }\n        }\n    }\n\n    doHoverActions(){\n            if(this.props.hoverActions != null){\n                for(let i=0; i < this.props.hoverActions.length; i++){\n\n                    if(this.props.hoverActions !== undefined){\n                        this.props.hoverActions[i]();\n                    }\n                }\n            }\n    }\n\n    doMouseOutActions(){\n        if(this.props.mouseOutActions != null){\n            for(let i=0; i < this.props.mouseOutActions.length; i++){\n                if(this.props.mouseOutActions !== undefined){\n                    this.props.mouseOutActions[i]();\n                }\n            }\n        }\n    }\n\n    getTile(){\n        switch (this.props.tileType) {\n            case \"column-header\":\n                return (\n                    <div\n                        draggable={\"true\"}\n                        onMouseUp={()=>this.mouseUpAction()}\n                        onMouseDown={()=>this.mouseDownAction()}\n                        className={`${this.props.selectedClass} column-header`}\n                    >\n                        <AppButton\n                            buttonType=\"button-custom\"\n                            classes={`column-header-btn`}\n                            buttonLabel={`${this.props.tileLabel} `}\n                            OnClick={()=>this.props.action}\n                            tooltipType=\"custom\"\n                            tooltip={this.props.toolTip}\n                            iconRight={(\n                                <CatmanIcon\n                                    iconName=\"carat-down\"\n                                    width=\"0.5rem\"\n                                    height=\"100%\"\n                                    classes={\"column-carat\"}\n                                />\n                            )}\n                        />\n                        <div className={`affordance ${this.props.selectedClass}`}></div>\n\n                    </div>\n                );\n\n\n            case \"text-input\":\n                return (\n                    <div\n                        draggable={\"false\"}\n                        onMouseUp={()=>this.mouseUpAction()}\n                        onMouseDown={()=>this.mouseDownAction()}\n                        onMouseOver={()=>this.doHoverActions()}\n                        onMouseOut={()=>this.doMouseOutActions()}\n                        className={`${this.props.selectedClass} cell-editable`}\n                    >\n                        <p className={`${this.props.selectedClass}`}>{`${this.props.tileLabel}`}&nbsp;</p>\n                        <div className={`affordance ${this.props.selectedClass}`}></div>\n\n                    </div>\n                );\n            case \"media\":\n                return(\n                    <div className={`media-cell `}>\n                        <AppButton\n                            buttonType=\"transparent-bg\"\n                            tooltipType=\"custom\"\n                            tooltip={toolTipContent.imageThumbnailPreview(this.props.tileLabel)}\n                            classes={``}\n                        />\n                        <div className=\"thumb\" style={{backgroundImage : `url(${this.props.tileLabel})` }}>\n                            <p></p>\n                        </div>\n                        <div className={`affordance ${this.props.selectedClass}`}></div>\n                    </div>\n                );\n\n            case \"hidden\":\n                return(\n                    <div className=\"hidden-cell\">\n\n                    </div>\n                );\n\n            case \"read-only-cell\":\n                return (\n                    <div>\n                        <p>{this.props.tileLabel}</p>\n                    </div>\n                )\n        }\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (<>{this.getTile()}</>);\n    }\n}"]},"metadata":{},"sourceType":"module"}