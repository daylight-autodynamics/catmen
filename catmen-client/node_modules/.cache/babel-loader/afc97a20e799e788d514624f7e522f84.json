{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/tool-tip-content/content-tool-tips.tsx\";\nimport * as React from \"react\";\nimport { CatmanIcon } from \"../../svg/icons/icons\";\nimport { ToolTipContent } from \"../../view-components/heru-tool-tip/tool-tip-content\";\nimport addVariantIllustrationIllustration from \"../../images/SVG/add-variant.svg\";\nimport createVariantGroupIllustrationIllustration from \"../../images/SVG/create-variant-group.svg\";\nimport maximizeDrawerIllustration from \"../../images/SVG/maximize-drawer.svg\";\nimport closeDrawerIllustration from \"../../images/SVG/close-drawer.svg\";\nimport restoreDrawerIllustration from \"../../images/SVG/restore-drawer.svg\";\nimport closeModalIllustration from \"../../images/SVG/close-modal-and-cancel.svg\";\nimport dragFilesIllustration from \"../../images/SVG/drag-files.svg\";\nimport backToSpreadsheetIllustration from \"../../images/SVG/back-to-spreadsheet.svg\";\nimport singleProductSwitchToEditModeIllustration from \"../../images/SVG/sitch-to-edit-mode.svg\";\nimport singleProductSwitchToReadModeIllustration from \"../../images/SVG/switch-to-read-only.svg\";\nimport insertColumnIllustration from \"../../images/SVG/illustration-insert.svg\";\nimport partNumberIllustration from \"../../images/SVG/tooltip-part-number.svg\";\nimport productGroupsIllustration from \"../../images/SVG/tooltip-product-groups.svg\";\nimport referenceImageIllustration from \"../../images/SVG/tooltip-reference-image.svg\";\nimport classesIllustrationIllustration from \"../../images/SVG/illustration-classes.svg\";\nimport clearSelectionIllustration from \"../../images/SVG/illustration-clear-selection.svg\";\nimport deleteItemIllustration from \"../../images/SVG/illustration-delete-items.svg\";\nimport deleteRowIllustration from \"../../images/SVG/illustration-delete-rows.svg\";\nimport editItemIllustration from \"../../images/SVG/illustration-edit.svg\";\nimport insertFromStagingIllustration from \"../../images/SVG/illustration-insert-from-staging.svg\";\nimport continueWizardIllustration from \"../../images/SVG/illustration-continue-next-step.svg\";\nimport goBackWizardIllustration from \"../../images/SVG/illustration-wizard-go-back.svg\";\nimport productNamingIllustration from \"../../images/SVG/illustration-product-name.svg\";\nimport clickDragGridCells from \"../../images/SVG/illustration-click-drag-cells.svg\";\nexport class ContentToolTips extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let toolTip = /*#__PURE__*/React.createElement(React.Fragment, null);\n    return toolTip;\n  }\n\n}\nexport class toolTipsLibrary {\n  constructor() {\n    this.showSelectRow = true;\n    this.showSingleProduct = true;\n    this.showCloseDrawer = 0;\n    this.showMaximizeDrawer = 0;\n    this.checkGridTutorial = 0;\n  }\n\n  mainNav() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Navigation\",\n      copy: \"Use this menu to access different sections of the app\",\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"compass\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    });\n  }\n\n  footerCancel() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Cancel\",\n      copy: \"Close this menu and clear selected rows\",\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"cancel\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 16\n      }\n    });\n  }\n\n  footerDelete() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Delete Selected\",\n      subHeader: \"Permanently destroy the product data in selected rows\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: deleteRowIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-delete\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 16\n      }\n    });\n  }\n\n  deleteItem() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Delete Selected\",\n      subHeader: \"Permanently destroy the selected product data\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: deleteItemIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-delete\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 16\n      }\n    });\n  }\n\n  footerEditSelection() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Edit Selected Rows\",\n      subHeader: \"Switch to cell-editing mode\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: editItemIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-edit\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 16\n      }\n    });\n  }\n\n  footerAddVariant() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Add Product as a Variant\",\n      subHeader: \"Create a new product and add it to the selected product's group\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: addVariantIllustrationIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-add\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 16\n      }\n    });\n  }\n\n  footerCreateVariant() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Create New Product Group from Selection\",\n      subHeader: \"Create a new product variants group from the selected items.\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: createVariantGroupIllustrationIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-add\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 16\n      }\n    });\n  }\n\n  singleProduct() {\n    if (this.showSingleProduct === true) {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"Edit This Product\",\n        subHeader: \"Edit this row in a single page.\",\n        copy: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 33\n          }\n        }, \"Web form style page\"), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 33\n          }\n        }, \"View and Associate Media\"), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 33\n          }\n        }, \"See variants of this product\"), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 33\n          }\n        }, \"So much more...\"))),\n        tooltipType: \"deluxe\",\n        icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"single-product\",\n          classes: \"\",\n          height: \"1.5rem\",\n          width: \"1.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"Edit This Product\",\n        subHeader: \"Select rows to delete, create groups, add variants to groups\",\n        copy: \"\",\n        tooltipType: \"empty\",\n        icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"single-product\",\n          classes: \"\",\n          height: \"1.5rem\",\n          width: \"1.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }\n      });\n    }\n  }\n\n  selectRow() {\n    if (this.showSelectRow === true) {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"Select Rows\",\n        subHeader: \"Select rows to perform actions on them.\",\n        copy: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 33\n          }\n        }, \"Delete items from catalog\"), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 33\n          }\n        }, \"Create product groupings\"), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 33\n          }\n        }, \"Add Variants to product groups\"))),\n        tooltipType: \"deluxe\",\n        icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"select-row\",\n          classes: \"\",\n          height: \"1.5rem\",\n          width: \"1.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"\",\n        copy: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }\n        }, \"Select rows to delete, create groups, add variants to groups\")),\n        tooltipType: \"empty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }\n      });\n    }\n  }\n\n  closeDrawer() {\n    if (this.showCloseDrawer < 4) {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"Close Drawer\",\n        subHeader: \"Close edit drawer and clear cell selection set\",\n        copy: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"tooltip-illustration\",\n          src: closeDrawerIllustration,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 29\n          }\n        })),\n        tooltipType: \"deluxe\",\n        icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"close-icon\",\n          classes: \"\",\n          height: \"1.5rem\",\n          width: \"1.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"Close Drawer\",\n        copy: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }\n        }, \"Close drawer and clear selection.\")),\n        tooltipType: \"deluxe\",\n        icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"icon-close\",\n          classes: \"\",\n          height: \"1.5rem\",\n          width: \"1.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 21\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n  closeModal() {\n    if (this.showCloseDrawer < 4) {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"Close & Cancel\",\n        subHeader: \"Close this window, you'll lose any work you've done in the window.\",\n        copy: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"tooltip-illustration\",\n          src: closeModalIllustration,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 29\n          }\n        })),\n        tooltipType: \"deluxe\",\n        icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"close-icon\",\n          classes: \"\",\n          height: \"1.5rem\",\n          width: \"1.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"Close Drawer\",\n        copy: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }\n        }, \"Close drawer and clear selection.\")),\n        tooltipType: \"deluxe\",\n        icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"icon-close\",\n          classes: \"\",\n          height: \"1.5rem\",\n          width: \"1.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 21\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n  restoreDrawer() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Restore Drawer\",\n      subHeader: \"Restore drawer so the grid is in view again.\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: restoreDrawerIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 25\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-restore-tooltip\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 13\n      }\n    });\n  }\n\n  maximizeDrawer() {\n    if (this.showMaximizeDrawer < 4) {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"Maximize Drawer\",\n        subHeader: \"Expand the edit area\",\n        copy: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"tooltip-illustration\",\n          src: maximizeDrawerIllustration,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }\n        })),\n        tooltipType: \"deluxe\",\n        icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"icon-maximize-tooltip\",\n          classes: \"\",\n          height: \"1.5rem\",\n          width: \"1.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 21\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"Maximize Drawer\",\n        copy: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 25\n          }\n        }, \"Expand the edit area.\")),\n        tooltipType: \"deluxe\",\n        icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"icon-maximize-tooltip\",\n          classes: \"\",\n          height: \"1.5rem\",\n          width: \"1.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 21\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n  addProducts() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Add or Update Products\",\n      subHeader: \"Add or update product data in YOUR catalog and then publish to Wayfair when you're ready.\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 29\n        }\n      }, \"Add new blank products as stubs\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 29\n        }\n      }, \"Extract product data from files like Excel sheets and images\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 29\n        }\n      }, \"Upload media like photos and associate to products\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 29\n        }\n      }, \"Add product variants for groups (like a red, yellow and green versions of a product).\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 29\n        }\n      }, \"So much more...\"))),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"single-product\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 13\n      }\n    });\n  }\n\n  addBlankStubs() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Add Blank Product Stubs\",\n      copy: \"This functionality available yet\",\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-add-invert\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 16\n      }\n    });\n  }\n\n  dragUploadFiles() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Upload Files Here\",\n      subHeader: \"Drag files from your computer's folder onto this to upload them, or click to browse your computer.\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: dragFilesIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 25\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-add-invert\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 16\n      }\n    });\n  }\n\n  goBackToSpreadsheet() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Go back to the Spreadsheet View\",\n      subHeader: \"Any edits you made in the Single Product view will be saved\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: backToSpreadsheetIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-add-invert\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 16\n      }\n    });\n  }\n\n  singleProductSwitchToEditMode() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Switch to edit Mode\",\n      subHeader: \"this will turn this view into a web form style page with textboxes, dop-downs and such so you can edit this product's data\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: singleProductSwitchToEditModeIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-edit\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 16\n      }\n    });\n  }\n\n  singleProductSwitchToReadMode() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Switch to Read Mode\",\n      subHeader: \"this will turn off all the the web form text boxes, drop-downs and such so you can read this easier.\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: singleProductSwitchToReadModeIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-read-mode\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 16\n      }\n    });\n  }\n\n  insertColumn() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Insert new Attribute/Column\",\n      subHeader: \"Insert a new attribute, this will make a new column.\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: insertColumnIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-add-invert\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 16\n      }\n    });\n  }\n\n  clearSelection() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Clear Selection\",\n      subHeader: \"Unselect items & cancel current activity.\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: clearSelectionIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 25\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"clear\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 13\n      }\n    });\n  }\n\n  continueWizard() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Continue To Next Step\",\n      subHeader: \"We'll walk you through a few steps to help you a bit.\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: continueWizardIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 25\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"clear\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 13\n      }\n    });\n  }\n\n  goBackWizard() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Go Back To Last Step\",\n      subHeader: \"Whoops! Nevermind... let's go back a bit.\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: goBackWizardIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 25\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"clear\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 13\n      }\n    });\n  }\n\n  insertFromStagingArea() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Insert Into Catalog\",\n      subHeader: \"Insert these items into your catalog\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: insertFromStagingIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 25\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"clear\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 13\n      }\n    });\n  }\n\n  clickDragGrid() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Click & Drag\",\n      subHeader: \"Click & drag to select & edit multiple cells\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: clickDragGridCells,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 25\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"clear\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 13\n      }\n    });\n  }\n\n  imageThumbnailPreview(imagePath) {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"\",\n      subHeader: \"\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-photo\",\n        src: imagePath,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 16\n      }\n    });\n  }\n\n  columnHeaderToolTips(tipName) {\n    switch (tipName) {\n      case \"ReferenceImage\":\n        return /*#__PURE__*/React.createElement(ToolTipContent, {\n          header: \"Reference Image\",\n          subHeader: \"This is just to help you identify the product visually while you're working\",\n          copy: /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            className: \"tooltip-illustration\",\n            src: referenceImageIllustration,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 33\n            }\n          })),\n          tooltipType: \"deluxe\",\n          icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n            iconName: \"info-icon-image\",\n            classes: \"\",\n            height: \"1.5rem\",\n            width: \"1.5rem\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 737,\n              columnNumber: 29\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 21\n          }\n        });\n\n      case \"PartNumber\":\n        return /*#__PURE__*/React.createElement(ToolTipContent, {\n          header: \"Part Number\",\n          subHeader: \"Must be unique, ideally you would use your existing descriptive part number\",\n          copy: /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            className: \"tooltip-illustration\",\n            src: partNumberIllustration,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 33\n            }\n          })),\n          tooltipType: \"deluxe\",\n          icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n            iconName: \"info-icon-part-number\",\n            classes: \"\",\n            height: \"1.5rem\",\n            width: \"1.5rem\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 29\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 21\n          }\n        });\n\n      case \"ProductGroup\":\n        return /*#__PURE__*/React.createElement(ToolTipContent, {\n          header: \"Product Group\",\n          subHeader: \"To group products give items that have a relationship the same product name\",\n          copy: /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            className: \"tooltip-illustration\",\n            src: productGroupsIllustration,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 33\n            }\n          })),\n          tooltipType: \"deluxe\",\n          icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n            iconName: \"icon-add-invert\",\n            classes: \"\",\n            height: \"1.5rem\",\n            width: \"1.5rem\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 29\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 21\n          }\n        });\n\n      case \"ProductName\":\n        return /*#__PURE__*/React.createElement(ToolTipContent, {\n          header: \"Product Name\",\n          subHeader: \"Give each item a friendly human-readable name, this may or may not be used by Wayfair in the white-labeling process\",\n          copy: /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            className: \"tooltip-illustration\",\n            src: productNamingIllustration,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 33\n            }\n          })),\n          tooltipType: \"deluxe\",\n          icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n            iconName: \"info-icon-product-name\",\n            classes: \"\",\n            height: \"1.5rem\",\n            width: \"1.5rem\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 29\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 21\n          }\n        });\n\n      case \"Class\":\n        return /*#__PURE__*/React.createElement(ToolTipContent, {\n          header: \"Class\",\n          subHeader: \"The Product Class is the species of product, by selecting a class you will define a set of attributes/column heads to describe that product\",\n          copy: /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            className: \"tooltip-illustration\",\n            src: classesIllustrationIllustration,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 33\n            }\n          })),\n          tooltipType: \"deluxe\",\n          icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n            iconName: \"icon-add-invert\",\n            classes: \"\",\n            height: \"1.5rem\",\n            width: \"1.5rem\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 29\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 815,\n            columnNumber: 21\n          }\n        });\n    }\n\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      subHeader: \"\",\n      copy: tipName,\n      tooltipType: \"basic\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-add-invert\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 13\n      }\n    });\n  }\n\n  tutorialEditGrid() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"You Can Edit Right in This Grid!\",\n      subHeader: \"This grid is editable, click in to try it (don't worry you can undo/redo)\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tutorial-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: goBackWizardIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: goBackWizardIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: goBackWizardIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 25\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"clear\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n;\nexport let toolTipContent = new toolTipsLibrary();","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/tool-tip-content/content-tool-tips.tsx"],"names":["React","CatmanIcon","ToolTipContent","ContentToolTips","Component","constructor","props","render","toolTip","toolTipsLibrary","showSelectRow","showSingleProduct","showCloseDrawer","showMaximizeDrawer","checkGridTutorial","mainNav","footerCancel","footerDelete","deleteRowIllustration","deleteItem","deleteItemIllustration","footerEditSelection","editItemIllustration","footerAddVariant","addVariantIllustrationIllustration","footerCreateVariant","createVariantGroupIllustrationIllustration","singleProduct","selectRow","closeDrawer","closeDrawerIllustration","closeModal","closeModalIllustration","restoreDrawer","restoreDrawerIllustration","maximizeDrawer","maximizeDrawerIllustration","addProducts","addBlankStubs","dragUploadFiles","dragFilesIllustration","goBackToSpreadsheet","backToSpreadsheetIllustration","singleProductSwitchToEditMode","singleProductSwitchToEditModeIllustration","singleProductSwitchToReadMode","singleProductSwitchToReadModeIllustration","insertColumn","insertColumnIllustration","clearSelection","clearSelectionIllustration","continueWizard","continueWizardIllustration","goBackWizard","goBackWizardIllustration","insertFromStagingArea","insertFromStagingIllustration","clickDragGrid","clickDragGridCells","imageThumbnailPreview","imagePath","columnHeaderToolTips","tipName","referenceImageIllustration","partNumberIllustration","productGroupsIllustration","productNamingIllustration","classesIllustrationIllustration","tutorialEditGrid","toolTipContent"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport {ToolTipContent} from \"../../view-components/heru-tool-tip/tool-tip-content\";\n\nimport addVariantIllustrationIllustration from \"../../images/SVG/add-variant.svg\"\nimport createVariantGroupIllustrationIllustration from \"../../images/SVG/create-variant-group.svg\"\nimport maximizeDrawerIllustration from \"../../images/SVG/maximize-drawer.svg\"\nimport closeDrawerIllustration from \"../../images/SVG/close-drawer.svg\"\nimport restoreDrawerIllustration from \"../../images/SVG/restore-drawer.svg\"\nimport closeModalIllustration from \"../../images/SVG/close-modal-and-cancel.svg\"\nimport dragFilesIllustration from \"../../images/SVG/drag-files.svg\"\nimport backToSpreadsheetIllustration from \"../../images/SVG/back-to-spreadsheet.svg\"\nimport singleProductSwitchToEditModeIllustration from \"../../images/SVG/sitch-to-edit-mode.svg\"\nimport singleProductSwitchToReadModeIllustration from \"../../images/SVG/switch-to-read-only.svg\"\nimport insertColumnIllustration from \"../../images/SVG/illustration-insert.svg\"\nimport partNumberIllustration from \"../../images/SVG/tooltip-part-number.svg\"\nimport productGroupsIllustration from \"../../images/SVG/tooltip-product-groups.svg\"\nimport referenceImageIllustration from \"../../images/SVG/tooltip-reference-image.svg\"\nimport classesIllustrationIllustration from \"../../images/SVG/illustration-classes.svg\"\nimport clearSelectionIllustration from \"../../images/SVG/illustration-clear-selection.svg\"\nimport deleteItemIllustration from \"../../images/SVG/illustration-delete-items.svg\"\nimport deleteRowIllustration from \"../../images/SVG/illustration-delete-rows.svg\"\nimport editItemIllustration from \"../../images/SVG/illustration-edit.svg\"\nimport insertFromStagingIllustration from \"../../images/SVG/illustration-insert-from-staging.svg\"\nimport continueWizardIllustration from \"../../images/SVG/illustration-continue-next-step.svg\"\nimport goBackWizardIllustration from \"../../images/SVG/illustration-wizard-go-back.svg\"\nimport productNamingIllustration from \"../../images/SVG/illustration-product-name.svg\"\nimport clickDragGridCells from \"../../images/SVG/illustration-click-drag-cells.svg\"\n\nimport tutBulkEdit from \"../../images/SVG/illustration-bulk-edit.svg\"\nimport tutEditWithDrawer from \"../../images/SVG/illustration-edit-with-drawer.svg\"\nimport tutFooter from \"../../images/SVG/illustration-footer-menu.svg\"\n\n\n\ninterface iSTATE{\n\n}\n\ninterface iPROPS{\n\n}\n\nexport class ContentToolTips extends React.Component<iPROPS, iSTATE>{\n    constructor(props : iPROPS) {\n        super(props);\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        let toolTip = (<></>);\n        return toolTip;\n    }\n}\n\n\nexport class toolTipsLibrary {\n    showSelectRow : boolean = true;\n    showSingleProduct : boolean = true;\n    showCloseDrawer : number = 0;\n    showMaximizeDrawer : number = 0;\n\n    checkGridTutorial : number = 0;\n\n    mainNav(){\n    return(<ToolTipContent\n              header=\"Navigation\"\n              copy=\"Use this menu to access different sections of the app\"\n              tooltipType=\"deluxe\"\n              icon={\n                  <CatmanIcon\n                      iconName=\"compass\"\n                      classes=\"\"\n                      height=\"1.5rem\"\n                      width=\"1.5rem\"\n                  />\n              }\n        />)\n    }\n\n    footerCancel(){\n        return(<ToolTipContent\n            header=\"Cancel\"\n            copy=\"Close this menu and clear selected rows\"\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"cancel\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    footerDelete(){\n        return(<ToolTipContent\n            header=\"Delete Selected\"\n            subHeader=\"Permanently destroy the product data in selected rows\"\n            copy={(\n                <div>\n                    <img className=\"tooltip-illustration\" src={deleteRowIllustration}/>\n                </div>\n            )}\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-delete\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    deleteItem(){\n        return(<ToolTipContent\n            header=\"Delete Selected\"\n            subHeader=\"Permanently destroy the selected product data\"\n            copy={(\n                <div>\n                    <img className=\"tooltip-illustration\" src={deleteItemIllustration}/>\n                </div>\n            )}\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-delete\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    footerEditSelection(){\n        return(<ToolTipContent\n            header=\"Edit Selected Rows\"\n            subHeader=\"Switch to cell-editing mode\"\n            copy={(\n                <div>\n                    <img className=\"tooltip-illustration\" src={editItemIllustration}/>\n                </div>\n            )}\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-edit\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    footerAddVariant(){\n        return(<ToolTipContent\n            header=\"Add Product as a Variant\"\n            subHeader=\"Create a new product and add it to the selected product's group\"\n            copy={(\n                <div>\n                    <img className=\"tooltip-illustration\" src={addVariantIllustrationIllustration}/>\n                </div>\n            )}\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-add\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    footerCreateVariant(){\n        return(<ToolTipContent\n            header=\"Create New Product Group from Selection\"\n            subHeader=\"Create a new product variants group from the selected items.\"\n            copy={(\n                <div>\n                    <img className=\"tooltip-illustration\" src={createVariantGroupIllustrationIllustration}/>\n                </div>\n            )}\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-add\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    singleProduct(){\n        if(this.showSingleProduct === true){\n            return (\n                <ToolTipContent\n                    header=\"Edit This Product\"\n                    subHeader=\"Edit this row in a single page.\"\n                    copy={(\n                        <div>\n                            <ul>\n                                <li>Web form style page</li>\n                                <li>View and Associate Media</li>\n                                <li>See variants of this product</li>\n                                <li>So much more...</li>\n                            </ul>\n                        </div>\n                    )}\n\n                    tooltipType=\"deluxe\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"single-product\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />\n            );\n        }else{\n            return (\n                <ToolTipContent\n                    header=\"Edit This Product\"\n                    subHeader=\"Select rows to delete, create groups, add variants to groups\"\n                    copy=\"\"\n                    tooltipType=\"empty\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"single-product\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />\n            );\n        }\n    }\n\n    selectRow(){\n        if(this.showSelectRow === true){\n            return (\n                <ToolTipContent\n                    header=\"Select Rows\"\n                    subHeader=\"Select rows to perform actions on them.\"\n                    copy={(\n                        <div>\n                            <ul>\n                                <li>Delete items from catalog</li>\n                                <li>Create product groupings</li>\n                                <li>Add Variants to product groups</li>\n                            </ul>\n                        </div>\n                    )}\n\n                    tooltipType=\"deluxe\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"select-row\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />\n            );\n        }else{\n            return (\n                <ToolTipContent\n                    header=\"\"\n                    copy={(\n                        <div>\n                            <p>Select rows to delete, create groups, add variants to groups</p>\n                        </div>\n                    )}\n\n                    tooltipType=\"empty\"\n\n                />\n            );\n        }\n    }\n\n    closeDrawer(){\n        if(this.showCloseDrawer < 4){\n            return(\n                <ToolTipContent\n                    header=\"Close Drawer\"\n                    subHeader=\"Close edit drawer and clear cell selection set\"\n                    copy={(\n                        <div>\n                            <img className=\"tooltip-illustration\" src={closeDrawerIllustration}/>\n                        </div>\n                    )}\n                    tooltipType=\"deluxe\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"close-icon\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />\n                )\n        }else{\n            return(<ToolTipContent\n                header=\"Close Drawer\"\n                copy={(\n                    <div>\n                        <p>Close drawer and clear selection.</p>\n                    </div>\n                )}\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"icon-close\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />)\n        }\n    }\n\n    closeModal(){\n        if(this.showCloseDrawer < 4){\n            return(\n                <ToolTipContent\n                    header=\"Close & Cancel\"\n                    subHeader=\"Close this window, you'll lose any work you've done in the window.\"\n                    copy={(\n                        <div>\n                            <img className=\"tooltip-illustration\" src={closeModalIllustration}/>\n                        </div>\n                    )}\n                    tooltipType=\"deluxe\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"close-icon\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />\n            )\n        }else{\n            return(<ToolTipContent\n                header=\"Close Drawer\"\n                copy={(\n                    <div>\n                        <p>Close drawer and clear selection.</p>\n                    </div>\n                )}\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"icon-close\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />)\n        }\n    }\n\n    restoreDrawer(){\n        return(\n            <ToolTipContent\n                header=\"Restore Drawer\"\n                subHeader=\"Restore drawer so the grid is in view again.\"\n                copy={(\n                    <div>\n                        <img className=\"tooltip-illustration\" src={restoreDrawerIllustration}/>\n                    </div>\n                )}\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"icon-restore-tooltip\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        )\n    }\n\n    maximizeDrawer(){\n        if(this.showMaximizeDrawer < 4){\n            return(<ToolTipContent\n                header=\"Maximize Drawer\"\n                subHeader=\"Expand the edit area\"\n                copy={(\n                    <div>\n                        <img className=\"tooltip-illustration\" src={maximizeDrawerIllustration}/>\n                    </div>\n                )}\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"icon-maximize-tooltip\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />)\n        }else{\n            return(<ToolTipContent\n                header=\"Maximize Drawer\"\n                copy={(\n                    <div>\n                        <p>Expand the edit area.</p>\n                    </div>\n                )}\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"icon-maximize-tooltip\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />)\n        }\n    }\n\n    addProducts(){\n        return(\n            <ToolTipContent\n                header=\"Add or Update Products\"\n                subHeader=\"Add or update product data in YOUR catalog and then publish to Wayfair when you're ready.\"\n                copy={(\n                    <div>\n                        <ul>\n                            <li>Add new blank products as stubs</li>\n                            <li>Extract product data from files like Excel sheets and images</li>\n                            <li>Upload media like photos and associate to products</li>\n                            <li>Add product variants for groups (like a red, yellow and green versions of a product).</li>\n                            <li>So much more...</li>\n                        </ul>\n                    </div>\n                )}\n\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"single-product\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        )\n    }\n\n    addBlankStubs(){\n        return(<ToolTipContent\n            header=\"Add Blank Product Stubs\"\n            copy=\"This functionality available yet\"\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-add-invert\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    dragUploadFiles(){\n        return(<ToolTipContent\n            header=\"Upload Files Here\"\n            subHeader=\"Drag files from your computer's folder onto this to upload them, or click to browse your computer.\"\n            copy={\n                    <div>\n                        <img className=\"tooltip-illustration\" src={dragFilesIllustration}/>\n                    </div>\n                }\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-add-invert\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    goBackToSpreadsheet(){\n        return(<ToolTipContent\n            header=\"Go back to the Spreadsheet View\"\n            subHeader=\"Any edits you made in the Single Product view will be saved\"\n            copy={\n                <div>\n                    <img className=\"tooltip-illustration\" src={backToSpreadsheetIllustration}/>\n                </div>\n            }\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-add-invert\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    singleProductSwitchToEditMode(){\n        return(<ToolTipContent\n            header=\"Switch to edit Mode\"\n            subHeader=\"this will turn this view into a web form style page with textboxes, dop-downs and such so you can edit this product's data\"\n            copy={\n                <div>\n                    <img className=\"tooltip-illustration\" src={singleProductSwitchToEditModeIllustration}/>\n                </div>\n            }\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-edit\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    singleProductSwitchToReadMode(){\n        return(<ToolTipContent\n            header=\"Switch to Read Mode\"\n            subHeader=\"this will turn off all the the web form text boxes, drop-downs and such so you can read this easier.\"\n            copy={\n                <div>\n                    <img className=\"tooltip-illustration\" src={singleProductSwitchToReadModeIllustration}/>\n                </div>\n            }\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-read-mode\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    insertColumn(){\n        return(<ToolTipContent\n            header=\"Insert new Attribute/Column\"\n            subHeader=\"Insert a new attribute, this will make a new column.\"\n            copy={\n                <div>\n                    <img className=\"tooltip-illustration\" src={insertColumnIllustration}/>\n                </div>\n            }\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-add-invert\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    clearSelection(){\n        return(\n            <ToolTipContent\n                header=\"Clear Selection\"\n                subHeader=\"Unselect items & cancel current activity.\"\n                copy={\n                    <div>\n                        <img className=\"tooltip-illustration\" src={clearSelectionIllustration}/>\n                    </div>\n                }\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"clear\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        )\n    }\n\n    continueWizard(){\n        return(\n            <ToolTipContent\n                header=\"Continue To Next Step\"\n                subHeader=\"We'll walk you through a few steps to help you a bit.\"\n                copy={\n                    <div>\n                        <img className=\"tooltip-illustration\" src={continueWizardIllustration}/>\n                    </div>\n                }\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"clear\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        )\n    }\n\n    goBackWizard(){\n        return(\n            <ToolTipContent\n                header=\"Go Back To Last Step\"\n                subHeader=\"Whoops! Nevermind... let's go back a bit.\"\n                copy={\n                    <div>\n                        <img className=\"tooltip-illustration\" src={goBackWizardIllustration}/>\n                    </div>\n                }\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"clear\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        )\n    }\n\n    insertFromStagingArea(){\n        return(\n            <ToolTipContent\n                header=\"Insert Into Catalog\"\n                subHeader=\"Insert these items into your catalog\"\n                copy={\n                    <div>\n                        <img className=\"tooltip-illustration\" src={insertFromStagingIllustration}/>\n                    </div>\n                }\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"clear\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        )\n    }\n\n    clickDragGrid(){\n        return(\n            <ToolTipContent\n                header=\"Click & Drag\"\n                subHeader=\"Click & drag to select & edit multiple cells\"\n                copy={\n                    <div>\n                        <img className=\"tooltip-illustration\" src={clickDragGridCells}/>\n                    </div>\n                }\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"clear\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        )\n    }\n\n    imageThumbnailPreview(imagePath : string){\n        return(<ToolTipContent\n            header=\"\"\n            subHeader=\"\"\n            copy={\n                <div>\n                    <img className=\"tooltip-photo\" src={imagePath}/>\n                </div>\n            }\n            tooltipType=\"media\"\n\n        />)\n    }\n\n    columnHeaderToolTips(tipName : string) {\n        switch (tipName) {\n            case \"ReferenceImage\":\n                return(\n                    <ToolTipContent\n                        header=\"Reference Image\"\n                        subHeader=\"This is just to help you identify the product visually while you're working\"\n                        copy={\n                            <div>\n                                <img className=\"tooltip-illustration\" src={referenceImageIllustration}/>\n                            </div>\n                        }\n                        tooltipType=\"deluxe\"\n                        icon={\n                            <CatmanIcon\n                                iconName=\"info-icon-image\"\n                                classes=\"\"\n                                height=\"1.5rem\"\n                                width=\"1.5rem\"\n                            />\n                        }\n                    />\n                );\n\n            case \"PartNumber\":\n                return(\n                    <ToolTipContent\n                        header=\"Part Number\"\n                        subHeader=\"Must be unique, ideally you would use your existing descriptive part number\"\n                        copy={\n                            <div>\n                                <img className=\"tooltip-illustration\" src={partNumberIllustration}/>\n                            </div>\n                        }\n                        tooltipType=\"deluxe\"\n                        icon={\n                            <CatmanIcon\n                                iconName=\"info-icon-part-number\"\n                                classes=\"\"\n                                height=\"1.5rem\"\n                                width=\"1.5rem\"\n                            />\n                        }\n                    />\n                );\n\n            case \"ProductGroup\":\n                return(\n                    <ToolTipContent\n                        header=\"Product Group\"\n                        subHeader=\"To group products give items that have a relationship the same product name\"\n                        copy={\n                            <div>\n                                <img className=\"tooltip-illustration\" src={productGroupsIllustration}/>\n                            </div>\n                        }\n                        tooltipType=\"deluxe\"\n                        icon={\n                            <CatmanIcon\n                                iconName=\"icon-add-invert\"\n                                classes=\"\"\n                                height=\"1.5rem\"\n                                width=\"1.5rem\"\n                            />\n                        }\n                    />\n                );\n\n            case \"ProductName\":\n                return(\n                    <ToolTipContent\n                        header=\"Product Name\"\n                        subHeader=\"Give each item a friendly human-readable name, this may or may not be used by Wayfair in the white-labeling process\"\n                        copy={\n                            <div>\n                                <img className=\"tooltip-illustration\" src={productNamingIllustration}/>\n                            </div>\n                        }\n                        tooltipType=\"deluxe\"\n                        icon={\n                            <CatmanIcon\n                                iconName=\"info-icon-product-name\"\n                                classes=\"\"\n                                height=\"1.5rem\"\n                                width=\"1.5rem\"\n                            />\n                        }\n                    />\n                );\n\n            case \"Class\":\n                return(\n                    <ToolTipContent\n                        header=\"Class\"\n                        subHeader=\"The Product Class is the species of product, by selecting a class you will define a set of attributes/column heads to describe that product\"\n                        copy={\n                            <div>\n                                <img className=\"tooltip-illustration\" src={classesIllustrationIllustration}/>\n                            </div>\n                        }\n                        tooltipType=\"deluxe\"\n                        icon={\n                            <CatmanIcon\n                                iconName=\"icon-add-invert\"\n                                classes=\"\"\n                                height=\"1.5rem\"\n                                width=\"1.5rem\"\n                            />\n                        }\n                    />\n                );\n\n        }\n\n        return(\n            <ToolTipContent\n                subHeader=\"\"\n                copy={tipName}\n                tooltipType=\"basic\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"icon-add-invert\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        );\n    }\n\n\n    tutorialEditGrid(){\n        return(\n            <ToolTipContent\n                header=\"You Can Edit Right in This Grid!\"\n                subHeader=\"This grid is editable, click in to try it (don't worry you can undo/redo)\"\n                copy={\n                    <div className=\"tutorial-group\">\n                        <img className=\"tooltip-illustration\" src={goBackWizardIllustration}/>\n                        <img className=\"tooltip-illustration\" src={goBackWizardIllustration}/>\n                        <img className=\"tooltip-illustration\" src={goBackWizardIllustration}/>\n                    </div>\n                }\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"clear\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        )\n    }\n};\n\n\n\nexport let toolTipContent = new toolTipsLibrary();"]},"metadata":{},"sourceType":"module"}