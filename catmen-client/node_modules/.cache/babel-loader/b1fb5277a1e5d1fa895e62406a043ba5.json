{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/data-components/data-manager/data-manager.tsx\";\nimport * as React from \"react\";\nimport { toolTipContent } from \"../../views/tool-tip-content/content-tool-tips\";\nexport class DataManager {\n  constructor(productData) {\n    this.productData = void 0;\n    this.productData = productData;\n  }\n\n  get getColumns() {\n    let testMenu = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#cecece\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }\n    }, \"Menu\");\n    return [{\n      validation: \"\",\n      columnName: \"uniqueID\",\n      columnLabel: \" \",\n      columnMenu: testMenu,\n      columnType: \"hidden\",\n      control: \"hidden\",\n      tooltipType: \"custom\",\n      toolTip: \"this is non-editable unique id\"\n    }, {\n      validation: \"\",\n      columnName: \"ReferenceImage\",\n      columnLabel: \"Reference Image\",\n      columnMenu: testMenu,\n      columnType: \"standard\",\n      control: \"media\",\n      tooltipType: \"custom\",\n      toolTip: toolTipContent.columnHeaderToolTips(\"ReferenceImage\")\n    }, {\n      columnName: \"PartNumber\",\n      columnLabel: \"Part Number \",\n      columnMenu: testMenu,\n      columnType: \"required\",\n      control: \"text-input\",\n      tooltipType: \"custom\",\n      toolTip: toolTipContent.columnHeaderToolTips(\"PartNumber\")\n    }, {\n      columnName: \"ProductGroup\",\n      columnLabel: \"Product Group\",\n      columnMenu: testMenu,\n      columnType: \"standard\",\n      control: \"text-input\",\n      tooltipType: \"custom\",\n      toolTip: toolTipContent.columnHeaderToolTips(\"ProductGroup\")\n    }, {\n      columnName: \"ProductName\",\n      columnLabel: \"Product Name\",\n      columnMenu: testMenu,\n      columnType: \"standard\",\n      control: \"text-input\",\n      tooltipType: \"custom\",\n      toolTip: toolTipContent.columnHeaderToolTips(\"ProductName\")\n    }, {\n      columnName: \"Class\",\n      columnLabel: \"Class\",\n      columnMenu: testMenu,\n      columnType: \"standard\",\n      control: \"text-input\",\n      tooltipType: \"custom\",\n      toolTip: toolTipContent.columnHeaderToolTips(\"Class\")\n    }, {\n      columnName: \"ProductType\",\n      columnLabel: \"Product Type\",\n      columnMenu: testMenu,\n      columnType: \"standard\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      columnName: \"OverallDimensions\",\n      columnLabel: \"Overall Dimensions\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      columnName: \"OverallDepth\",\n      columnLabel: \"Overall Depth\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      columnName: \"OverallHeight\",\n      columnLabel: \"Overall Height\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      columnName: \"OverallLength\",\n      columnLabel: \"Overall Length\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      columnName: \"Seat\",\n      columnLabel: \"Seat\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      columnName: \"ArmHeightFloorToArm\",\n      columnLabel: \"Arm Height - Floor to Arm\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      columnName: \"BackHeightSeatToTopOfBack\",\n      columnLabel: \"Back Height - Seat to Top of Back\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      columnName: \"FullyReclinedDepthFrontToBack\",\n      columnLabel: \"Fully Reclined Depth - Front to Back\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      columnName: \"LegHeightTopToBottom\",\n      columnLabel: \"Leg Height - Top to Bottom\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      columnName: \"ClearanceFromFloorToBottomOfSofa\",\n      columnLabel: \"Clearance from Floor to Bottom of Sofa\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }];\n  }\n\n  get getData() {\n    return this.productData;\n  }\n\n  addToProductGroup() {\n    let stub = this.productData[0];\n    this.productData.push(stub);\n  }\n\n  getGroups() {\n    let groupsAll = []; //first walk is extract all the product groups, then we'll remove duplicates\n\n    i: for (let i = 0; i < this.productData.length; i++) {\n      for (let j = 0; j < this.productData[i].length; j++) {\n        if (this.productData[i][j].columnName === \"ProductGroup\") {\n          groupsAll.push(this.productData[i][j].value);\n          continue i;\n        }\n      }\n    } //second walk over groups to remove duplicates\n\n\n    let finalGroups = [];\n\n    i: for (let i = 0; i < groupsAll.length; i++) {\n      if (i === 0) {\n        finalGroups.push(groupsAll[i]);\n        continue i;\n      }\n\n      for (let j = 0; j < finalGroups.length; j++) {\n        if (finalGroups[j] === groupsAll[i]) {\n          continue i;\n        }\n\n        if (j === finalGroups.length - 1) {\n          finalGroups.push(groupsAll[i]);\n        }\n      }\n    }\n\n    console.log(finalGroups);\n    return finalGroups;\n  } //update package is type iUpdateSet = {row : number, cell : number, newData:string}\n\n\n  set setProductData(updatePackage) {\n    this.productData[updatePackage.row][updatePackage.cell].value = updatePackage.newData;\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/data-components/data-manager/data-manager.tsx"],"names":["React","toolTipContent","DataManager","constructor","productData","getColumns","testMenu","backgroundColor","validation","columnName","columnLabel","columnMenu","columnType","control","tooltipType","toolTip","columnHeaderToolTips","getData","addToProductGroup","stub","push","getGroups","groupsAll","i","length","j","value","finalGroups","console","log","setProductData","updatePackage","row","cell","newData"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {iDataGridItem} from \"../../view-components/data-grid/data-types-for-data-grid\";\nimport {iColumn} from \"../../_sample-data/columns\";\nimport {toolTipContent} from \"../../views/tool-tip-content/content-tool-tips\";\n\nexport type validationActions = \"required\" | \"custom\";\n\ninterface iDataManager {\n    productData : iDataGridItem[][];\n}\n\nexport type iUpdateSet = {row : number, cell : number, newData:string}\n\nexport class DataManager implements iDataManager{\n    productData : iDataGridItem[][];\n    constructor(productData : iDataGridItem[][]) {\n        this.productData = productData;\n    }\n\n    get getColumns() : iColumn[]{\n        let testMenu = (<div style={{backgroundColor : \"#cecece\"}}>Menu</div>);\n\n        return [\n            {\n                validation : \"\",\n                columnName : \"uniqueID\",\n                columnLabel : \" \",\n                columnMenu : testMenu,\n                columnType : \"hidden\",\n                control : \"hidden\",\n                tooltipType : \"custom\",\n                toolTip : \"this is non-editable unique id\"\n            },\n            {\n                validation : \"\",\n                columnName : \"ReferenceImage\",\n                columnLabel : \"Reference Image\",\n                columnMenu : testMenu,\n                columnType : \"standard\",\n                control : \"media\",\n                tooltipType : \"custom\",\n                toolTip : toolTipContent.columnHeaderToolTips(\"ReferenceImage\")\n            },\n            {\n                columnName : \"PartNumber\",\n                columnLabel : \"Part Number \",\n                columnMenu : testMenu,\n                columnType : \"required\",\n                control : \"text-input\",\n                tooltipType : \"custom\",\n                toolTip : toolTipContent.columnHeaderToolTips(\"PartNumber\")\n            },\n            {\n                columnName : \"ProductGroup\",\n                columnLabel : \"Product Group\",\n                columnMenu : testMenu,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"custom\",\n                toolTip : toolTipContent.columnHeaderToolTips(\"ProductGroup\")\n            },\n            {\n                columnName : \"ProductName\",\n                columnLabel : \"Product Name\",\n                columnMenu : testMenu,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"custom\",\n                toolTip : toolTipContent.columnHeaderToolTips(\"ProductName\")\n            },\n            {\n                columnName : \"Class\",\n                columnLabel : \"Class\",\n                columnMenu : testMenu,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"custom\",\n                toolTip : toolTipContent.columnHeaderToolTips(\"Class\")\n            },\n            {\n                columnName : \"ProductType\",\n                columnLabel : \"Product Type\",\n                columnMenu : testMenu,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                columnName : \"OverallDimensions\",\n                columnLabel : \"Overall Dimensions\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n\n\n            {\n                columnName : \"OverallDepth\",\n                columnLabel : \"Overall Depth\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                columnName : \"OverallHeight\",\n                columnLabel : \"Overall Height\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                columnName : \"OverallLength\",\n                columnLabel : \"Overall Length\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                columnName : \"Seat\",\n                columnLabel : \"Seat\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                columnName : \"ArmHeightFloorToArm\",\n                columnLabel : \"Arm Height - Floor to Arm\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                columnName : \"BackHeightSeatToTopOfBack\",\n                columnLabel : \"Back Height - Seat to Top of Back\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                columnName : \"FullyReclinedDepthFrontToBack\",\n                columnLabel : \"Fully Reclined Depth - Front to Back\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                columnName : \"LegHeightTopToBottom\",\n                columnLabel : \"Leg Height - Top to Bottom\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                columnName : \"ClearanceFromFloorToBottomOfSofa\",\n                columnLabel : \"Clearance from Floor to Bottom of Sofa\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            }\n\n\n        ]\n    }\n\n    get getData():iDataGridItem[][]{\n        return this.productData;\n    }\n\n    addToProductGroup(){\n        let stub = this.productData[0];\n        this.productData.push(stub);\n    }\n\n    getGroups():string[]{\n        let groupsAll : string[] = [];\n\n        //first walk is extract all the product groups, then we'll remove duplicates\n        i: for( let i=0; i < this.productData.length; i++){\n                for(let j=0; j < this.productData[i].length; j++){\n                    if(this.productData[i][j].columnName === \"ProductGroup\"){\n                        groupsAll.push(this.productData[i][j].value);\n                        continue i;\n                    }\n                }\n            }\n\n        //second walk over groups to remove duplicates\n        let finalGroups = [];\n        i: for(let i=0; i < groupsAll.length; i++){\n            if(i===0){\n                finalGroups.push(groupsAll[i]);\n                continue i;\n            }\n\n            for(let j=0; j < finalGroups.length; j++){\n                if( finalGroups[j] === groupsAll[i]){\n                    continue i;\n                }\n                if( j === finalGroups.length - 1){\n                    finalGroups.push(groupsAll[i])\n                }\n            }\n        }\n\n        console.log(finalGroups);\n            return finalGroups;\n    }\n\n    //update package is type iUpdateSet = {row : number, cell : number, newData:string}\n    set setProductData(updatePackage : iUpdateSet){\n        this.productData[updatePackage.row][updatePackage.cell].value = updatePackage.newData;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}