{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/data-components/data-manager/data-manager.tsx\";\nimport * as React from \"react\";\nimport { toolTipContent } from \"../../views/tool-tip-content/content-tool-tips\";\nimport { mediaLibraryData } from \"../../_sample-data/media-library\";\nexport class DataManager {\n  constructor(productData) {\n    this.productData = void 0;\n    this.productData = productData;\n  }\n\n  get getColumns() {\n    let testMenu = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#cecece\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }, \"Menu\");\n    return [{\n      validationAction: [],\n      columnName: \"uniqueID\",\n      columnLabel: \" \",\n      columnMenu: testMenu,\n      columnType: \"hidden\",\n      control: \"hidden\",\n      tooltipType: \"custom\",\n      toolTip: \"this is non-editable unique id\"\n    }, {\n      validationAction: [],\n      columnName: \"ReferenceImage\",\n      columnLabel: \"Reference Image\",\n      columnMenu: testMenu,\n      columnType: \"standard\",\n      control: \"media\",\n      tooltipType: \"custom\",\n      toolTip: toolTipContent.columnHeaderToolTips(\"ReferenceImage\")\n    }, {\n      validationAction: [\"no-duplicates\", \"required\"],\n      columnName: \"PartNumber\",\n      columnLabel: \"Part Number \",\n      columnMenu: testMenu,\n      columnType: \"required\",\n      control: \"text-input\",\n      tooltipType: \"custom\",\n      toolTip: toolTipContent.columnHeaderToolTips(\"PartNumber\")\n    }, {\n      validationAction: [],\n      columnName: \"ProductGroup\",\n      columnLabel: \"Product Group\",\n      columnMenu: testMenu,\n      columnType: \"standard\",\n      control: \"text-input\",\n      tooltipType: \"custom\",\n      toolTip: toolTipContent.columnHeaderToolTips(\"ProductGroup\")\n    }, {\n      validationAction: [],\n      columnName: \"ProductName\",\n      columnLabel: \"Product Name\",\n      columnMenu: testMenu,\n      columnType: \"standard\",\n      control: \"text-input\",\n      tooltipType: \"custom\",\n      toolTip: toolTipContent.columnHeaderToolTips(\"ProductName\")\n    }, {\n      validationAction: [],\n      columnName: \"Class\",\n      columnLabel: \"Class\",\n      columnMenu: testMenu,\n      columnType: \"standard\",\n      control: \"text-input\",\n      tooltipType: \"custom\",\n      toolTip: toolTipContent.columnHeaderToolTips(\"Class\")\n    }, {\n      validationAction: [],\n      columnName: \"ProductType\",\n      columnLabel: \"Product Type\",\n      columnMenu: testMenu,\n      columnType: \"standard\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      validationAction: [],\n      columnName: \"OverallDimensions\",\n      columnLabel: \"Overall Dimensions\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      validationAction: [],\n      columnName: \"OverallDepth\",\n      columnLabel: \"Overall Depth\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      validationAction: [],\n      columnName: \"OverallHeight\",\n      columnLabel: \"Overall Height\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      validationAction: [],\n      columnName: \"OverallLength\",\n      columnLabel: \"Overall Length\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      validationAction: [],\n      columnName: \"Seat\",\n      columnLabel: \"Seat\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      validationAction: [],\n      columnName: \"ArmHeightFloorToArm\",\n      columnLabel: \"Arm Height - Floor to Arm\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      validationAction: [],\n      columnName: \"BackHeightSeatToTopOfBack\",\n      columnLabel: \"Back Height - Seat to Top of Back\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      validationAction: [],\n      columnName: \"FullyReclinedDepthFrontToBack\",\n      columnLabel: \"Fully Reclined Depth - Front to Back\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      validationAction: [],\n      columnName: \"LegHeightTopToBottom\",\n      columnLabel: \"Leg Height - Top to Bottom\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      validationAction: [],\n      columnName: \"ClearanceFromFloorToBottomOfSofa\",\n      columnLabel: \"Clearance from Floor to Bottom of Sofa\",\n      columnMenu: testMenu,\n      columnType: \"user-gen\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }];\n  }\n\n  get getProductData() {\n    return this.productData;\n  }\n\n  getMediaData() {\n    //TODO replace this with a proper data service\n    return mediaLibraryData;\n  }\n\n  getMediaColumnsForGrid() {\n    let mediaColumns = [{\n      validationAction: [],\n      columnName: \"uniqueId\",\n      columnLabel: \"Unique ID\",\n      columnMenu: /*#__PURE__*/React.createElement(React.Fragment, null),\n      columnType: \"hidden\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      validationAction: [],\n      columnName: \"mediaPath\",\n      columnLabel: \"Media Path\",\n      columnMenu: /*#__PURE__*/React.createElement(React.Fragment, null),\n      columnType: \"standard\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      validationAction: [],\n      columnName: \"description\",\n      columnLabel: \"Description\",\n      columnMenu: /*#__PURE__*/React.createElement(React.Fragment, null),\n      columnType: \"standard\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      validationAction: [],\n      columnName: \"fileName\",\n      columnLabel: \"File Name\",\n      columnMenu: /*#__PURE__*/React.createElement(React.Fragment, null),\n      columnType: \"standard\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      validationAction: [],\n      columnName: \"shotType\",\n      columnLabel: \"Shot Type\",\n      columnMenu: /*#__PURE__*/React.createElement(React.Fragment, null),\n      columnType: \"standard\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      validationAction: [],\n      columnName: \"productAssociations\",\n      columnLabel: \"Product Associations\",\n      columnMenu: /*#__PURE__*/React.createElement(React.Fragment, null),\n      columnType: \"standard\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      validationAction: [],\n      columnName: \"mediaAssociations\",\n      columnLabel: \"Media Associations\",\n      columnMenu: /*#__PURE__*/React.createElement(React.Fragment, null),\n      columnType: \"standard\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      validationAction: [],\n      columnName: \"classesAssociated\",\n      columnLabel: \"Classes Associated\",\n      columnMenu: /*#__PURE__*/React.createElement(React.Fragment, null),\n      columnType: \"standard\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }, {\n      validationAction: [],\n      columnName: \"resolution\",\n      columnLabel: \"Resolution\",\n      columnMenu: /*#__PURE__*/React.createElement(React.Fragment, null),\n      columnType: \"standard\",\n      control: \"text-input\",\n      tooltipType: \"basic\",\n      toolTip: \"\"\n    }];\n    return mediaColumns;\n  }\n\n  getMediaDataForGrid() {\n    //we\n    for (let i = 0; i < this.getMediaData().length; i++) {}\n\n    return [];\n  }\n\n  addToProductGroup() {\n    let stub = this.productData[0];\n    this.productData.push(stub);\n  }\n\n  getGroups() {\n    let groupsAll = []; //first walk is extract all the product groups, then we'll remove duplicates\n\n    i: for (let i = 0; i < this.productData.length; i++) {\n      for (let j = 0; j < this.productData[i].length; j++) {\n        if (this.productData[i][j].columnName === \"ProductGroup\") {\n          groupsAll.push(this.productData[i][j].value);\n          continue i;\n        }\n      }\n    } //second walk over groups to remove duplicates\n\n\n    let finalGroups = [];\n\n    i: for (let i = 0; i < groupsAll.length; i++) {\n      if (i === 0) {\n        finalGroups.push(groupsAll[i]);\n        continue i;\n      }\n\n      for (let j = 0; j < finalGroups.length; j++) {\n        if (finalGroups[j] === groupsAll[i]) {\n          continue i;\n        }\n\n        if (j === finalGroups.length - 1) {\n          finalGroups.push(groupsAll[i]);\n        }\n      }\n    }\n\n    console.log(finalGroups);\n    return finalGroups;\n  } //update package is type iUpdateSet = {row : number, cell : number, newData:string}\n\n\n  set setProductData(updatePackage) {\n    this.productData[updatePackage.row][updatePackage.cell].value = updatePackage.newData;\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/data-components/data-manager/data-manager.tsx"],"names":["React","toolTipContent","mediaLibraryData","DataManager","constructor","productData","getColumns","testMenu","backgroundColor","validationAction","columnName","columnLabel","columnMenu","columnType","control","tooltipType","toolTip","columnHeaderToolTips","getProductData","getMediaData","getMediaColumnsForGrid","mediaColumns","getMediaDataForGrid","i","length","addToProductGroup","stub","push","getGroups","groupsAll","j","value","finalGroups","console","log","setProductData","updatePackage","row","cell","newData"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {iDataGridItem} from \"../../view-components/data-grid/data-types-for-data-grid\";\nimport {iColumn} from \"../../_sample-data/columns\";\nimport {toolTipContent} from \"../../views/tool-tip-content/content-tool-tips\";\nimport {mediaLibraryData, mediaObject} from \"../../_sample-data/media-library\";\n\nexport type validationActions = \"required\" | \"custom\" | \"no-duplicates\";\n\ninterface iDataManager {\n    productData : iDataGridItem[][];\n}\n\nexport type iUpdateSet = {row : number, cell : number, newData:string}\n\nexport class DataManager implements iDataManager{\n    productData : iDataGridItem[][];\n    constructor(productData : iDataGridItem[][]) {\n        this.productData = productData;\n    }\n\n    get getColumns():iColumn[]{\n        let testMenu = (<div style={{backgroundColor : \"#cecece\"}}>Menu</div>);\n\n        return [\n            {\n                validationAction : [],\n                columnName : \"uniqueID\",\n                columnLabel : \" \",\n                columnMenu : testMenu,\n                columnType : \"hidden\",\n                control : \"hidden\",\n                tooltipType : \"custom\",\n                toolTip : \"this is non-editable unique id\"\n            },\n            {\n                validationAction : [],\n                columnName : \"ReferenceImage\",\n                columnLabel : \"Reference Image\",\n                columnMenu : testMenu,\n                columnType : \"standard\",\n                control : \"media\",\n                tooltipType : \"custom\",\n                toolTip : toolTipContent.columnHeaderToolTips(\"ReferenceImage\")\n            },\n            {\n                validationAction : [\"no-duplicates\", \"required\"],\n                columnName : \"PartNumber\",\n                columnLabel : \"Part Number \",\n                columnMenu : testMenu,\n                columnType : \"required\",\n                control : \"text-input\",\n                tooltipType : \"custom\",\n                toolTip : toolTipContent.columnHeaderToolTips(\"PartNumber\")\n            },\n            {\n                validationAction : [],\n                columnName : \"ProductGroup\",\n                columnLabel : \"Product Group\",\n                columnMenu : testMenu,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"custom\",\n                toolTip : toolTipContent.columnHeaderToolTips(\"ProductGroup\")\n            },\n            {\n                validationAction : [],\n                columnName : \"ProductName\",\n                columnLabel : \"Product Name\",\n                columnMenu : testMenu,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"custom\",\n                toolTip : toolTipContent.columnHeaderToolTips(\"ProductName\")\n            },\n            {\n                validationAction : [],\n                columnName : \"Class\",\n                columnLabel : \"Class\",\n                columnMenu : testMenu,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"custom\",\n                toolTip : toolTipContent.columnHeaderToolTips(\"Class\")\n            },\n            {\n                validationAction : [],\n                columnName : \"ProductType\",\n                columnLabel : \"Product Type\",\n                columnMenu : testMenu,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"OverallDimensions\",\n                columnLabel : \"Overall Dimensions\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"OverallDepth\",\n                columnLabel : \"Overall Depth\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"OverallHeight\",\n                columnLabel : \"Overall Height\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"OverallLength\",\n                columnLabel : \"Overall Length\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"Seat\",\n                columnLabel : \"Seat\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"ArmHeightFloorToArm\",\n                columnLabel : \"Arm Height - Floor to Arm\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"BackHeightSeatToTopOfBack\",\n                columnLabel : \"Back Height - Seat to Top of Back\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"FullyReclinedDepthFrontToBack\",\n                columnLabel : \"Fully Reclined Depth - Front to Back\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"LegHeightTopToBottom\",\n                columnLabel : \"Leg Height - Top to Bottom\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"ClearanceFromFloorToBottomOfSofa\",\n                columnLabel : \"Clearance from Floor to Bottom of Sofa\",\n                columnMenu : testMenu,\n                columnType : \"user-gen\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            }\n\n\n        ]\n    }\n\n    get getProductData():iDataGridItem[][]{\n        return this.productData;\n    }\n\n    getMediaData():mediaObject[]{\n        //TODO replace this with a proper data service\n        return mediaLibraryData;\n    }\n\n    getMediaColumnsForGrid():iColumn[]{\n\n        let mediaColumns : iColumn[] = [\n            {\n                validationAction : [],\n                columnName : \"uniqueId\",\n                columnLabel : \"Unique ID\",\n                columnMenu : <></>,\n                columnType : \"hidden\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"mediaPath\",\n                columnLabel : \"Media Path\",\n                columnMenu : <></>,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"description\",\n                columnLabel : \"Description\",\n                columnMenu : <></>,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"fileName\",\n                columnLabel : \"File Name\",\n                columnMenu : <></>,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"shotType\",\n                columnLabel : \"Shot Type\",\n                columnMenu : <></>,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"productAssociations\",\n                columnLabel : \"Product Associations\",\n                columnMenu : <></>,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"mediaAssociations\",\n                columnLabel : \"Media Associations\",\n                columnMenu : <></>,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"classesAssociated\",\n                columnLabel : \"Classes Associated\",\n                columnMenu : <></>,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n            {\n                validationAction : [],\n                columnName : \"resolution\",\n                columnLabel : \"Resolution\",\n                columnMenu : <></>,\n                columnType : \"standard\",\n                control : \"text-input\",\n                tooltipType : \"basic\",\n                toolTip : \"\"\n            },\n\n\n        ]\n\n        return mediaColumns;\n\n    }\n\n    getMediaDataForGrid():iDataGridItem[][]{\n\n        //we\n        for(let i=0; i < this.getMediaData().length; i++){\n\n        }\n        return []\n    }\n\n    addToProductGroup(){\n        let stub = this.productData[0];\n        this.productData.push(stub);\n    }\n\n    getGroups():string[]{\n        let groupsAll : string[] = [];\n\n        //first walk is extract all the product groups, then we'll remove duplicates\n        i: for( let i=0; i < this.productData.length; i++){\n                for(let j=0; j < this.productData[i].length; j++){\n                    if(this.productData[i][j].columnName === \"ProductGroup\"){\n                        groupsAll.push(this.productData[i][j].value);\n                        continue i;\n                    }\n                }\n            }\n\n        //second walk over groups to remove duplicates\n        let finalGroups = [];\n        i: for(let i=0; i < groupsAll.length; i++){\n            if(i===0){\n                finalGroups.push(groupsAll[i]);\n                continue i;\n            }\n\n            for(let j=0; j < finalGroups.length; j++){\n                if( finalGroups[j] === groupsAll[i]){\n                    continue i;\n                }\n                if( j === finalGroups.length - 1){\n                    finalGroups.push(groupsAll[i])\n                }\n            }\n        }\n\n        console.log(finalGroups);\n            return finalGroups;\n    }\n\n    //update package is type iUpdateSet = {row : number, cell : number, newData:string}\n    set setProductData(updatePackage : iUpdateSet){\n        this.productData[updatePackage.row][updatePackage.cell].value = updatePackage.newData;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}