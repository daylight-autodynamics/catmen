{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/_common/main-header-area/main-header-area.tsx\";\nimport * as React from \"react\";\nimport StickyThing from \"../../../view-components/sticky-panel/sticky-panel\";\nimport AppButton from \"../../../view-components/button/app-button\";\nimport { CatmanIcon } from \"../../../svg/icons/icons\";\nimport { toolTipContent } from \"../../tool-tip-content/content-tool-tips\";\nimport { ModalView } from \"../../../view-components/modal/modal\";\nimport { UploadWizard } from \"../../wizards/upload-wizard/upload-wizard\";\nexport class MainHeaderArea extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuIsOpen: false,\n      modalOpen: false,\n      currentModal: \"none\",\n      tutorialModal: false\n    };\n  }\n\n  navMenu() {\n    if (this.state.menuIsOpen === true) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StickyThing, {\n        enterFromThisSide: \"left\",\n        lastResortClasses: \"catman-main-nav\",\n        animateIn: true,\n        heightIncludeUnits: \"90vh\",\n        widthIncludeUnits: \"auto\",\n        stickyOpen: true,\n        bgColor: \"\",\n        doAnimation: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, this.props.navigationElement), /*#__PURE__*/React.createElement(AppButton, {\n        tooltipType: \"none\",\n        buttonType: \"from-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => this.handleMenu(),\n        className: \"overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  }\n\n  handleMenu() {\n    let inverse = !this.state.menuIsOpen;\n    this.setState({\n      menuIsOpen: inverse\n    });\n  }\n\n  ribbonMenu() {}\n\n  navArea() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-header-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AppButton, {\n      buttonType: \"from-left\",\n      buttonLabel: \"catalog manager\",\n      OnClick: () => this.handleMenu(),\n      tooltipType: \"custom\",\n      tooltip: toolTipContent.mainNav(),\n      toolTipTimeOutInMS: 10000,\n      iconRight: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"down-arrow\",\n        classes: \"ui-icon \",\n        height: \"100%\",\n        width: \"100%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(AppButton, {\n      buttonType: \"main-action\",\n      classes: \"main-add-btn\",\n      buttonLabel: this.props.mainButtonLabel,\n      OnClick: () => this.manageModals(\"add-products\"),\n      tooltipType: \"custom\",\n      tooltip: toolTipContent.addProducts(),\n      toolTipTimeOutInMS: 10000,\n      iconLeft: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-add-invert\",\n        classes: \" main-add\",\n        height: \"100%\",\n        width: \"100%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  closeModal() {\n    this.setState({\n      currentModal: \"none\"\n    });\n    console.log(\"close modal try\", this.state.currentModal);\n  }\n\n  tutorialModal() {\n    return /*#__PURE__*/React.createElement(ModalView, {\n      modalTitle: \"You Can Edit This Grid!\",\n      classes: \"upload-modal-wizard\",\n      closeModalFunc: () => this.closeModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(UploadWizard, {\n      addAction: () => this.props.addItemAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  getModals() {\n    switch (this.state.currentModal) {\n      case \"add-products\":\n        console.log(\"MODAL\");\n        return /*#__PURE__*/React.createElement(ModalView, {\n          modalTitle: \"Automatically Add/Update Products\",\n          classes: \"upload-modal-wizard\",\n          closeModalFunc: () => this.closeModal(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(UploadWizard, {\n          addAction: () => this.props.addItemAction,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }\n        }));\n\n      case \"add-product-variant\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 30\n          }\n        }, \"Product Variant\"));\n\n      case \"none\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null);\n\n      default:\n        return /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 28\n          }\n        }, \"MODAL zzz\");\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n  manageModals(modalName) {\n    console.log(modalName);\n\n    switch (modalName) {\n      case \"add-products\":\n        console.log(\"clicked\", modalName);\n        this.setState({\n          currentModal: \"add-products\"\n        });\n        break;\n\n      case \"none\":\n        this.setState({\n          currentModal: \"none\"\n        });\n        break;\n    }\n\n    console.log(this.state);\n  }\n\n  render() {\n    let constructedHeader = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"header-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }, this.navArea()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-ribbon header-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 19\n      }\n    }, this.props.ribbonElement), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }\n    }, this.navMenu()), this.getModals(), this.tutorialModal()));\n    return constructedHeader;\n  }\n\n}\nexport default MainHeaderArea;","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/_common/main-header-area/main-header-area.tsx"],"names":["React","StickyThing","AppButton","CatmanIcon","toolTipContent","ModalView","UploadWizard","MainHeaderArea","Component","constructor","props","state","menuIsOpen","modalOpen","currentModal","tutorialModal","navMenu","navigationElement","handleMenu","inverse","setState","ribbonMenu","navArea","mainNav","mainButtonLabel","manageModals","addProducts","closeModal","console","log","addItemAction","getModals","modalName","render","constructedHeader","ribbonElement"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport StickyThing from \"../../../view-components/sticky-panel/sticky-panel\";\nimport AppButton from \"../../../view-components/button/app-button\";\nimport {ToolTip} from \"../../../view-components/heru-tool-tip/tool-tip\";\nimport {CatmanIcon} from \"../../../svg/icons/icons\";\nimport {ContentToolTips, toolTipContent} from \"../../tool-tip-content/content-tool-tips\";\nimport {ToolTipContent} from \"../../../view-components/heru-tool-tip/tool-tip-content\";\nimport {ModalView} from \"../../../view-components/modal/modal\";\nimport {UploadWizard} from \"../../wizards/upload-wizard/upload-wizard\";\n\ninterface iPROPS{\n    sectionTitle? : string;\n    navigationElement? : ReactElement;\n    ribbonElement? : ReactElement;\n    addItemAction : Function;\n    mainButtonLabel : string;\n}\n\ninterface iSTATE{\n    menuIsOpen : boolean;\n    currentModal : \"none\" | \"add-products\" | \"add-product-variant\";\n    modalOpen : boolean;\n    tutorialModal : boolean\n}\n\nexport class MainHeaderArea extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n        this.state = {\n            menuIsOpen : false,\n            modalOpen : false,\n            currentModal : \"none\",\n            tutorialModal : false\n        }\n    }\n\n    navMenu(){\n        if(this.state.menuIsOpen === true){\n            return (\n                <>\n                    <StickyThing\n                        enterFromThisSide=\"left\"\n                        lastResortClasses={\"catman-main-nav\"}\n                        animateIn={true}\n                        heightIncludeUnits=\"90vh\"\n                        widthIncludeUnits={\"auto\"}\n                        stickyOpen={true}\n                        bgColor={\"\"}\n                        doAnimation={true}>\n                        {this.props.navigationElement}\n                    </StickyThing>\n                    <AppButton\n                        tooltipType=\"none\"\n                        buttonType=\"from-left\"\n                    />\n                    <div onClick={()=>this.handleMenu()} className=\"overlay\"/>\n                </>\n            );\n        }else{\n            return (<></>);\n        }\n    }\n\n    handleMenu(){\n        let inverse : boolean = !this.state.menuIsOpen;\n        this.setState({menuIsOpen : inverse})\n    }\n\n    ribbonMenu(){\n\n    }\n\n    navArea(){\n            return (\n                <div className=\"main-header-actions\">\n                    <AppButton\n                        buttonType={\"from-left\"}\n                        buttonLabel=\"catalog manager\"\n                        OnClick={()=>this.handleMenu()}\n                        tooltipType=\"custom\"\n                        tooltip={toolTipContent.mainNav()}\n                        toolTipTimeOutInMS={10000}\n                        iconRight={\n                            <CatmanIcon\n                                iconName=\"down-arrow\"\n                                classes=\"ui-icon \"\n                                height=\"100%\"\n                                width=\"100%\"\n                            />\n                        }\n                    />\n                    <AppButton\n                        buttonType={\"main-action\"}\n                        classes={\"main-add-btn\"}\n                        buttonLabel={this.props.mainButtonLabel}\n                        OnClick={()=>this.manageModals(\"add-products\")}\n                        tooltipType=\"custom\"\n                        tooltip={toolTipContent.addProducts()}\n                        toolTipTimeOutInMS={10000}\n                        iconLeft={\n                            <CatmanIcon\n                                iconName=\"icon-add-invert\"\n                                classes=\" main-add\"\n                                height=\"100%\"\n                                width=\"100%\"\n                            />\n                        }\n                    />\n                </div>\n            )\n    }\n\n    closeModal(){\n        this.setState({currentModal : \"none\"})\n        console.log(\"close modal try\", this.state.currentModal)\n    }\n\n    tutorialModal(){\n        return(\n            <ModalView\n                modalTitle={\"You Can Edit This Grid!\"}\n                classes=\"upload-modal-wizard\"\n                closeModalFunc={()=>this.closeModal()}\n            >\n                <UploadWizard addAction={()=>this.props.addItemAction}/>\n            </ModalView> );\n    }\n\n    getModals(){\n            switch(this.state.currentModal){\n                case \"add-products\":\n                    console.log(\"MODAL\");\n                    return(\n                        <ModalView\n                            modalTitle={\"Automatically Add/Update Products\"}\n                            classes=\"upload-modal-wizard\"\n                            closeModalFunc={()=>this.closeModal()}\n                        >\n                            <UploadWizard addAction={()=>this.props.addItemAction}/>\n                        </ModalView> );\n                case \"add-product-variant\":\n                    return(<><p>Product Variant</p></>);\n                case \"none\":\n                    return(<></>);\n                default:\n                    return(<h1>MODAL zzz</h1>)\n            }\n\n        return (<></>)\n\n    }\n\n    manageModals(modalName : string){\n        console.log(modalName);\n        switch(modalName){\n            case \"add-products\":\n                console.log(\"clicked\", modalName);\n                this.setState({currentModal : \"add-products\"});\n                break;\n            case \"none\":\n                this.setState({currentModal : \"none\"});\n                break;\n        }\n        console.log(this.state)\n    }\n\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        let constructedHeader = (\n          <>\n              <header className=\"header-area\">\n                  <div className=\"header-item\">\n                      {this.navArea()}\n                  </div>\n                  <div className=\"main-ribbon header-item\">\n                      {this.props.ribbonElement}\n                  </div>\n                  <div className=\"header-item\">\n                      {this.navMenu()}\n                  </div>\n                  {this.getModals()}\n                  {this.tutorialModal()}\n              </header>\n          </>\n        );\n\n        return constructedHeader;\n    }\n}\n\nexport default MainHeaderArea;"]},"metadata":{},"sourceType":"module"}