{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/tool-tip-content/content-tool-tips.tsx\";\nimport * as React from \"react\";\nimport { CatmanIcon } from \"../../svg/icons/icons\";\nimport { ToolTipContent } from \"../../view-components/heru-tool-tip/tool-tip-content\";\nimport addVariantIllustration from \"../../images/SVG/add-variant.svg\";\nimport createVariantGroupIllustration from \"../../images/SVG/create-variant-group.svg\";\nimport maximizeDrawer from \"../../images/SVG/maximize-drawer.svg\";\nimport closeDrawer from \"../../images/SVG/close-drawer.svg\";\nimport restoreDrawer from \"../../images/SVG/restore-drawer.svg\";\nimport closeModal from \"../../images/SVG/close-modal-and-cancel.svg\";\nimport dragFiles from \"../../images/SVG/drag-files.svg\";\nimport backToSpreadsheet from \"../../images/SVG/back-to-spreadsheet.svg\";\nimport singleProductSwitchToEditMode from \"../../images/SVG/sitch-to-edit-mode.svg\";\nimport singleProductSwitchToReadMode from \"../../images/SVG/switch-to-read-only.svg\";\nimport insertColumn from \"../../images/SVG/illustration-insert.svg\";\nimport partNumber from \"../../images/SVG/tooltip-part-number.svg\";\nimport productGroups from \"../../images/SVG/tooltip-product-groups.svg\";\nimport referenceImage from \"../../images/SVG/tooltip-reference-image.svg\";\nimport classesIllustration from \"../../images/SVG/illustration-classes.svg\";\nimport clearSelection from \"../../images/SVG/illustration-clear-selection.svg\";\nimport deleteItem from \"../../images/SVG/illustration-delete-items.svg\";\nimport editItem from \"../../images/SVG/illustration-edit.svg\";\nexport class ContentToolTips extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let toolTip = /*#__PURE__*/React.createElement(React.Fragment, null);\n    return toolTip;\n  }\n\n}\nexport class toolTipsLibrary {\n  constructor() {\n    this.showSelectRow = true;\n    this.showSingleProduct = true;\n    this.showCloseDrawer = 0;\n    this.showMaximizeDrawer = 0;\n  }\n\n  mainNav() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Navigation\",\n      copy: \"Use this menu to access different sections of the app\",\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"compass\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    });\n  }\n\n  footerCancel() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Cancel\",\n      copy: \"Close this menu and clear selected rows\",\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"cancel\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 16\n      }\n    });\n  }\n\n  footerDelete() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Delete Selected\",\n      subHeader: \"Permanently destroy the selected product data\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: deleteItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-delete\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 16\n      }\n    });\n  }\n\n  footerEditSelection() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Edit Selected Rows\",\n      subHeader: \"Switch to cell-editing mode\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: editItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-edit\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 16\n      }\n    });\n  }\n\n  footerAddVariant() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Add Product as a Variant\",\n      subHeader: \"Create a new product and add it to the selected product's group\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: addVariantIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-add\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 16\n      }\n    });\n  }\n\n  footerCreateVariant() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Create New Product Group from Selection\",\n      subHeader: \"Create a new product variants group from the selected items.\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: createVariantGroupIllustration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-add\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 16\n      }\n    });\n  }\n\n  singleProduct() {\n    if (this.showSingleProduct === true) {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"Edit This Product\",\n        subHeader: \"Edit this row in a single page.\",\n        copy: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 33\n          }\n        }, \"Web form style page\"), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }\n        }, \"View and Associate Media\"), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 33\n          }\n        }, \"See variants of this product\"), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }\n        }, \"So much more...\"))),\n        tooltipType: \"deluxe\",\n        icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"single-product\",\n          classes: \"\",\n          height: \"1.5rem\",\n          width: \"1.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"Edit This Product\",\n        subHeader: \"Select rows to delete, create groups, add variants to groups\",\n        copy: \"\",\n        tooltipType: \"empty\",\n        icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"single-product\",\n          classes: \"\",\n          height: \"1.5rem\",\n          width: \"1.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      });\n    }\n  }\n\n  selectRow() {\n    if (this.showSelectRow === true) {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"Select Rows\",\n        subHeader: \"Select rows to perform actions on them.\",\n        copy: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 33\n          }\n        }, \"Delete items from catalog\"), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 33\n          }\n        }, \"Create product groupings\"), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 33\n          }\n        }, \"Add Variants to product groups\"))),\n        tooltipType: \"deluxe\",\n        icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"select-row\",\n          classes: \"\",\n          height: \"1.5rem\",\n          width: \"1.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"\",\n        copy: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }\n        }, \"Select rows to delete, create groups, add variants to groups\")),\n        tooltipType: \"empty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      });\n    }\n  }\n\n  closeDrawer() {\n    if (this.showCloseDrawer < 4) {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"Close Drawer\",\n        subHeader: \"Close edit drawer and clear cell selection set\",\n        copy: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"tooltip-illustration\",\n          src: closeDrawer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }\n        })),\n        tooltipType: \"deluxe\",\n        icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"close-icon\",\n          classes: \"\",\n          height: \"1.5rem\",\n          width: \"1.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"Close Drawer\",\n        copy: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }\n        }, \"Close drawer and clear selection.\")),\n        tooltipType: \"deluxe\",\n        icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"icon-close\",\n          classes: \"\",\n          height: \"1.5rem\",\n          width: \"1.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 21\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n  closeModal() {\n    if (this.showCloseDrawer < 4) {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"Close & Cancel\",\n        subHeader: \"Close this window, you'll lose any work you've done in the window.\",\n        copy: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"tooltip-illustration\",\n          src: closeModal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 29\n          }\n        })),\n        tooltipType: \"deluxe\",\n        icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"close-icon\",\n          classes: \"\",\n          height: \"1.5rem\",\n          width: \"1.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"Close Drawer\",\n        copy: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }\n        }, \"Close drawer and clear selection.\")),\n        tooltipType: \"deluxe\",\n        icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"icon-close\",\n          classes: \"\",\n          height: \"1.5rem\",\n          width: \"1.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 21\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n  restoreDrawer() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Restore Drawer\",\n      subHeader: \"Restore drawer so the grid is in view again.\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: restoreDrawer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 25\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-restore-tooltip\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 13\n      }\n    });\n  }\n\n  maximizeDrawer() {\n    if (this.showMaximizeDrawer < 4) {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"Maximize Drawer\",\n        subHeader: \"Expand the edit area\",\n        copy: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"tooltip-illustration\",\n          src: maximizeDrawer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 25\n          }\n        })),\n        tooltipType: \"deluxe\",\n        icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"icon-maximize-tooltip\",\n          classes: \"\",\n          height: \"1.5rem\",\n          width: \"1.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 21\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ToolTipContent, {\n        header: \"Maximize Drawer\",\n        copy: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 25\n          }\n        }, \"Expand the edit area.\")),\n        tooltipType: \"deluxe\",\n        icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"icon-maximize-tooltip\",\n          classes: \"\",\n          height: \"1.5rem\",\n          width: \"1.5rem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 21\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n  addProducts() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Add or Update Products\",\n      subHeader: \"Add or update product data in YOUR catalog and then publish to Wayfair when you're ready.\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 29\n        }\n      }, \"Add new blank products as stubs\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 29\n        }\n      }, \"Extract product data from files like Excel sheets and images\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 29\n        }\n      }, \"Upload media like photos and associate to products\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 29\n        }\n      }, \"Add product variants for groups (like a red, yellow and green versions of a product).\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 29\n        }\n      }, \"So much more...\"))),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"single-product\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 13\n      }\n    });\n  }\n\n  addBlankStubs() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Add Blank Product Stubs\",\n      copy: \"This functionality available yet\",\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-add-invert\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 16\n      }\n    });\n  }\n\n  dragUploadFiles() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Upload Files Here\",\n      subHeader: \"Drag files from your computer's folder onto this to upload them, or click to browse your computer.\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: dragFiles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 25\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-add-invert\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 16\n      }\n    });\n  }\n\n  goBackToSpreadsheet() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Go back to the Spreadsheet View\",\n      subHeader: \"Any edits you made in the Single Product view will be saved\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: backToSpreadsheet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-add-invert\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 16\n      }\n    });\n  }\n\n  singleProductSwitchToEditMode() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Switch to edit Mode\",\n      subHeader: \"this will turn this view into a web form style page with textboxes, dop-downs and such so you can edit this product's data\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: singleProductSwitchToEditMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-edit\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 16\n      }\n    });\n  }\n\n  singleProductSwitchToReadMode() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Switch to Read Mode\",\n      subHeader: \"this will turn off all the the web form text boxes, drop-downs and such so you can read this easier.\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: singleProductSwitchToReadMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-read-mode\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 16\n      }\n    });\n  }\n\n  insertColumn() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Insert new Attribute/Column\",\n      subHeader: \"Insert a new attribute, this will make a new column.\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: insertColumn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-add-invert\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 16\n      }\n    });\n  }\n\n  clearSelection() {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Clear Selection\",\n      subHeader: \"Unselect items & cancel current activity.\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: clearSelection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 25\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"clear\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 13\n      }\n    });\n  }\n\n  imageThumbnailPreview(imagePath) {\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      header: \"Switch to Read Mode\",\n      subHeader: \"this will turn off all the the web form text boxes, drop-downs and such so you can read this easier.\",\n      copy: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"tooltip-illustration\",\n        src: imagePath,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 21\n        }\n      })),\n      tooltipType: \"deluxe\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-read-mode\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 16\n      }\n    });\n  }\n\n  columnHeaderToolTips(tipName) {\n    switch (tipName) {\n      case \"ReferenceImage\":\n        return /*#__PURE__*/React.createElement(ToolTipContent, {\n          header: \"Reference Image\",\n          subHeader: \"This is just to help you identify the product visually while you're working\",\n          copy: /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            className: \"tooltip-illustration\",\n            src: referenceImage,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 33\n            }\n          })),\n          tooltipType: \"deluxe\",\n          icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n            iconName: \"icon-add-invert\",\n            classes: \"\",\n            height: \"1.5rem\",\n            width: \"1.5rem\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 29\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 21\n          }\n        });\n\n      case \"PartNumber\":\n        return /*#__PURE__*/React.createElement(ToolTipContent, {\n          header: \"Part Number\",\n          subHeader: \"Must be unique, ideally you would use your existing descriptive part number\",\n          copy: /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            className: \"tooltip-illustration\",\n            src: partNumber,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 33\n            }\n          })),\n          tooltipType: \"deluxe\",\n          icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n            iconName: \"icon-add-invert\",\n            classes: \"\",\n            height: \"1.5rem\",\n            width: \"1.5rem\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 29\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 21\n          }\n        });\n\n      case \"ProductGroup\":\n        return /*#__PURE__*/React.createElement(ToolTipContent, {\n          header: \"Product Group\",\n          subHeader: \"To group products give items that have a relationship the same product name\",\n          copy: /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            className: \"tooltip-illustration\",\n            src: productGroups,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 33\n            }\n          })),\n          tooltipType: \"deluxe\",\n          icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n            iconName: \"icon-add-invert\",\n            classes: \"\",\n            height: \"1.5rem\",\n            width: \"1.5rem\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 29\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 21\n          }\n        });\n\n      case \"ProductName\":\n        return /*#__PURE__*/React.createElement(ToolTipContent, {\n          header: \"Product Name\",\n          subHeader: \"Give each item a friendly human-readable name, this may or may not be used by Wayfair in the white-labeling process\",\n          copy: /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            className: \"tooltip-illustration\",\n            src: productGroups,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 33\n            }\n          })),\n          tooltipType: \"deluxe\",\n          icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n            iconName: \"icon-add-invert\",\n            classes: \"\",\n            height: \"1.5rem\",\n            width: \"1.5rem\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 29\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 21\n          }\n        });\n\n      case \"Class\":\n        return /*#__PURE__*/React.createElement(ToolTipContent, {\n          header: \"Class\",\n          subHeader: \"The Product Class is the species of product, by selecting a class you will define a set of attributes/column heads to describe that product\",\n          copy: /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            className: \"tooltip-illustration\",\n            src: classesIllustration,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 33\n            }\n          })),\n          tooltipType: \"deluxe\",\n          icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n            iconName: \"icon-add-invert\",\n            classes: \"\",\n            height: \"1.5rem\",\n            width: \"1.5rem\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 29\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 21\n          }\n        });\n    }\n\n    return /*#__PURE__*/React.createElement(ToolTipContent, {\n      subHeader: \"\",\n      copy: tipName,\n      tooltipType: \"basic\",\n      icon: /*#__PURE__*/React.createElement(CatmanIcon, {\n        iconName: \"icon-add-invert\",\n        classes: \"\",\n        height: \"1.5rem\",\n        width: \"1.5rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 21\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n;\nexport let toolTipContent = new toolTipsLibrary();","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/tool-tip-content/content-tool-tips.tsx"],"names":["React","CatmanIcon","ToolTipContent","ContentToolTips","Component","constructor","props","render","toolTip","toolTipsLibrary","showSelectRow","showSingleProduct","showCloseDrawer","showMaximizeDrawer","mainNav","footerCancel","footerDelete","deleteItem","footerEditSelection","editItem","footerAddVariant","addVariantIllustration","footerCreateVariant","createVariantGroupIllustration","singleProduct","selectRow","closeDrawer","closeModal","restoreDrawer","maximizeDrawer","addProducts","addBlankStubs","dragUploadFiles","dragFiles","goBackToSpreadsheet","backToSpreadsheet","singleProductSwitchToEditMode","singleProductSwitchToReadMode","insertColumn","clearSelection","imageThumbnailPreview","imagePath","columnHeaderToolTips","tipName","referenceImage","partNumber","productGroups","classesIllustration","toolTipContent"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport {ToolTipContent} from \"../../view-components/heru-tool-tip/tool-tip-content\";\n\nimport addVariantIllustration from \"../../images/SVG/add-variant.svg\"\nimport createVariantGroupIllustration from \"../../images/SVG/create-variant-group.svg\"\nimport maximizeDrawer from \"../../images/SVG/maximize-drawer.svg\"\nimport closeDrawer from \"../../images/SVG/close-drawer.svg\"\nimport restoreDrawer from \"../../images/SVG/restore-drawer.svg\"\nimport closeModal from \"../../images/SVG/close-modal-and-cancel.svg\"\nimport dragFiles from \"../../images/SVG/drag-files.svg\"\nimport backToSpreadsheet from \"../../images/SVG/back-to-spreadsheet.svg\"\nimport singleProductSwitchToEditMode from \"../../images/SVG/sitch-to-edit-mode.svg\"\nimport singleProductSwitchToReadMode from \"../../images/SVG/switch-to-read-only.svg\"\nimport insertColumn from \"../../images/SVG/illustration-insert.svg\"\nimport partNumber from \"../../images/SVG/tooltip-part-number.svg\"\nimport productGroups from \"../../images/SVG/tooltip-product-groups.svg\"\nimport referenceImage from \"../../images/SVG/tooltip-reference-image.svg\"\nimport classesIllustration from \"../../images/SVG/illustration-classes.svg\"\nimport clearSelection from \"../../images/SVG/illustration-clear-selection.svg\"\nimport deleteItem from \"../../images/SVG/illustration-delete-items.svg\"\nimport editItem from \"../../images/SVG/illustration-edit.svg\"\n\ninterface iSTATE{\n\n}\n\ninterface iPROPS{\n\n}\n\nexport class ContentToolTips extends React.Component<iPROPS, iSTATE>{\n    constructor(props : iPROPS) {\n        super(props);\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        let toolTip = (<></>);\n        return toolTip;\n    }\n}\n\n\nexport class toolTipsLibrary {\n    showSelectRow : boolean = true;\n    showSingleProduct : boolean = true;\n    showCloseDrawer : number = 0;\n    showMaximizeDrawer : number = 0;\n    mainNav(){\n    return(<ToolTipContent\n              header=\"Navigation\"\n              copy=\"Use this menu to access different sections of the app\"\n              tooltipType=\"deluxe\"\n              icon={\n                  <CatmanIcon\n                      iconName=\"compass\"\n                      classes=\"\"\n                      height=\"1.5rem\"\n                      width=\"1.5rem\"\n                  />\n              }\n        />)\n    }\n\n    footerCancel(){\n        return(<ToolTipContent\n            header=\"Cancel\"\n            copy=\"Close this menu and clear selected rows\"\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"cancel\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    footerDelete(){\n        return(<ToolTipContent\n            header=\"Delete Selected\"\n            subHeader=\"Permanently destroy the selected product data\"\n            copy={(\n                <div>\n                    <img className=\"tooltip-illustration\" src={deleteItem}/>\n                </div>\n            )}\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-delete\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    footerEditSelection(){\n        return(<ToolTipContent\n            header=\"Edit Selected Rows\"\n            subHeader=\"Switch to cell-editing mode\"\n            copy={(\n                <div>\n                    <img className=\"tooltip-illustration\" src={editItem}/>\n                </div>\n            )}\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-edit\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    footerAddVariant(){\n        return(<ToolTipContent\n            header=\"Add Product as a Variant\"\n            subHeader=\"Create a new product and add it to the selected product's group\"\n            copy={(\n                <div>\n                    <img className=\"tooltip-illustration\" src={addVariantIllustration}/>\n                </div>\n            )}\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-add\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    footerCreateVariant(){\n        return(<ToolTipContent\n            header=\"Create New Product Group from Selection\"\n            subHeader=\"Create a new product variants group from the selected items.\"\n            copy={(\n                <div>\n                    <img className=\"tooltip-illustration\" src={createVariantGroupIllustration}/>\n                </div>\n            )}\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-add\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    singleProduct(){\n        if(this.showSingleProduct === true){\n            return (\n                <ToolTipContent\n                    header=\"Edit This Product\"\n                    subHeader=\"Edit this row in a single page.\"\n                    copy={(\n                        <div>\n                            <ul>\n                                <li>Web form style page</li>\n                                <li>View and Associate Media</li>\n                                <li>See variants of this product</li>\n                                <li>So much more...</li>\n                            </ul>\n                        </div>\n                    )}\n\n                    tooltipType=\"deluxe\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"single-product\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />\n            );\n        }else{\n            return (\n                <ToolTipContent\n                    header=\"Edit This Product\"\n                    subHeader=\"Select rows to delete, create groups, add variants to groups\"\n                    copy=\"\"\n                    tooltipType=\"empty\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"single-product\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />\n            );\n        }\n    }\n\n    selectRow(){\n        if(this.showSelectRow === true){\n            return (\n                <ToolTipContent\n                    header=\"Select Rows\"\n                    subHeader=\"Select rows to perform actions on them.\"\n                    copy={(\n                        <div>\n                            <ul>\n                                <li>Delete items from catalog</li>\n                                <li>Create product groupings</li>\n                                <li>Add Variants to product groups</li>\n                            </ul>\n                        </div>\n                    )}\n\n                    tooltipType=\"deluxe\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"select-row\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />\n            );\n        }else{\n            return (\n                <ToolTipContent\n                    header=\"\"\n                    copy={(\n                        <div>\n                            <p>Select rows to delete, create groups, add variants to groups</p>\n                        </div>\n                    )}\n\n                    tooltipType=\"empty\"\n\n                />\n            );\n        }\n    }\n\n    closeDrawer(){\n        if(this.showCloseDrawer < 4){\n            return(\n                <ToolTipContent\n                    header=\"Close Drawer\"\n                    subHeader=\"Close edit drawer and clear cell selection set\"\n                    copy={(\n                        <div>\n                            <img className=\"tooltip-illustration\" src={closeDrawer}/>\n                        </div>\n                    )}\n                    tooltipType=\"deluxe\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"close-icon\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />\n                )\n        }else{\n            return(<ToolTipContent\n                header=\"Close Drawer\"\n                copy={(\n                    <div>\n                        <p>Close drawer and clear selection.</p>\n                    </div>\n                )}\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"icon-close\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />)\n        }\n    }\n\n    closeModal(){\n        if(this.showCloseDrawer < 4){\n            return(\n                <ToolTipContent\n                    header=\"Close & Cancel\"\n                    subHeader=\"Close this window, you'll lose any work you've done in the window.\"\n                    copy={(\n                        <div>\n                            <img className=\"tooltip-illustration\" src={closeModal}/>\n                        </div>\n                    )}\n                    tooltipType=\"deluxe\"\n                    icon={\n                        <CatmanIcon\n                            iconName=\"close-icon\"\n                            classes=\"\"\n                            height=\"1.5rem\"\n                            width=\"1.5rem\"\n                        />\n                    }\n                />\n            )\n        }else{\n            return(<ToolTipContent\n                header=\"Close Drawer\"\n                copy={(\n                    <div>\n                        <p>Close drawer and clear selection.</p>\n                    </div>\n                )}\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"icon-close\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />)\n        }\n    }\n\n    restoreDrawer(){\n        return(\n            <ToolTipContent\n                header=\"Restore Drawer\"\n                subHeader=\"Restore drawer so the grid is in view again.\"\n                copy={(\n                    <div>\n                        <img className=\"tooltip-illustration\" src={restoreDrawer}/>\n                    </div>\n                )}\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"icon-restore-tooltip\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        )\n    }\n\n    maximizeDrawer(){\n        if(this.showMaximizeDrawer < 4){\n            return(<ToolTipContent\n                header=\"Maximize Drawer\"\n                subHeader=\"Expand the edit area\"\n                copy={(\n                    <div>\n                        <img className=\"tooltip-illustration\" src={maximizeDrawer}/>\n                    </div>\n                )}\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"icon-maximize-tooltip\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />)\n        }else{\n            return(<ToolTipContent\n                header=\"Maximize Drawer\"\n                copy={(\n                    <div>\n                        <p>Expand the edit area.</p>\n                    </div>\n                )}\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"icon-maximize-tooltip\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />)\n        }\n    }\n\n    addProducts(){\n        return(\n            <ToolTipContent\n                header=\"Add or Update Products\"\n                subHeader=\"Add or update product data in YOUR catalog and then publish to Wayfair when you're ready.\"\n                copy={(\n                    <div>\n                        <ul>\n                            <li>Add new blank products as stubs</li>\n                            <li>Extract product data from files like Excel sheets and images</li>\n                            <li>Upload media like photos and associate to products</li>\n                            <li>Add product variants for groups (like a red, yellow and green versions of a product).</li>\n                            <li>So much more...</li>\n                        </ul>\n                    </div>\n                )}\n\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"single-product\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        )\n    }\n\n    addBlankStubs(){\n        return(<ToolTipContent\n            header=\"Add Blank Product Stubs\"\n            copy=\"This functionality available yet\"\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-add-invert\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    dragUploadFiles(){\n        return(<ToolTipContent\n            header=\"Upload Files Here\"\n            subHeader=\"Drag files from your computer's folder onto this to upload them, or click to browse your computer.\"\n            copy={\n                    <div>\n                        <img className=\"tooltip-illustration\" src={dragFiles}/>\n                    </div>\n                }\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-add-invert\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    goBackToSpreadsheet(){\n        return(<ToolTipContent\n            header=\"Go back to the Spreadsheet View\"\n            subHeader=\"Any edits you made in the Single Product view will be saved\"\n            copy={\n                <div>\n                    <img className=\"tooltip-illustration\" src={backToSpreadsheet}/>\n                </div>\n            }\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-add-invert\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    singleProductSwitchToEditMode(){\n        return(<ToolTipContent\n            header=\"Switch to edit Mode\"\n            subHeader=\"this will turn this view into a web form style page with textboxes, dop-downs and such so you can edit this product's data\"\n            copy={\n                <div>\n                    <img className=\"tooltip-illustration\" src={singleProductSwitchToEditMode}/>\n                </div>\n            }\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-edit\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    singleProductSwitchToReadMode(){\n        return(<ToolTipContent\n            header=\"Switch to Read Mode\"\n            subHeader=\"this will turn off all the the web form text boxes, drop-downs and such so you can read this easier.\"\n            copy={\n                <div>\n                    <img className=\"tooltip-illustration\" src={singleProductSwitchToReadMode}/>\n                </div>\n            }\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-read-mode\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    insertColumn(){\n        return(<ToolTipContent\n            header=\"Insert new Attribute/Column\"\n            subHeader=\"Insert a new attribute, this will make a new column.\"\n            copy={\n                <div>\n                    <img className=\"tooltip-illustration\" src={insertColumn}/>\n                </div>\n            }\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-add-invert\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    clearSelection(){\n        return(\n            <ToolTipContent\n                header=\"Clear Selection\"\n                subHeader=\"Unselect items & cancel current activity.\"\n                copy={\n                    <div>\n                        <img className=\"tooltip-illustration\" src={clearSelection}/>\n                    </div>\n                }\n                tooltipType=\"deluxe\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"clear\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        )\n    }\n\n    imageThumbnailPreview(imagePath : string){\n        return(<ToolTipContent\n            header=\"Switch to Read Mode\"\n            subHeader=\"this will turn off all the the web form text boxes, drop-downs and such so you can read this easier.\"\n            copy={\n                <div>\n                    <img className=\"tooltip-illustration\" src={imagePath}/>\n                </div>\n            }\n            tooltipType=\"deluxe\"\n            icon={\n                <CatmanIcon\n                    iconName=\"icon-read-mode\"\n                    classes=\"\"\n                    height=\"1.5rem\"\n                    width=\"1.5rem\"\n                />\n            }\n        />)\n    }\n\n    columnHeaderToolTips(tipName : string) {\n        switch (tipName) {\n            case \"ReferenceImage\":\n                return(\n                    <ToolTipContent\n                        header=\"Reference Image\"\n                        subHeader=\"This is just to help you identify the product visually while you're working\"\n                        copy={\n                            <div>\n                                <img className=\"tooltip-illustration\" src={referenceImage}/>\n                            </div>\n                        }\n                        tooltipType=\"deluxe\"\n                        icon={\n                            <CatmanIcon\n                                iconName=\"icon-add-invert\"\n                                classes=\"\"\n                                height=\"1.5rem\"\n                                width=\"1.5rem\"\n                            />\n                        }\n                    />\n                );\n\n            case \"PartNumber\":\n                return(\n                    <ToolTipContent\n                        header=\"Part Number\"\n                        subHeader=\"Must be unique, ideally you would use your existing descriptive part number\"\n                        copy={\n                            <div>\n                                <img className=\"tooltip-illustration\" src={partNumber}/>\n                            </div>\n                        }\n                        tooltipType=\"deluxe\"\n                        icon={\n                            <CatmanIcon\n                                iconName=\"icon-add-invert\"\n                                classes=\"\"\n                                height=\"1.5rem\"\n                                width=\"1.5rem\"\n                            />\n                        }\n                    />\n                );\n\n            case \"ProductGroup\":\n                return(\n                    <ToolTipContent\n                        header=\"Product Group\"\n                        subHeader=\"To group products give items that have a relationship the same product name\"\n                        copy={\n                            <div>\n                                <img className=\"tooltip-illustration\" src={productGroups}/>\n                            </div>\n                        }\n                        tooltipType=\"deluxe\"\n                        icon={\n                            <CatmanIcon\n                                iconName=\"icon-add-invert\"\n                                classes=\"\"\n                                height=\"1.5rem\"\n                                width=\"1.5rem\"\n                            />\n                        }\n                    />\n                );\n\n            case \"ProductName\":\n                return(\n                    <ToolTipContent\n                        header=\"Product Name\"\n                        subHeader=\"Give each item a friendly human-readable name, this may or may not be used by Wayfair in the white-labeling process\"\n                        copy={\n                            <div>\n                                <img className=\"tooltip-illustration\" src={productGroups}/>\n                            </div>\n                        }\n                        tooltipType=\"deluxe\"\n                        icon={\n                            <CatmanIcon\n                                iconName=\"icon-add-invert\"\n                                classes=\"\"\n                                height=\"1.5rem\"\n                                width=\"1.5rem\"\n                            />\n                        }\n                    />\n                );\n\n            case \"Class\":\n                return(\n                    <ToolTipContent\n                        header=\"Class\"\n                        subHeader=\"The Product Class is the species of product, by selecting a class you will define a set of attributes/column heads to describe that product\"\n                        copy={\n                            <div>\n                                <img className=\"tooltip-illustration\" src={classesIllustration}/>\n                            </div>\n                        }\n                        tooltipType=\"deluxe\"\n                        icon={\n                            <CatmanIcon\n                                iconName=\"icon-add-invert\"\n                                classes=\"\"\n                                height=\"1.5rem\"\n                                width=\"1.5rem\"\n                            />\n                        }\n                    />\n                );\n\n        }\n\n        return(\n            <ToolTipContent\n                subHeader=\"\"\n                copy={tipName}\n                tooltipType=\"basic\"\n                icon={\n                    <CatmanIcon\n                        iconName=\"icon-add-invert\"\n                        classes=\"\"\n                        height=\"1.5rem\"\n                        width=\"1.5rem\"\n                    />\n                }\n            />\n        );\n    }\n};\n\n\n\n\n\nexport let toolTipContent = new toolTipsLibrary();"]},"metadata":{},"sourceType":"module"}