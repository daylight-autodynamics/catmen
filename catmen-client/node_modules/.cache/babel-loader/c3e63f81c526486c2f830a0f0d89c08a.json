{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/toggle-menu/toggle-component.tsx\";\nimport * as React from \"react\";\nimport { CatmanIcon } from \"../../svg/icons/icons\";\nimport AppButton from \"../button/app-button\";\nexport class ToggleMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuType: \"nav\",\n      currentActive: 0\n    };\n  }\n\n  createButtonBar() {\n    let buttons = [];\n\n    for (let i = 0; i < this.props.buttons.length; i++) {\n      let newButton = /*#__PURE__*/React.createElement(AppButton, {\n        OnClick: () => this.manageViewModes(\"grid-view\"),\n        buttonType: \"transparent-bg\",\n        tooltipType: \"custom\",\n        tooltip: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 31\n          }\n        }, \"Tooltip\"),\n        classes: `${selectedClass(\"grid-view\")}`,\n        iconCenter: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: `icon-list-view`,\n          width: \"1rem\",\n          height: \"100%\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 26\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 18\n        }\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/toggle-menu/toggle-component.tsx"],"names":["React","CatmanIcon","AppButton","ToggleMenu","Component","constructor","props","state","menuType","currentActive","createButtonBar","buttons","i","length","newButton","manageViewModes","selectedClass","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAwBA,OAAO,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAwD;AAC3DC,EAAAA,WAAW,CAACC,KAAD,EAAiB;AACxB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG,KADF;AAETC,MAAAA,aAAa,EAAG;AAFP,KAAb;AAIH;;AAGDC,EAAAA,eAAe,GAAE;AACb,QAAIC,OAAwB,GAAG,EAA/B;;AAEA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAG,KAAKN,KAAL,CAAWK,OAAX,CAAmBE,MAApC,EAA4CD,CAAC,EAA7C,EAAgD;AAC3C,UAAIE,SAAS,gBACT,oBAAC,SAAD;AACI,QAAA,OAAO,EAAE,MAAI,KAAKC,eAAL,CAAqB,WAArB,CADjB;AAEI,QAAA,UAAU,EAAC,gBAFf;AAGI,QAAA,WAAW,EAAC,QAHhB;AAII,QAAA,OAAO,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJb;AAKI,QAAA,OAAO,EAAG,GAAEC,aAAa,CAAC,WAAD,CAAc,EAL3C;AAMI,QAAA,UAAU,eACN,oBAAC,UAAD;AACI,UAAA,QAAQ,EAAG,gBADf;AAEI,UAAA,KAAK,EAAC,MAFV;AAGI,UAAA,MAAM,EAAC,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAgBJ;AACJ;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACI,yCADJ;AAMH;;AAxC0D","sourcesContent":["import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport AppButton from \"../button/app-button\";\n\n\nexport interface iToggleItem{\n    elements : ReactElement[]\n}\n\ninterface iPROPS {\n    buttons: iToggleMenuItem[];\n    containerClasses : string;\n}\n\ninterface iSTATE{\n    menuType : \"nav\";\n    currentActive : number;\n}\n\nexport interface iToggleMenuItem{\n    element : ReactElement;\n    label : string;\n    toggleItemType : \"nav\" | \"static\";\n    action? : Function;\n}\n\nexport class ToggleMenu extends React.Component<iPROPS, iSTATE>{\n    constructor(props : iPROPS) {\n        super(props);\n        this.state = {\n            menuType : \"nav\",\n            currentActive : 0\n        }\n    }\n\n\n    createButtonBar(){\n        let buttons : ReactElement[] = [];\n\n        for(let i=0; i < this.props.buttons.length; i++){\n             let newButton = (\n                 <AppButton\n                     OnClick={()=>this.manageViewModes(\"grid-view\")}\n                     buttonType=\"transparent-bg\"\n                     tooltipType=\"custom\"\n                     tooltip={<div>Tooltip</div>}\n                     classes={`${selectedClass(\"grid-view\")}`}\n                     iconCenter={(\n                         <CatmanIcon\n                             iconName={`icon-list-view`}\n                             width=\"1rem\"\n                             height=\"100%\"\n                         />\n                     )}\n                 />\n             );\n        }\n    }\n\n    render(){\n        return(\n            <>\n\n\n            </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}