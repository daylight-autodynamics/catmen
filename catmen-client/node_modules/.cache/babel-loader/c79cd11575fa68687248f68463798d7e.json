{"ast":null,"code":"export class ValidationService {\n  constructor(dataSet, validationRules) {\n    this.dataSet = void 0;\n    this.validationRules = void 0;\n    this.dataSet = dataSet;\n    this.validationRules = validationRules;\n  }\n\n  initializeValidations() {\n    setTimeout(() => this.doValidations(), 10000);\n  }\n\n  validationChecks(dataGridItem) {}\n\n  doValidations() {\n    for (let i = 0; i < this.dataSet.length; i++) {\n      for (let j = 0; j < this.dataSet[i].length; j++) {\n        //  console.log(this.dataSet[i][j].columnName);\n        this.validationChecks(this.dataSet[i][j]);\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/services/validations-service/validation.tsx"],"names":["ValidationService","constructor","dataSet","validationRules","initializeValidations","setTimeout","doValidations","validationChecks","dataGridItem","i","length","j"],"mappings":"AAaA,OAAO,MAAMA,iBAAN,CAA8C;AACjDC,EAAAA,WAAW,CAACC,OAAD,EAA8BC,eAA9B,EAAkE;AAAA,SAI7ED,OAJ6E;AAAA,SAK7EC,eAL6E;AACzE,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,eAAL,GAAuBA,eAAvB;AACH;;AAIDC,EAAAA,qBAAqB,GAAE;AACnBC,IAAAA,UAAU,CACN,MAAI,KAAKC,aAAL,EADE,EAEN,KAFM,CAAV;AAIH;;AAEDC,EAAAA,gBAAgB,CAACC,YAAD,EAA8B,CAE7C;;AAEDF,EAAAA,aAAa,GAAE;AACX,SAAI,IAAIG,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAG,KAAKP,OAAL,CAAaQ,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC,WAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAG,KAAKT,OAAL,CAAaO,CAAb,EAAgBC,MAAjC,EAAyCC,CAAC,EAA1C,EAA6C;AAC3C;AACE,aAAKJ,gBAAL,CAAsB,KAAKL,OAAL,CAAaO,CAAb,EAAgBE,CAAhB,CAAtB;AACH;AACJ;AACJ;;AA1BgD","sourcesContent":["import {iDataGridItem} from \"../../_catman-data-types\";\nimport {Worker} from \"worker_threads\";\n\ninterface iValidation {\n    dataSet : iDataGridItem[][];\n    validationRules : validationRule[];\n}\n\ntype validationRule = {\n    columnName : string;\n    validation : Function\n}\n\nexport class ValidationService implements iValidation{\n    constructor(dataSet : iDataGridItem[][], validationRules : validationRule[]) {\n        this.dataSet = dataSet;\n        this.validationRules = validationRules\n    }\n    dataSet : iDataGridItem[][];\n    validationRules : validationRule[];\n\n    initializeValidations(){\n        setTimeout(\n            ()=>this.doValidations(),\n            10000\n        )\n    }\n\n    validationChecks(dataGridItem : iDataGridItem){\n\n    }\n\n    doValidations(){\n        for(let i=0; i < this.dataSet.length; i++){\n            for(let j=0; j < this.dataSet[i].length; j++){\n              //  console.log(this.dataSet[i][j].columnName);\n                this.validationChecks(this.dataSet[i][j]);\n            }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}