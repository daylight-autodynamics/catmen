{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/_common/main-header-area/main-header-area.tsx\";\nimport * as React from \"react\";\nimport StickyThing from \"../../../view-components/sticky-panel/sticky-panel\";\nimport AppButton from \"../../../view-components/button/app-button\";\nimport { CatmanIcon } from \"../../../svg/icons/icons\";\nimport { toolTipContent } from \"../tool-tip-content/content-tool-tips\";\nexport class MainHeaderArea extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuIsOpen: false\n    };\n  }\n\n  navMenu() {\n    if (this.state.menuIsOpen === true) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StickyThing, {\n        enterFromThisSide: \"left\",\n        lastResortClasses: \"catman-main-nav\",\n        animateIn: true,\n        heightIncludeUnits: \"90vh\",\n        widthIncludeUnits: \"auto\",\n        stickyOpen: true,\n        bgColor: \"white\",\n        doAnimation: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, this.props.navigationElement), /*#__PURE__*/React.createElement(AppButton, {\n        tooltipType: \"none\",\n        buttonType: \"from-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => this.handleMenu(),\n        className: \"overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  }\n\n  handleMenu() {\n    let inverse = !this.state.menuIsOpen;\n    this.setState({\n      menuIsOpen: inverse\n    });\n  }\n\n  ribbonMenu() {}\n\n  navButton() {\n    if (this.state.menuIsOpen === false) {\n      return /*#__PURE__*/React.createElement(AppButton, {\n        buttonType: \"from-left\",\n        buttonLabel: \"catalog manager\",\n        OnClick: () => this.handleMenu(),\n        tooltipType: \"custom\",\n        tooltip: toolTipContent.mainNav,\n        toolTipTimeOutInMS: 10000,\n        iconRight: /*#__PURE__*/React.createElement(CatmanIcon, {\n          iconName: \"down-arrow\",\n          classes: \"ui-icon\",\n          height: \"100%\",\n          width: \"100%\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"empty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n  render() {\n    let constructedHeader = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"header-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, this.navButton(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-ribbon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }), this.navMenu()));\n    return constructedHeader;\n  }\n\n}\nexport default MainHeaderArea;","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/_common/main-header-area/main-header-area.tsx"],"names":["React","StickyThing","AppButton","CatmanIcon","toolTipContent","MainHeaderArea","Component","constructor","props","state","menuIsOpen","navMenu","navigationElement","handleMenu","inverse","setState","ribbonMenu","navButton","mainNav","render","constructedHeader"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport StickyThing from \"../../../view-components/sticky-panel/sticky-panel\";\nimport AppButton from \"../../../view-components/button/app-button\";\nimport {ToolTip} from \"../../../view-components/heru-tool-tip/tool-tip\";\nimport {CatmanIcon} from \"../../../svg/icons/icons\";\nimport {ContentToolTips, toolTipContent} from \"../tool-tip-content/content-tool-tips\";\nimport {ToolTipContent} from \"../../../view-components/heru-tool-tip/tool-tip-content\";\n\ninterface iPROPS{\n    sectionTitle? : string;\n    navigationElement? : ReactElement;\n    ribbonElement? : ReactElement;\n}\n\ninterface iSTATE{\n    menuIsOpen : boolean\n}\n\nexport class MainHeaderArea extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n        this.state = {\n            menuIsOpen : false\n        }\n    }\n\n    navMenu(){\n\n        if(this.state.menuIsOpen === true){\n            return (\n                <>\n                    <StickyThing\n                        enterFromThisSide=\"left\"\n                        lastResortClasses={\"catman-main-nav\"}\n                        animateIn={true}\n                        heightIncludeUnits=\"90vh\"\n                        widthIncludeUnits={\"auto\"}\n                        stickyOpen={true}\n                        bgColor={\"white\"}\n                        doAnimation={true}>\n                        {this.props.navigationElement}\n                    </StickyThing>\n                    <AppButton\n                        tooltipType=\"none\"\n                        buttonType=\"from-left\"\n                    />\n                    <div onClick={()=>this.handleMenu()} className=\"overlay\"/>\n                </>\n            );\n        }else{\n            return (<></>);\n        }\n    }\n\n    handleMenu(){\n        let inverse : boolean = !this.state.menuIsOpen;\n        this.setState({menuIsOpen : inverse})\n    }\n\n    ribbonMenu(){\n\n    }\n\n    navButton(){\n        if(this.state.menuIsOpen === false){\n\n            return (\n                <AppButton\n                    buttonType={\"from-left\"}\n                    buttonLabel=\"catalog manager\"\n                    OnClick={()=>this.handleMenu()}\n                    tooltipType=\"custom\"\n                    tooltip={toolTipContent.mainNav}\n                    toolTipTimeOutInMS={10000}\n                    iconRight={\n                        <CatmanIcon\n                            iconName=\"down-arrow\"\n                            classes=\"ui-icon\"\n                            height=\"100%\"\n                            width=\"100%\"\n                        />\n                    }\n                />\n            )\n            }else{\n            return(<div className=\"empty\"></div>);\n        }\n    }\n\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        let constructedHeader = (\n          <>\n              <header className=\"header-area\">\n                  {this.navButton()}\n                  <div className=\"main-ribbon\"></div>\n                  {this.navMenu()}\n              </header>\n          </>\n        );\n\n        return constructedHeader;\n    }\n}\n\nexport default MainHeaderArea;"]},"metadata":{},"sourceType":"module"}