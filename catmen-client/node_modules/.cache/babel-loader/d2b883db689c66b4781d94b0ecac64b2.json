{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/heru-tool-tip/tool-tip.tsx\";\nimport * as React from \"react\";\nimport { win } from \"../../index\";\nexport class WindowLevelCapture {\n  constructor() {\n    this.mousePosition = void 0;\n    this.mousePosition = {\n      x: -1000,\n      y: -1000\n    };\n  }\n\n  get mousePos() {\n    return this.mousePosition;\n  }\n\n  getMousePosition(evt) {\n    this.mousePosition = {\n      x: evt.clientX,\n      y: evt.clientY\n    }; //console.log(\"mouse position\", evt.clientX, evt.clientY);\n  }\n\n  windowEvent() {\n    window.addEventListener('mousemove', evt => this.getMousePosition(evt));\n  }\n\n}\nexport class ToolTip extends React.Component {\n  constructor(props) {\n    super(props);\n    this.intervalID = 0;\n    this.state = {\n      tooltipPosition: {\n        x: -window.innerWidth,\n        y: -window.innerHeight\n      },\n      isHovering: false\n    };\n  }\n\n  updateMousePos() {\n    //Only update if the mouse is moving, check if position values have changed\n    if (this.state.tooltipPosition.x !== win.mousePos.x && this.state.tooltipPosition.y !== win.mousePos.y) {\n      this.setState({\n        tooltipPosition: {\n          x: win.mousePos.x,\n          y: win.mousePos.y\n        }\n      });\n      console.log(\"state changed\");\n    }\n\n    let originalBtnReference = this.props.btnReference;\n  }\n\n  getToolTip() {\n    var _this$props$tooltipSt, _this$props$tooltipSt2;\n\n    console.log(\"button ref from inside tooltip\", this.props.btnReference);\n\n    switch (this.props.tooltipType) {\n      case \"standard\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"app-tool-tip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }\n        }, (_this$props$tooltipSt = this.props.tooltipStandardContent) === null || _this$props$tooltipSt === void 0 ? void 0 : _this$props$tooltipSt.headerText), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }\n        }, (_this$props$tooltipSt2 = this.props.tooltipStandardContent) === null || _this$props$tooltipSt2 === void 0 ? void 0 : _this$props$tooltipSt2.copy)));\n\n      case \"custom\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"app-tool-tip\",\n          style: {\n            width: \"100px\",\n            height: \"100px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }\n        }, \"my custom tooltip\"), this.props.toolTipCustomElement));\n    }\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.updateMousePos(), 10);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  render() {\n    let constructedToolTip = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        border: \"3px solid red\",\n        width: \"1px\",\n        height: \"1px\",\n        position: \"fixed\",\n        top: this.state.tooltipPosition.y,\n        left: this.state.tooltipPosition.x\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, this.getToolTip()), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        right: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, `x: ${this.state.tooltipPosition.x} y: ${this.state.tooltipPosition.y} `));\n    return constructedToolTip;\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/heru-tool-tip/tool-tip.tsx"],"names":["React","win","WindowLevelCapture","constructor","mousePosition","x","y","mousePos","getMousePosition","evt","clientX","clientY","windowEvent","window","addEventListener","ToolTip","Component","props","intervalID","state","tooltipPosition","innerWidth","innerHeight","isHovering","updateMousePos","setState","console","log","originalBtnReference","btnReference","getToolTip","tooltipType","tooltipStandardContent","headerText","copy","width","height","toolTipCustomElement","componentDidMount","setInterval","componentWillUnmount","clearInterval","render","constructedToolTip","border","position","top","left","right"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {win} from \"../../index\";\nimport {ReactElement, RefObject} from \"react\";\n\ninterface iMousePos{\n    x:number;\n    y:number;\n}\n\ninterface iWindow{\n\n}\nexport class WindowLevelCapture implements iWindow{\n    private mousePosition : iMousePos;\n    constructor() {\n        this.mousePosition = {x:-1000,y:-1000};\n    }\n\n    get mousePos(){\n        return this.mousePosition;\n    }\n\n    getMousePosition(evt:MouseEvent){\n        this.mousePosition = { x : evt.clientX, y : evt.clientY};\n        //console.log(\"mouse position\", evt.clientX, evt.clientY);\n\n    }\n\n    windowEvent(){\n        window.addEventListener('mousemove',\n            (evt)=>this.getMousePosition(evt) )\n    }\n}\n\ninterface iPROPS{\n    tooltipType? : \"standard\" | \"custom\";\n    tooltipStandardContent? : {\n        headerText : string,\n        copy : string\n    }\n    toolTipCustomElement? : ReactElement;\n    btnReference? : RefObject<HTMLButtonElement>;\n    linkReference? : RefObject<HTMLAnchorElement>;\n}\n\ninterface iSTATE {\n    tooltipPosition : {\n        x : number,\n        y : number\n    };\n    isHovering : boolean;\n}\n\nexport class ToolTip extends React.Component<iPROPS, iSTATE>{\n    constructor(props:iPROPS) {\n        super(props);\n        this.state ={\n            tooltipPosition : {x:-window.innerWidth, y:-window.innerHeight},\n            isHovering : false\n        }\n    }\n\n    private intervalID : any = 0;\n\n    updateMousePos(){\n        //Only update if the mouse is moving, check if position values have changed\n\n        if(this.state.tooltipPosition.x !== win.mousePos.x && this.state.tooltipPosition.y !== win.mousePos.y){\n            this.setState(\n                {\n                    tooltipPosition: {\n                        x: win.mousePos.x,\n                        y: win.mousePos.y\n                    }\n                });\n            console.log(\"state changed\");\n        }\n\n        let originalBtnReference = this.props.btnReference;\n        \n\n\n\n\n    }\n\n\n\n    getToolTip(){\n        console.log(\"button ref from inside tooltip\", this.props.btnReference);\n        switch(this.props.tooltipType){\n            case \"standard\":\n                return (<>\n                    <div className=\"app-tool-tip\">\n                        <h3>{this.props.tooltipStandardContent?.headerText}</h3>\n                        <p>{this.props.tooltipStandardContent?.copy}</p>\n                    </div>\n                </>);\n\n            case \"custom\":\n                return (<>\n                    <div className=\"app-tool-tip\" style={{width:\"100px\", height:\"100px\"}}>\n                        <h2>my custom tooltip</h2>\n                        {this.props.toolTipCustomElement}\n                    </div>\n                </>);\n        }\n    }\n\n    componentDidMount(): void {\n        this.intervalID = setInterval(()=>this.updateMousePos(), 10);\n    }\n\n    componentWillUnmount(): void {\n        clearInterval(this.intervalID)\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        let constructedToolTip = (\n          <>\n              <div style={{border: \"3px solid red\", width:\"1px\", height:\"1px\", position: \"fixed\", top : this.state.tooltipPosition.y, left: this.state.tooltipPosition.x}} >\n                  {this.getToolTip()}\n              </div>\n                <p style={{position:\"fixed\", top:0, right:0}}>{`x: ${this.state.tooltipPosition.x} y: ${this.state.tooltipPosition.y} `}</p>\n          </>\n        );\n\n        return constructedToolTip;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}