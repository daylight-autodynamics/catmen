{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/catalog-views/catalog-details/catalog-details-view.tsx\";\nimport * as React from \"react\";\nimport { DataGrid } from \"../../../view-components/data-grid/data-grid\";\nimport { catmanData } from \"../../../_sample-data/products-data\";\nimport { TitleArea } from \"../../../view-components/title-area/title-area\";\nimport StickyThing from \"../../../view-components/sticky-panel/sticky-panel\";\nexport class CatalogDetailsView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dataGridRef = React.createRef();\n    this.editDrawer = /*#__PURE__*/React.createElement(React.Fragment, null);\n\n    this.manageSelectionSet = (selectionSet, checkBoxSelections) => {\n      if (checkBoxSelections.length > 0) {\n        this.setState({\n          editDrawerOpen: false,\n          footerOpen: true\n        });\n      } else {\n        this.setState({\n          footerOpen: false\n        });\n      }\n\n      console.log(\"!!!!!!!!!! this is callback selection set\", selectionSet);\n    };\n\n    this.state = {\n      productViewOpen: false,\n      editDrawerOpen: false,\n      footerOpen: false,\n      footerMode: \"default\",\n      selectionSet: []\n    };\n  }\n\n  getProductViewDrawer() {\n    if (this.props.query != \"none\" && this.props.query != null && this.props.query != undefined) {\n      return /*#__PURE__*/React.createElement(StickyThing, {\n        enterFromThisSide: \"right\",\n        lastResortClasses: \"catman-main-nav\",\n        animateIn: true,\n        heightIncludeUnits: \"100vh\",\n        widthIncludeUnits: \"auto\",\n        stickyOpen: true,\n        bgColor: \"#CECECE\",\n        doAnimation: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 22\n        }\n      }, this.props.query));\n    }\n  }\n\n  getEditDrawer() {\n    let drawer = /*#__PURE__*/React.createElement(React.Fragment, null);\n\n    if (this.state.editDrawerOpen === true) {\n      drawer = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StickyThing, {\n        enterFromThisSide: \"bottom\",\n        lastResortClasses: \"catman-edit-drawer\",\n        animateIn: true,\n        heightIncludeUnits: \"40vh\",\n        widthIncludeUnits: \"97vw\",\n        stickyOpen: true,\n        bgColor: \"#CECECE\",\n        doAnimation: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 30\n        }\n      }, \"Drawer!\")));\n    }\n\n    return drawer;\n  }\n\n  manageEditDrawer() {\n    this.setState({\n      editDrawerOpen: true\n    });\n    console.log(\"drawer opens here\");\n  }\n\n  getFooterMenu() {\n    let footer = /*#__PURE__*/React.createElement(React.Fragment, null);\n\n    if (this.state.footerOpen === true) {\n      let buttonBar = /*#__PURE__*/React.createElement(React.Fragment, null);\n      footer = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StickyThing, {\n        enterFromThisSide: \"bottom\",\n        lastResortClasses: \"catman-footer\",\n        animateIn: true,\n        heightIncludeUnits: \"4rem\",\n        widthIncludeUnits: \"auto\",\n        stickyOpen: true,\n        bgColor: \"#CECECE\",\n        doAnimation: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 26\n        }\n      }, \"Footer!\")));\n    }\n\n    return footer;\n  }\n\n  render() {\n    console.log(\"this.props.query\");\n    console.log(this.props.query);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TitleArea, {\n      mainTitle: \"Spreadsheet View\",\n      subTitle: \"My Catalog\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(DataGrid, {\n      data: catmanData.productData,\n      manageParentViews: () => this.manageEditDrawer(),\n      selectionCallback: this.manageSelectionSet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 18\n      }\n    }), this.getEditDrawer(), this.getFooterMenu(), this.getProductViewDrawer());\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/catalog-views/catalog-details/catalog-details-view.tsx"],"names":["React","DataGrid","catmanData","TitleArea","StickyThing","CatalogDetailsView","Component","constructor","props","dataGridRef","createRef","editDrawer","manageSelectionSet","selectionSet","checkBoxSelections","length","setState","editDrawerOpen","footerOpen","console","log","state","productViewOpen","footerMode","getProductViewDrawer","query","undefined","getEditDrawer","drawer","manageEditDrawer","getFooterMenu","footer","buttonBar","render","productData"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {Navigation} from \"../../../view-components/list-menu/intra-app-navigation\";\nimport {MainHeaderArea} from \"../../_common/main-header-area/main-header-area\";\n\n//Configuration data:\nimport {mainNavConfig} from \"../../_catman-configuration/common-app-configuration\";\nimport {CatmanIcon} from \"../../../svg/icons/icons\";\nimport {ToolTipContent} from \"../../../view-components/heru-tool-tip/tool-tip-content\";\nimport {DataGrid, selectionObject} from \"../../../view-components/data-grid/data-grid\";\nimport {catmanData} from \"../../../_sample-data/products-data\";\nimport {TitleArea} from \"../../../view-components/title-area/title-area\";\nimport {Route, RouteComponentProps, Switch, useRouteMatch} from \"react-router-dom\";\nimport StickyThing from \"../../../view-components/sticky-panel/sticky-panel\";\nimport {ReactElement} from \"react\";\nimport {iDataGridItem} from \"../../../view-components/data-grid/data-types-for-data-grid\";\n\n\n\ninterface iPROPS   {\n    message: string;\n    query:string | null;\n}\n\ninterface iSTATE{\n    productViewOpen : boolean;\n    editDrawerOpen : boolean;\n    footerOpen : boolean;\n    footerMode : \"default\" | \"has-group\" | \"no-group\" ;\n    selectionSet : selectionObject[]\n}\n\nexport class CatalogDetailsView extends React.Component<iPROPS, iSTATE>{\n     constructor(props:iPROPS) {\n         super(props);\n         this.state = {\n             productViewOpen : false,\n             editDrawerOpen : false,\n             footerOpen : false,\n             footerMode : \"default\",\n             selectionSet : [],\n         }\n     }\n     dataGridRef = React.createRef();\n     editDrawer : ReactElement = (<></>);\n\n     getProductViewDrawer( ){\n         if(this.props.query != \"none\" && this.props.query != null && this.props.query != undefined ){\n             return(\n                 <StickyThing\n                     enterFromThisSide=\"right\"\n                     lastResortClasses={\"catman-main-nav\"}\n                     animateIn={true}\n                     heightIncludeUnits=\"100vh\"\n                     widthIncludeUnits={\"auto\"}\n                     stickyOpen={true}\n                     bgColor={\"#CECECE\"}\n                     doAnimation={true}\n                 >\n                     <p>{this.props.query}</p>\n\n                 </StickyThing>\n             )\n         }\n     }\n\n     getEditDrawer():ReactElement{\n         let drawer = (<></>);\n             if(this.state.editDrawerOpen === true){\n                 drawer = (\n                     <>\n                         <StickyThing\n                             enterFromThisSide=\"bottom\"\n                             lastResortClasses={\"catman-edit-drawer\"}\n                             animateIn={true}\n                             heightIncludeUnits=\"40vh\"\n                             widthIncludeUnits={\"97vw\"}\n                             stickyOpen={true}\n                             bgColor={\"#CECECE\"}\n                             doAnimation={true}\n                         >\n                             <p>Drawer!</p>\n                         </StickyThing>\n                     </>\n                 );\n             }\n         return drawer;\n     }\n\n     manageEditDrawer( ){\n         this.setState({editDrawerOpen : true});\n         console.log(\"drawer opens here\")\n     }\n\n     getFooterMenu(){\n         let footer = (<></>);\n\n\n\n         if(this.state.footerOpen === true){\n\n             let buttonBar : ReactElement = (<></>);\n             \n             footer = (\n                 <>\n                     <StickyThing\n                         enterFromThisSide=\"bottom\"\n                         lastResortClasses={\"catman-footer\"}\n                         animateIn={true}\n                         heightIncludeUnits=\"4rem\"\n                         widthIncludeUnits={\"auto\"}\n                         stickyOpen={true}\n                         bgColor={\"#CECECE\"}\n                         doAnimation={true}\n                     >\n                         <p>Footer!</p>\n                     </StickyThing>\n                 </>\n             );\n         }\n         return footer;\n     }\n\n     manageSelectionSet = (selectionSet : iDataGridItem[], checkBoxSelections : number[] )=>{\n        if(checkBoxSelections.length > 0){\n            this.setState({editDrawerOpen : false, footerOpen : true});\n        }else{\n            this.setState({footerOpen : false});\n        }\n        console.log(\"!!!!!!!!!! this is callback selection set\",selectionSet);\n     };\n\n     render(){\n            console.log(\"this.props.query\");\n            console.log(this.props.query);\n\n         return (\n             <>\n                 <TitleArea mainTitle=\"Spreadsheet View\" subTitle=\"My Catalog\" />\n                 <DataGrid\n                     data={catmanData.productData}\n                     manageParentViews={()=>this.manageEditDrawer()}\n                     selectionCallback={this.manageSelectionSet}\n                 />\n                 {this.getEditDrawer() }\n                 {this.getFooterMenu() }\n                 {this.getProductViewDrawer()}\n             </>\n         )\n     }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}