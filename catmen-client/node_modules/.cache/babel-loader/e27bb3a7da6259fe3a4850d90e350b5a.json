{"ast":null,"code":"var _jsxFileName = \"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/catalog-views/catalog-details/catalog-details-view.tsx\";\nimport * as React from \"react\";\nimport { DataGrid } from \"../../../view-components/data-grid/data-grid\";\nimport { catmanData } from \"../../../_sample-data/products-data\";\nimport { TitleArea } from \"../../../view-components/title-area/title-area\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport StickyThing from \"../../../view-components/sticky-panel/sticky-panel\";\nexport let singleProductView = () => {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let match = useRouteMatch();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"DDDDD\"), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:bla`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StickyThing, {\n    enterFromThisSide: \"right\",\n    lastResortClasses: \"catman-main-nav\",\n    animateIn: true,\n    heightIncludeUnits: \"100vh\",\n    widthIncludeUnits: \"auto\",\n    stickyOpen: true,\n    bgColor: \"#CECECE\",\n    doAnimation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, match)))));\n};\nexport let CatalogDetailsView = () => {\n  let match = useRouteMatch();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TitleArea, {\n    mainTitle: \"Detailed Spreadsheet View\",\n    subTitle: \"My Catalog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:bla`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StickyThing, {\n    enterFromThisSide: \"right\",\n    lastResortClasses: \"catman-main-nav\",\n    animateIn: true,\n    heightIncludeUnits: \"100vh\",\n    widthIncludeUnits: \"auto\",\n    stickyOpen: true,\n    bgColor: \"#CECECE\",\n    doAnimation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 30\n    }\n  }, \"dddd\")))), /*#__PURE__*/React.createElement(DataGrid, {\n    data: catmanData.productData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/views/catalog-views/catalog-details/catalog-details-view.tsx"],"names":["React","DataGrid","catmanData","TitleArea","Route","Switch","useRouteMatch","StickyThing","singleProductView","match","path","CatalogDetailsView","productData"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAQA,SAAQC,QAAR,QAAuB,8CAAvB;AACA,SAAQC,UAAR,QAAyB,qCAAzB;AACA,SAAQC,SAAR,QAAwB,gDAAxB;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,aAAvB,QAA2C,kBAA3C;AACA,OAAOC,WAAP,MAAwB,oDAAxB;AAUA,OAAO,IAAIC,iBAAiB,GAAG,MAAI;AAC/B;AACA,MAAIC,KAAK,GAAGH,aAAa,EAAzB;AAEA,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,iBAAiB,EAAC,OADtB;AAEI,IAAA,iBAAiB,EAAE,iBAFvB;AAGI,IAAA,SAAS,EAAE,IAHf;AAII,IAAA,kBAAkB,EAAC,OAJvB;AAKI,IAAA,iBAAiB,EAAE,MALvB;AAMI,IAAA,UAAU,EAAE,IANhB;AAOI,IAAA,OAAO,EAAE,SAPb;AAQI,IAAA,WAAW,EAAE,IARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAJ,CAVJ,CADJ,CADJ,CAFJ,CADJ;AAqBH,CAzBM;AA2BP,OAAO,IAAIE,kBAAkB,GAAG,MAAI;AAChC,MAAIF,KAAK,GAAGH,aAAa,EAAzB;AACI,sBACI,uDACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,2BAArB;AAAiD,IAAA,QAAQ,EAAC,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,iBAAiB,EAAC,OADtB;AAEI,IAAA,iBAAiB,EAAE,iBAFvB;AAGI,IAAA,SAAS,EAAE,IAHf;AAII,IAAA,kBAAkB,EAAC,OAJvB;AAKI,IAAA,iBAAiB,EAAE,MALvB;AAMI,IAAA,UAAU,EAAE,IANhB;AAOI,IAAA,OAAO,EAAE,SAPb;AAQI,IAAA,WAAW,EAAE,IARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVL,CADJ,CADJ,CAFJ,eAmBI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAER,UAAU,CAACU,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,CADJ;AAwBP,CA1BM","sourcesContent":["import * as React from \"react\";\nimport {Navigation} from \"../../../view-components/list-menu/intra-app-navigation\";\nimport {MainHeaderArea} from \"../../_common/main-header-area/main-header-area\";\n\n//Configuration data:\nimport {mainNavConfig} from \"../../_catman-configuration/common-app-configuration\";\nimport {CatmanIcon} from \"../../../svg/icons/icons\";\nimport {ToolTipContent} from \"../../../view-components/heru-tool-tip/tool-tip-content\";\nimport {DataGrid} from \"../../../view-components/data-grid/data-grid\";\nimport {catmanData} from \"../../../_sample-data/products-data\";\nimport {TitleArea} from \"../../../view-components/title-area/title-area\";\nimport {Route, Switch, useRouteMatch} from \"react-router-dom\";\nimport StickyThing from \"../../../view-components/sticky-panel/sticky-panel\";\n\ninterface iPROPS {\n    message: string;\n}\n\ninterface iSTATE{\n\n}\n\nexport let singleProductView = ()=>{\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    let match = useRouteMatch();\n\n    return(\n        <>\n            <div>DDDDD</div>\n            <Switch>\n                <Route path={`${match.path}/:bla`}>\n                    <StickyThing\n                        enterFromThisSide=\"right\"\n                        lastResortClasses={\"catman-main-nav\"}\n                        animateIn={true}\n                        heightIncludeUnits=\"100vh\"\n                        widthIncludeUnits={\"auto\"}\n                        stickyOpen={true}\n                        bgColor={\"#CECECE\"}\n                        doAnimation={true}\n                    >\n                        <p>{match}</p>\n                    </StickyThing>\n                </Route>\n            </Switch>\n        </>\n    )\n}\n\nexport let CatalogDetailsView = ()=>{\n    let match = useRouteMatch();\n        return (\n            <>\n                <TitleArea mainTitle=\"Detailed Spreadsheet View\" subTitle=\"My Catalog\" />\n                <Switch>\n                    <Route path={`${match.path}/:bla`}>\n                        <StickyThing\n                            enterFromThisSide=\"right\"\n                            lastResortClasses={\"catman-main-nav\"}\n                            animateIn={true}\n                            heightIncludeUnits=\"100vh\"\n                            widthIncludeUnits={\"auto\"}\n                            stickyOpen={true}\n                            bgColor={\"#CECECE\"}\n                            doAnimation={true}\n                        >\n                             <p>dddd</p>\n                        </StickyThing>\n                    </Route>\n                </Switch>\n\n                <DataGrid data={catmanData.productData} />\n            </>\n        )\n\n}\n"]},"metadata":{},"sourceType":"module"}