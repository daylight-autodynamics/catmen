{"ast":null,"code":"import { ProductsData } from \"../_sample-data/products-data\";\nexport class ProductDataService {\n  constructor(productData) {\n    this.productData = [];\n\n    if (productData != null) {\n      this.productData = productData;\n    }\n  }\n\n  initialize() {\n    this.getProducts();\n    this.getColumns();\n  }\n\n  getProducts() {\n    let products = new ProductsData(); //replace with fetch later\n\n    this.productData = products.productData;\n  }\n\n  getColumns() {\n    for (let i = 0; i < this.productData.length; i++) {\n      if (i === 0) {}\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/services/product-data-service.tsx"],"names":["ProductsData","ProductDataService","constructor","productData","initialize","getProducts","getColumns","products","i","length"],"mappings":"AAEA,SAAQA,YAAR,QAA2B,+BAA3B;AAWA,OAAO,MAAMC,kBAAN,CAAuD;AAE1DC,EAAAA,WAAW,CAACC,WAAD,EAAkC;AAAA,SAD7CA,WAC6C,GADX,EACW;;AACzC,QAAGA,WAAW,IAAI,IAAlB,EAAuB;AACnB,WAAKA,WAAL,GAAmBA,WAAnB;AACH;AACJ;;AAEDC,EAAAA,UAAU,GAAE;AACR,SAAKC,WAAL;AACA,SAAKC,UAAL;AACH;;AAEAD,EAAAA,WAAW,GAAE;AACV,QAAIE,QAAQ,GAAG,IAAIP,YAAJ,EAAf,CADU,CAEV;;AACA,SAAKG,WAAL,GAAoBI,QAAQ,CAACJ,WAA7B;AACH;;AAEDG,EAAAA,UAAU,GAAE;AACR,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKL,WAAL,CAAiBM,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAI7C,UAAGA,CAAC,KAAG,CAAP,EAAS,CAER;AACJ;AACJ;;AA5ByD","sourcesContent":["import {iDataGridItem} from \"../view-components/data-grid/data-types-for-data-grid\";\n\nimport {ProductsData} from \"../_sample-data/products-data\";\nimport {ReactElement} from \"react\";\n\nimport {toolTipType} from \"../view-components/heru-tool-tip/tool-tip\";\n\ninterface iProductDataService{\n    productData? : iDataGridItem[][];\n}\n\n\n\nexport class ProductDataService implements iProductDataService{\n    productData : iDataGridItem[][] = [];\n    constructor(productData?: iDataGridItem[][]) {\n        if(productData != null){\n            this.productData = productData;\n        }\n    }\n\n    initialize(){\n        this.getProducts();\n        this.getColumns();\n    }\n\n     getProducts(){\n        let products = new ProductsData();\n        //replace with fetch later\n        this.productData =  products.productData;\n    }\n\n    getColumns(){\n        for(let i = 0; i < this.productData.length; i++ ){\n\n\n\n            if(i===0){\n\n            }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}