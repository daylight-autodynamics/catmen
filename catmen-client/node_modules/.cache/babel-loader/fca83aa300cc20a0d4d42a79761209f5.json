{"ast":null,"code":"import _classCallCheck from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from\"react\";import AppButton from\"../button/app-button\";export var ToggleMenu=/*#__PURE__*/function(_React$Component){_inherits(ToggleMenu,_React$Component);var _super=_createSuper(ToggleMenu);function ToggleMenu(props){var _this;_classCallCheck(this,ToggleMenu);_this=_super.call(this,props);_this.state={menuType:\"nav\",currentActive:0};return _this;}_createClass(ToggleMenu,[{key:\"checkActive\",value:function checkActive(index){if(index===this.state.currentActive){return\"active\";}else{return\"\";}}},{key:\"actions\",value:function actions(index){this.setState({currentActive:index});if(this.props.buttons[index].function!=undefined){// @ts-ignore\nthis.props.buttons[index].function();}}},{key:\"createButtonBar\",value:function createButtonBar(){var _this2=this;var buttons=[];var _loop=function _loop(i){var newButton=/*#__PURE__*/React.createElement(AppButton,{OnClick:function OnClick(){return _this2.actions(i);},buttonType:\"transparent-bg\",buttonLabel:_this2.props.buttons[i].label,tooltipType:\"custom\",tooltip:_this2.props.buttons[i].toolTip,classes:\"\".concat(_this2.checkActive(i),\" \").concat(_this2.props.buttons[i].classes),iconCenter:_this2.props.buttons[i].icon});buttons.push(newButton);};for(var i=0;i<this.props.buttons.length;i++){_loop(i);}return/*#__PURE__*/React.createElement(\"div\",{className:\"button-bar\"},buttons);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"toggle-container\"},this.createButtonBar());}}]);return ToggleMenu;}(React.Component);","map":{"version":3,"sources":["/Users/hr145a/Documents/WayfairCodeBases/CatMan/catmen-client/src/view-components/toggle-menu/toggle-component.tsx"],"names":["React","AppButton","ToggleMenu","props","state","menuType","currentActive","index","setState","buttons","function","undefined","i","newButton","actions","label","toolTip","checkActive","classes","icon","push","length","createButtonBar","Component"],"mappings":"gsBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAGA,MAAOC,CAAAA,SAAP,KAAsB,sBAAtB,CA2BA,UAAaC,CAAAA,UAAb,oHACI,oBAAYC,KAAZ,CAA4B,4CACxB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACTC,QAAQ,CAAG,KADF,CAETC,aAAa,CAAG,CAFP,CAAb,CAFwB,aAM3B,CAPL,uEASgBC,KAThB,CAS+B,CACvB,GAAIA,KAAK,GAAK,KAAKH,KAAL,CAAWE,aAAzB,CAAuC,CACnC,MAAO,QAAP,CACH,CAFD,IAEM,CACF,MAAO,EAAP,CACH,CACJ,CAfL,wCAiBYC,KAjBZ,CAiB2B,CACnB,KAAKC,QAAL,CAAc,CAACF,aAAa,CAAGC,KAAjB,CAAd,EAEA,GAAG,KAAKJ,KAAL,CAAWM,OAAX,CAAmBF,KAAnB,EAA0BG,QAA1B,EAAsCC,SAAzC,CAAmD,CAC/C;AACA,KAAKR,KAAL,CAAWM,OAAX,CAAmBF,KAAnB,EAA0BG,QAA1B,GACH,CACJ,CAxBL,yDA0BkC,iBAC1B,GAAID,CAAAA,OAAwB,CAAG,EAA/B,CAD0B,yBAGlBG,CAHkB,EAIrB,GAAIC,CAAAA,SAAS,cACT,oBAAC,SAAD,EACI,OAAO,CAAE,yBAAI,CAAA,MAAI,CAACC,OAAL,CAAaF,CAAb,CAAJ,EADb,CAEI,UAAU,CAAC,gBAFf,CAGI,WAAW,CAAE,MAAI,CAACT,KAAL,CAAWM,OAAX,CAAmBG,CAAnB,EAAsBG,KAHvC,CAII,WAAW,CAAC,QAJhB,CAKI,OAAO,CAAE,MAAI,CAACZ,KAAL,CAAWM,OAAX,CAAmBG,CAAnB,EAAsBI,OALnC,CAMI,OAAO,WAAK,MAAI,CAACC,WAAL,CAAiBL,CAAjB,CAAL,aAA4B,MAAI,CAACT,KAAL,CAAWM,OAAX,CAAmBG,CAAnB,EAAsBM,OAAlD,CANX,CAOI,UAAU,CAAE,MAAI,CAACf,KAAL,CAAWM,OAAX,CAAmBG,CAAnB,EAAsBO,IAPtC,EADJ,CAWAV,OAAO,CAACW,IAAR,CAAaP,SAAb,EAfqB,EAG1B,IAAI,GAAID,CAAAA,CAAC,CAAC,CAAV,CAAaA,CAAC,CAAG,KAAKT,KAAL,CAAWM,OAAX,CAAmBY,MAApC,CAA4CT,CAAC,EAA7C,CAAgD,OAAxCA,CAAwC,EAa/C,CACD,mBAAO,2BAAK,SAAS,CAAC,YAAf,EAA6BH,OAA7B,CAAP,CACH,CA5CL,uCA8CY,CACJ,mBACI,2BAAK,SAAS,CAAC,kBAAf,EACK,KAAKa,eAAL,EADL,CADJ,CAKH,CApDL,wBAAgCtB,KAAK,CAACuB,SAAtC","sourcesContent":["import * as React from \"react\";\nimport {ReactElement} from \"react\";\nimport {CatmanIcon} from \"../../svg/icons/icons\";\nimport AppButton from \"../button/app-button\";\n\n\nexport interface iToggleItem{\n    elements : ReactElement[]\n}\n\ninterface iPROPS {\n    buttons: iToggleMenuItem[];\n    containerClasses : string;\n}\n\ninterface iSTATE{\n    menuType : \"nav\";\n    currentActive : number;\n}\n\nexport interface iToggleMenuItem{\n    element : ReactElement;\n    label : string;\n    toggleItemType : \"nav\" | \"static\";\n    function? : Function;\n    icon? : ReactElement;\n    classes? : string;\n    toolTip : ReactElement;\n}\n\nexport class ToggleMenu extends React.Component<iPROPS, iSTATE>{\n    constructor(props : iPROPS) {\n        super(props);\n        this.state = {\n            menuType : \"nav\",\n            currentActive : 0\n        }\n    }\n\n    checkActive(index : number){\n        if (index === this.state.currentActive){\n            return \"active\";\n        }else {\n            return \"\";\n        }\n    }\n\n    actions(index : number){\n        this.setState({currentActive : index});\n\n        if(this.props.buttons[index].function != undefined){\n            // @ts-ignore\n            this.props.buttons[index].function();\n        }\n    }\n\n    createButtonBar():ReactElement{\n        let buttons : ReactElement[] = [];\n\n        for(let i=0; i < this.props.buttons.length; i++){\n             let newButton = (\n                 <AppButton\n                     OnClick={()=>this.actions(i)}\n                     buttonType=\"transparent-bg\"\n                     buttonLabel={this.props.buttons[i].label}\n                     tooltipType=\"custom\"\n                     tooltip={this.props.buttons[i].toolTip}\n                     classes={`${this.checkActive(i)} ${this.props.buttons[i].classes}`}\n                     iconCenter={this.props.buttons[i].icon}\n                 />\n             );\n             buttons.push(newButton);\n        }\n        return <div className=\"button-bar\">{buttons}</div>;\n    }\n\n    render(){\n        return(\n            <div className=\"toggle-container\">\n                {this.createButtonBar()}\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}